{
    "scope": "source.cfg",
    "completions": [
    //#########################################################################################################################################
    //#########################################################################################################################################
        { "trigger": "blarg",       "contents": "${1:blarg} = [$0]" },


    //#########################################################################################################################################
        { "trigger": "guialign",    "contents": "guialign ${1:0} [$0]" },
        { "trigger": "guilist",     "contents": "guilist [$0]" },
        { "trigger": "nodebug",     "contents": "nodebug [$0]" },


    //#########################################################################################################################################
        { "trigger": "at",          "contents": "(at ${1:AAA} ${2:Index}) $0" },
        { "trigger": "if",          "contents": "if (${1:=} ${2:AAA} ${3:BBB}) [\n\t$0\n][\n\t\n]" },


    //#########################################################################################################################################
        { "trigger": "loop",        "contents": "loop ${1:Index} ${2:EndIndex_PlusOne} [\n\t$0\n]" },
        { "trigger": "while",       "contents": "while [<= ${1:Index} ${2:EndIndex}] [\n\t$0\n\t${1:Index} = (+ ${1:Index} 1)\n]" },


    //#########################################################################################################################################
        { "trigger": "sub",      "contents": "(- ${1:AAA} ${2:BBB}) $0" },
        { "trigger": "add",      "contents": "(+ ${1:AAA} ${2:BBB}) $0" },
        { "trigger": "mul",      "contents": "(* ${1:AAA} ${2:BBB}) $0" },

        { "trigger": "left",     "contents": "(<< ${1:AAA} ${2:BBB}) $0" },
        { "trigger": "right",    "contents": "(>> ${1:AAA} ${2:BBB}) $0" },
        { "trigger": "and",      "contents": "(&& ${1:AAA} ${2:BBB}) $0" },
        { "trigger": "or",       "contents": "(|| ${1:AAA} ${2:BBB}) $0" },
        { "trigger": "not",      "contents": "(! ${1:AAA} ${2:BBB}) $0" },

        { "trigger": "equals",   "contents": "(= ${1:AAA} ${2:BBB}) $0" },

        { "trigger": "condi",    "contents": "(? ${1:AAA} ${2:BBB}) $0" },

        { "trigger": "div",      "contents": "(div ${1:AAA} ${2:BBB})" },
        { "trigger": "divf",     "contents": "(divf ${1:AAA} ${2:BBB})" },
        { "trigger": "mod",      "contents": "(mod ${1:AAA} ${2:BBB})" },
        { "trigger": "modf",     "contents": "(modf ${1:AAA} ${2:BBB})" },
        { "trigger": "pow",      "contents": "(pow ${1:AAA} ${2:BBB})" },
        { "trigger": "sqrt",     "contents": "(sqrt ${1:AAA} ${2:BBB})" },

        { "trigger": "cos",      "contents": "(cos ${1:AAA} ${2:BBB})" },
        { "trigger": "acos",     "contents": "(acos ${1:AAA} ${2:BBB})" },
        { "trigger": "sin",      "contents": "(sin ${1:AAA} ${2:BBB})" },
        { "trigger": "asin",     "contents": "(asin ${1:AAA} ${2:BBB})" },
        { "trigger": "tan",      "contents": "(tan ${1:AAA} ${2:BBB})" },
        { "trigger": "atan",     "contents": "(atan ${1:AAA} ${2:BBB})" },
        { "trigger": "atan2",    "contents": "(atan2 ${1:AAA} ${2:BBB})" },

        { "trigger": "abs",      "contents": "(abs ${1:AAA} ${2:BBB})" },
        { "trigger": "absf",     "contents": "(absf ${1:AAA} ${2:BBB})" },
        { "trigger": "ceil",     "contents": "(ceil ${1:AAA} ${2:BBB})" },
        { "trigger": "floor",    "contents": "(floor ${1:AAA} ${2:BBB})" },
        { "trigger": "round",    "contents": "(round ${1:AAA} ${2:BBB})" },

        { "trigger": "min",      "contents": "(min ${1:AAA} ${2:BBB})" },
        { "trigger": "minf",     "contents": "(minf ${1:AAA} ${2:BBB})" },
        { "trigger": "max",      "contents": "(max ${1:AAA} ${2:BBB})" },
        { "trigger": "maxf",     "contents": "(maxf ${1:AAA} ${2:BBB})" },

        { "trigger": "exp",      "contents": "(exp ${1:AAA} ${2:BBB})" },
        { "trigger": "loge",     "contents": "(loge ${1:AAA} ${2:BBB})" },
        { "trigger": "log2",     "contents": "(log2 ${1:AAA} ${2:BBB})" },
        { "trigger": "log10",    "contents": "(log10 ${1:AAA} ${2:BBB})" }


    //#########################################################################################################################################
    //#########################################################################################################################################
    ]
}

//    \\$    <-- Escaped $ symbol.
