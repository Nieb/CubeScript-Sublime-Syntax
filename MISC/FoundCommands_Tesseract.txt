###############################################################################################################################################################################################
###############################################################################################################################################################################################

What: Dump of all Commands & Variables
From: Tesseract SVN
When: 2023-01-07 04:25:35

###############################################################################################################################################################################################
###############################################################################################################################################################################################


CASECOMMAND
    engine\command.cpp:4241             CASECOMMAND(case, "i", int, args[0].getint(), args[i].type == VAL_NULL || args[i].getint() == val);
    engine\command.cpp:4242             CASECOMMAND(casef, "f", float, args[0].getfloat(), args[i].type == VAL_NULL || args[i].getfloat() == val);
    engine\command.cpp:4243             CASECOMMAND(cases, "s", const char *, args[0].getstr(), args[i].type == VAL_NULL || !strcmp(args[i].getstr(), val));


CMPFCMD
    engine\command.cpp:4121             CMPFCMD(!=);
    engine\command.cpp:4122             CMPFCMD(<);
    engine\command.cpp:4123             CMPFCMD(>);
    engine\command.cpp:4124             CMPFCMD(<=);
    engine\command.cpp:4125             CMPFCMD(>=);


CMPFCMDN
    engine\command.cpp:4120             CMPFCMDN(=, ==);


CMPICMD
    engine\command.cpp:4102             CMPICMD(!=);
    engine\command.cpp:4103             CMPICMD(<);
    engine\command.cpp:4104             CMPICMD(>);
    engine\command.cpp:4105             CMPICMD(<=);
    engine\command.cpp:4106             CMPICMD(>=);


CMPICMDN
    engine\command.cpp:4101             CMPICMDN(=, ==);


CMPSCMD
    engine\command.cpp:4284             CMPSCMD(strcmp, ==);
    engine\command.cpp:4285             CMPSCMD(=s, ==);
    engine\command.cpp:4286             CMPSCMD(!=s, !=);
    engine\command.cpp:4287             CMPSCMD(<s, <);
    engine\command.cpp:4288             CMPSCMD(>s, >);
    engine\command.cpp:4289             CMPSCMD(<=s, <=);
    engine\command.cpp:4290             CMPSCMD(>=s, >=);


COMMAND
    engine\blend.cpp:693                COMMAND(dumpblendtexs, "");
    engine\blend.cpp:890                COMMAND(delblendbrush, "s");
    engine\blend.cpp:920                COMMAND(addblendbrush, "ss");
    engine\blend.cpp:1025               COMMAND(clearblendmapsel, "");
    engine\blend.cpp:1039               COMMAND(invertblendmapsel, "");
    engine\blend.cpp:1054               COMMAND(showblendmap, "");
    engine\client.cpp:185               COMMAND(reconnect, "s");
    engine\command.cpp:473              COMMAND(resetvar, "s");
    engine\command.cpp:3214             COMMAND(writecfg, "s");
    engine\command.cpp:3224             COMMAND(changedvars, "");
    engine\command.cpp:3415             COMMAND(concat, "V");
    engine\command.cpp:3421             COMMAND(concatword, "V");
    engine\command.cpp:3480             COMMAND(format, "V");
    engine\command.cpp:3573             COMMAND(at, "si1V");
    engine\command.cpp:3580             COMMAND(substr, "siiN");
    engine\command.cpp:3605             COMMAND(chopstr, "sis");
    engine\command.cpp:3616             COMMAND(sublist, "siiN");
    engine\command.cpp:3659             COMMAND(listfind, "rse");
    engine\command.cpp:3675             COMMAND(listassoc, "rse");
    engine\command.cpp:3720             COMMAND(looplist, "rse");
    engine\command.cpp:3734             COMMAND(loopsublist, "rsiie");
    engine\command.cpp:3749             COMMAND(looplist2, "rrse");
    engine\command.cpp:3765             COMMAND(looplist3, "rrrse");
    engine\command.cpp:3815             COMMAND(listfilter, "rse");
    engine\command.cpp:3831             COMMAND(listcount, "rse");
    engine\command.cpp:3855             COMMAND(prettylist, "ss");
    engine\command.cpp:3917             COMMAND(listsplice, "ssii");
    engine\command.cpp:4059             COMMAND(sortlist, "srree");
    engine\command.cpp:4378             COMMAND(strsplice, "ssii");
    engine\console.cpp:208              COMMAND(keymap, "is");
    engine\console.cpp:310              COMMAND(inputcommand, "ssss");
    engine\console.cpp:431              COMMAND(onrelease, "s");
    engine\main.cpp:126                 COMMAND(quit, "");
    engine\main.cpp:677                 COMMAND(resetgl, "");
    engine\master.cpp:43                COMMAND(adduser, "ss");
    engine\master.cpp:50                COMMAND(clearusers, "");
    engine\master.cpp:60                COMMAND(clearbans, "");
    engine\menus.cpp:52                 COMMAND(applychanges, "");
    engine\movie.cpp:1164               COMMAND(movie, "s");
    engine\octa.cpp:184                 COMMAND(printcube, "");
    engine\octaedit.cpp:229             COMMAND(entcancel, "");
    engine\octaedit.cpp:230             COMMAND(cubecancel, "");
    engine\octaedit.cpp:231             COMMAND(cancelsel, "");
    engine\octaedit.cpp:232             COMMAND(reorient, "");
    engine\octaedit.cpp:233             COMMAND(selextend, "");
    engine\octaedit.cpp:253             COMMAND(setselpos, "iii");
    engine\octaedit.cpp:261             COMMAND(movesel, "ii");
    engine\octaedit.cpp:768             COMMAND(clearundos, "");
    engine\octaedit.cpp:1225            COMMAND(delprefab, "s");
    engine\octaedit.cpp:1253            COMMAND(saveprefab, "s");
    engine\octaedit.cpp:1296            COMMAND(pasteprefab, "s");
    engine\octaedit.cpp:1540            COMMAND(copy, "");
    engine\octaedit.cpp:1541            COMMAND(pastehilite, "");
    engine\octaedit.cpp:1542            COMMAND(paste, "");
    engine\octaedit.cpp:1614            COMMAND(clearhbrush, "");
    engine\octaedit.cpp:1628            COMMAND(hbrushvert, "iii");
    engine\octaedit.cpp:2081            COMMAND(pushsel, "i");
    engine\octaedit.cpp:2082            COMMAND(editface, "ii");
    engine\octaedit.cpp:2083            COMMAND(delcube, "");
    engine\octaedit.cpp:2219            COMMAND(vdelta, "e");
    engine\octaedit.cpp:2229            COMMAND(vrotate, "i");
    engine\octaedit.cpp:2240            COMMAND(voffset, "ii");
    engine\octaedit.cpp:2256            COMMAND(vscroll, "ff");
    engine\octaedit.cpp:2272            COMMAND(vscale, "f");
    engine\octaedit.cpp:2288            COMMAND(vlayer, "i");
    engine\octaedit.cpp:2304            COMMAND(vdetail, "i");
    engine\octaedit.cpp:2316            COMMAND(valpha, "ff");
    engine\octaedit.cpp:2332            COMMAND(vcolor, "fff");
    engine\octaedit.cpp:2353            COMMAND(vrefract, "ffff");
    engine\octaedit.cpp:2367            COMMAND(vreset, "");
    engine\octaedit.cpp:2381            COMMAND(vshaderparam, "sfFFf");
    engine\octaedit.cpp:2564            COMMAND(gettex, "");
    engine\octaedit.cpp:2565            COMMAND(getcurtex, "");
    engine\octaedit.cpp:2566            COMMAND(getseltex, "");
    engine\octaedit.cpp:2568            COMMAND(gettexname, "ii");
    engine\octaedit.cpp:2579            COMMAND(getslottex, "i");
    engine\octaedit.cpp:2726            COMMAND(flip, "");
    engine\octaedit.cpp:2727            COMMAND(rotate, "i");
    engine\octaedit.cpp:2811            COMMAND(editmat, "ss");
    engine\octarender.cpp:1764          COMMAND(recalc, "");
    engine\physics.cpp:1649             COMMAND(phystest, "");
    engine\pvs.cpp:1022                 COMMAND(clearpvs, "");
    engine\pvs.cpp:1097                 COMMAND(testpvs, "i");
    engine\pvs.cpp:1180                 COMMAND(genpvs, "i");
    engine\pvs.cpp:1188                 COMMAND(pvsstats, "");
    engine\rendermodel.cpp:50           COMMAND(mdlcullface, "i");
    engine\rendermodel.cpp:57           COMMAND(mdlcolor, "fff");
    engine\rendermodel.cpp:64           COMMAND(mdlcollide, "i");
    engine\rendermodel.cpp:71           COMMAND(mdlellipsecollide, "i");
    engine\rendermodel.cpp:82           COMMAND(mdltricollide, "s");
    engine\rendermodel.cpp:90           COMMAND(mdlspec, "f");
    engine\rendermodel.cpp:97           COMMAND(mdlgloss, "i");
    engine\rendermodel.cpp:104          COMMAND(mdlalphatest, "f");
    engine\rendermodel.cpp:111          COMMAND(mdldither, "i");
    engine\rendermodel.cpp:118          COMMAND(mdldepthoffset, "i");
    engine\rendermodel.cpp:127          COMMAND(mdlglow, "fff");
    engine\rendermodel.cpp:134          COMMAND(mdlenvmap, "ffs");
    engine\rendermodel.cpp:141          COMMAND(mdlfullbright, "f");
    engine\rendermodel.cpp:148          COMMAND(mdlshader, "s");
    engine\rendermodel.cpp:157          COMMAND(mdlspin, "fff");
    engine\rendermodel.cpp:165          COMMAND(mdlscale, "f");
    engine\rendermodel.cpp:172          COMMAND(mdltrans, "fff");
    engine\rendermodel.cpp:179          COMMAND(mdlyaw, "f");
    engine\rendermodel.cpp:186          COMMAND(mdlpitch, "f");
    engine\rendermodel.cpp:193          COMMAND(mdlroll, "f");
    engine\rendermodel.cpp:200          COMMAND(mdlshadow, "i");
    engine\rendermodel.cpp:207          COMMAND(mdlalphashadow, "i");
    engine\rendermodel.cpp:216          COMMAND(mdlbb, "fff");
    engine\rendermodel.cpp:223          COMMAND(mdlextendbb, "fff");
    engine\rendermodel.cpp:230          COMMAND(mdlname, "");
    engine\rendermodel.cpp:252          COMMAND(rdvert, "ffff");
    engine\rendermodel.cpp:259          COMMAND(rdeye, "i");
    engine\rendermodel.cpp:269          COMMAND(rdtri, "iii");
    engine\rendermodel.cpp:282          COMMAND(rdjoint, "iibbb");
    engine\rendermodel.cpp:293          COMMAND(rdlimitdist, "iiff");
    engine\rendermodel.cpp:305          COMMAND(rdlimitrot, "iifffff");
    engine\rendermodel.cpp:312          COMMAND(rdanimjoints, "i");
    engine\rendermodel.cpp:337          COMMAND(mapmodel, "s");
    engine\rendermodel.cpp:338          COMMAND(mapmodelreset, "i");
    engine\rendermodel.cpp:480          COMMAND(clearmodel, "s");
    engine\rendertext.cpp:97            COMMAND(fontborder, "ff");
    engine\rendertext.cpp:98            COMMAND(fontoutline, "ff");
    engine\rendertext.cpp:99            COMMAND(fontoffset, "s");
    engine\rendertext.cpp:100           COMMAND(fontscale, "i");
    engine\rendertext.cpp:101           COMMAND(fonttex, "s");
    engine\rendertext.cpp:102           COMMAND(fontchar, "fffffff");
    engine\rendertext.cpp:103           COMMAND(fontskip, "i");
    engine\rendertext.cpp:126           COMMAND(fontalias, "ss");
    engine\rendertext.cpp:194           COMMAND(tabify, "si");
    engine\server.cpp:1104              COMMAND(startlistenserver, "i");
    engine\server.cpp:1116              COMMAND(stoplistenserver, "");
    engine\serverbrowser.cpp:551        COMMAND(sortservers, "");
    engine\serverbrowser.cpp:719        COMMAND(updatefrommaster, "");
    engine\serverbrowser.cpp:720        COMMAND(initservers, "");
    engine\serverbrowser.cpp:721        COMMAND(refreshservers, "");
    engine\shader.cpp:1085              COMMAND(defershader, "iss");
    engine\shader.cpp:1156              COMMAND(shader, "isss");
    engine\shader.cpp:1185              COMMAND(variantshader, "isissi");
    engine\shader.cpp:1197              COMMAND(setshader, "s");
    engine\shader.cpp:1492              COMMAND(clearpostfx, "");
    engine\shader.cpp:1571              COMMAND(resetshaders, "");
    engine\sound.cpp:452                COMMAND(registersound, "si");
    engine\sound.cpp:455                COMMAND(mapsound, "sii");
    engine\sound.cpp:458                COMMAND(altsound, "si");
    engine\sound.cpp:461                COMMAND(altmapsound, "si");
    engine\sound.cpp:470                COMMAND(soundreset, "");
    engine\sound.cpp:476                COMMAND(mapsoundreset, "");
    engine\sound.cpp:786                COMMAND(resetsound, "");
    engine\texture.cpp:1787             COMMAND(texturereset, "i");
    engine\texture.cpp:1796             COMMAND(materialreset, "");
    engine\texture.cpp:1806             COMMAND(decalreset, "i");
    engine\texture.cpp:2398             COMMAND(texture, "ssiiif");
    engine\texture.cpp:2407             COMMAND(texgrass, "s");
    engine\texture.cpp:2416             COMMAND(texscroll, "ff");
    engine\texture.cpp:2443             COMMAND(texscale, "f");
    engine\texture.cpp:2452             COMMAND(texlayer, "i");
    engine\texture.cpp:2461             COMMAND(texdetail, "i");
    engine\texture.cpp:2471             COMMAND(texalpha, "ff");
    engine\texture.cpp:2480             COMMAND(texcolor, "fff");
    engine\texture.cpp:2493             COMMAND(texrefract, "ffff");
    engine\texture.cpp:2501             COMMAND(texsmooth, "ib");
    engine\texture.cpp:2510             COMMAND(decaldepth, "ff");
    engine\texture.cpp:3298             COMMAND(reloadtex, "s");
    engine\texture.cpp:3693             COMMAND(gendds, "ss");
    engine\texture.cpp:4011             COMMAND(screenshot, "s");
    engine\texture.cpp:4061             COMMAND(flipnormalmapy, "ss");
    engine\texture.cpp:4062             COMMAND(mergenormalmaps, "ss");
    engine\texture.cpp:4063             COMMAND(normalizenormalmap, "ss");
    engine\texture.cpp:4064             COMMAND(removealphachannel, "ss");
    engine\world.cpp:980                COMMAND(entautoview, "i");
    engine\world.cpp:981                COMMAND(entflip, "");
    engine\world.cpp:982                COMMAND(entrotate, "i");
    engine\world.cpp:983                COMMAND(entpush, "i");
    engine\world.cpp:1059               COMMAND(attachent, "");
    engine\world.cpp:1189               COMMAND(newent, "siiiii");
    engine\world.cpp:1190               COMMAND(delent, "");
    engine\world.cpp:1191               COMMAND(dropent, "");
    engine\world.cpp:1192               COMMAND(entcopy, "");
    engine\world.cpp:1193               COMMAND(entpaste, "");
    engine\world.cpp:1194               COMMAND(entreplace, "");
    engine\world.cpp:1250               COMMAND(entset, "siiiii");
    engine\world.cpp:1251               COMMAND(nearestent, "");
    engine\world.cpp:1295               COMMAND(enttype, "sN");
    engine\world.cpp:1296               COMMAND(entattr, "iiN");
    engine\world.cpp:1518               COMMAND(newmap, "i");
    engine\world.cpp:1519               COMMAND(mapenlarge, "");
    engine\world.cpp:1520               COMMAND(shrinkmap, "");
    engine\world.cpp:1527               COMMAND(mapname, "");
    engine\worldio.cpp:177              COMMAND(mapcfgname, "");
    engine\worldio.cpp:912              COMMAND(savemap, "s");
    engine\worldio.cpp:913              COMMAND(savecurrentmap, "");
    engine\worldio.cpp:1009             COMMAND(writeobj, "s");
    engine\worldio.cpp:1120             COMMAND(writecollideobj, "s");
    game\client.cpp:238                 COMMAND(genauthkey, "s");
    game\client.cpp:248                 COMMAND(getpubkey, "s");
    game\client.cpp:263                 COMMAND(saveauthkeys, "");
    game\client.cpp:478                 COMMAND(clearbans, "");
    game\client.cpp:485                 COMMAND(kick, "ss");
    game\client.cpp:533                 COMMAND(setteam, "ss");
    game\client.cpp:542                 COMMAND(hashpwd, "s");
    game\client.cpp:562                 COMMAND(setmaster, "ss");
    game\client.cpp:996                 COMMAND(sayteam, "C");
    game\client.cpp:2117                COMMAND(getmap, "");
    game\client.cpp:2128                COMMAND(stopdemo, "");
    game\client.cpp:2168                COMMAND(listdemos, "");
    game\client.cpp:2193                COMMAND(sendmap, "");
    game\client.cpp:2221                COMMAND(gotosel, "");
    game\game.cpp:52                    COMMAND(follow, "s");
    game\game.cpp:291                   COMMAND(respawn, "");
    game\game.cpp:334                   COMMAND(taunt, "");
    game\scoreboard.cpp:113             COMMAND(refreshscoreboard, "");
    game\server.cpp:588                 COMMAND(maprotationreset, "");
    game\server.cpp:657                 COMMAND(teamkillkickreset, "");
    game\server.cpp:1351                COMMAND(adduser, "ssss");
    game\server.cpp:1357                COMMAND(clearusers, "");
    game\waypoint.cpp:779               COMMAND(delselwaypoints, "");


COMMANDK
    engine\command.cpp:3287             COMMANDK(doargs, ID_DOARGS, "e");


COMMANDN
    engine\command.cpp:3947             COMMANDN(findfile, findfile_, "s");
    engine\command.cpp:4399             COMMANDN(sleep, addsleep, "is");
    engine\command.cpp:4436             COMMANDN(clearsleep, clearsleep_, "i");
    engine\console.cpp:391              COMMANDN(history, history_, "i");
    engine\console.cpp:814              COMMANDN(complete, addfilecomplete, "sss");
    engine\console.cpp:815              COMMANDN(varcomplete, addvarcomplete, "sss");
    engine\console.cpp:816              COMMANDN(listcomplete, addlistcomplete, "ss");
    engine\main.cpp:1063                COMMANDN(getfps, getfps_, "i");
    engine\octaedit.cpp:1543            COMMANDN(undo, editundo, "");
    engine\octaedit.cpp:1544            COMMANDN(redo, editredo, "");
    engine\octaedit.cpp:2562            COMMANDN(edittex, edittex_, "i");
    engine\rendergl.cpp:2631            COMMANDN(loadcrosshair, loadcrosshair_, "si");
    engine\renderlights.cpp:1325        COMMANDN(avglum, getavglum, "N$");
    engine\rendertext.cpp:96            COMMANDN(font, newfont, "ssiii");
    engine\sound.cpp:301                COMMANDN(music, startmusic, "ss");
    engine\texture.cpp:2425             COMMANDN(texoffset, texoffset_, "ii");
    engine\texture.cpp:2434             COMMANDN(texrotate, texrotate_, "i");
    game\client.cpp:993                 COMMANDN(say, toserver, "C");
    game\client.cpp:2210                COMMANDN(goto, gotoplayer, "s");
    game\server.cpp:589                 COMMANDN(maprotation, addmaprotations, "ss2V");
    game\server.cpp:658                 COMMANDN(teamkillkick, addteamkillkick, "sii");


DIVCMD
    engine\command.cpp:4154             DIVCMD(div, i, int, val /= val2);
    engine\command.cpp:4155             DIVCMD(mod, i, int, val %= val2);
    engine\command.cpp:4156             DIVCMD(divf, f, float, val /= val2);
    engine\command.cpp:4157             DIVCMD(modf, f, float, val = fmod(val, val2));


ICOMMAND
    engine\blend.cpp:357                ICOMMAND(optimizeblendmap, "", (), optimizeblendmap());
    engine\blend.cpp:874                ICOMMAND(clearblendbrushes, "", (),
    engine\blend.cpp:922                ICOMMAND(nextblendbrush, "i", (int *dir),
    engine\blend.cpp:929                ICOMMAND(setblendbrush, "s", (char *name),
    engine\blend.cpp:934                ICOMMAND(getblendbrushname, "i", (int *n),
    engine\blend.cpp:939                ICOMMAND(curblendbrush, "", (), intret(curbrush));
    engine\blend.cpp:959                ICOMMAND(rotateblendbrush, "i", (int *val),
    engine\blend.cpp:1004               ICOMMAND(paintblendmap, "D", (int *isdown),
    engine\blend.cpp:1041               ICOMMAND(invertblendmap, "", (),
    engine\blend.cpp:1055               ICOMMAND(clearblendmap, "", (),
    engine\blend.cpp:1062               ICOMMAND(moveblendmap, "ii", (int *dx, int *dy),
    engine\client.cpp:42                ICOMMAND(isconnected, "bb", (int *attempt, int *local), intret(isconnected(*attempt > 0, *local != 0) ? 1 : 0));
    engine\client.cpp:49                ICOMMAND(connectedip, "", (),
    engine\client.cpp:56                ICOMMAND(connectedport, "", (),
    engine\client.cpp:183               ICOMMAND(connect, "sis", (char *name, int *port, char *pw), connectserv(name, *port, pw));
    engine\client.cpp:184               ICOMMAND(lanconnect, "is", (int *port, char *pw), connectserv(NULL, *port, pw));
    engine\client.cpp:186               ICOMMAND(disconnect, "b", (int *local), trydisconnect(*local != 0));
    engine\client.cpp:187               ICOMMAND(localconnect, "", (), { if(!isconnected()) localconnect(); });
    engine\client.cpp:188               ICOMMAND(localdisconnect, "", (), { if(haslocalclients()) localdisconnect(); });
    engine\command.cpp:283              ICOMMAND(nodebug, "e", (uint *body), { nodebug++; executeret(body, *commandret); nodebug--; });
    engine\command.cpp:363              ICOMMAND(push, "rTe", (ident *id, tagval *v, uint *code),
    engine\command.cpp:546              ICOMMAND(alias, "sT", (const char *name, tagval *v),
    engine\command.cpp:595              ICOMMAND(cmdname, fmt, args, \
    engine\command.cpp:696              ICOMMAND(getvarmin, "s", (char *s), intret(getvarmin(s)));
    engine\command.cpp:697              ICOMMAND(getvarmax, "s", (char *s), intret(getvarmax(s)));
    engine\command.cpp:698              ICOMMAND(getfvarmin, "s", (char *s), floatret(getfvarmin(s)));
    engine\command.cpp:699              ICOMMAND(getfvarmax, "s", (char *s), floatret(getfvarmax(s)));
    engine\command.cpp:702              ICOMMAND(identexists, "s", (char *s), intret(identexists(s) ? 1 : 0));
    engine\command.cpp:725              ICOMMAND(getalias, "s", (char *s), result(getalias(s)));
    engine\command.cpp:815              ICOMMAND(set, "rT", (ident *id, tagval *v),
    engine\command.cpp:2135             ICOMMAND(printvar, "r", (ident *id), printvar(id));
    engine\command.cpp:3118             ICOMMAND(exec, "sb", (char *file, int *msg), intret(execfile(file, *msg != 0) ? 1 : 0));
    engine\command.cpp:3139             ICOMMAND(escape, "s", (char *s), result(escapestring(s)));
    engine\command.cpp:3140             ICOMMAND(unescape, "s", (char *s),
    engine\command.cpp:3290             ICOMMAND(?, "tTT", (tagval *cond, tagval *t, tagval *f), result(*(getbool(*cond) ? t : f)));
    engine\command.cpp:3292             ICOMMAND(pushif, "rTe", (ident *id, tagval *v, uint *code),
    engine\command.cpp:3358             ICOMMAND(loop, "rie", (ident *id, int *n, uint *body), doloop(*id, 0, *n, 1, body));
    engine\command.cpp:3359             ICOMMAND(loop+, "riie", (ident *id, int *offset, int *n, uint *body), doloop(*id, *offset, *n, 1, body));
    engine\command.cpp:3360             ICOMMAND(loop*, "riie", (ident *id, int *step, int *n, uint *body), doloop(*id, 0, *n, *step, body));
    engine\command.cpp:3361             ICOMMAND(loop+*, "riiie", (ident *id, int *offset, int *step, int *n, uint *body), doloop(*id, *offset, *n, *step, body));
    engine\command.cpp:3375             ICOMMAND(loopwhile, "riee", (ident *id, int *n, uint *cond, uint *body), loopwhile(*id, 0, *n, 1, cond, body));
    engine\command.cpp:3376             ICOMMAND(loopwhile+, "riiee", (ident *id, int *offset, int *n, uint *cond, uint *body), loopwhile(*id, *offset, *n, 1, cond, body));
    engine\command.cpp:3377             ICOMMAND(loopwhile*, "riiee", (ident *id, int *step, int *n, uint *cond, uint *body), loopwhile(*id, 0, *n, *step, cond, body));
    engine\command.cpp:3378             ICOMMAND(loopwhile+*, "riiiee", (ident *id, int *offset, int *step, int *n, uint *cond, uint *body), loopwhile(*id, *offset, *n, *step, cond, body));
    engine\command.cpp:3380             ICOMMAND(while, "ee", (uint *cond, uint *body), while(executebool(cond)) execute(body));
    engine\command.cpp:3402             ICOMMAND(loopconcat, "rie", (ident *id, int *n, uint *body), loopconc(*id, 0, *n, 1, body, true));
    engine\command.cpp:3403             ICOMMAND(loopconcat+, "riie", (ident *id, int *offset, int *n, uint *body), loopconc(*id, *offset, *n, 1, body, true));
    engine\command.cpp:3404             ICOMMAND(loopconcat*, "riie", (ident *id, int *step, int *n, uint *body), loopconc(*id, 0, *n, *step, body, true));
    engine\command.cpp:3405             ICOMMAND(loopconcat+*, "riiie", (ident *id, int *offset, int *step, int *n, uint *body), loopconc(*id, *offset, *n, *step, body, true));
    engine\command.cpp:3406             ICOMMAND(loopconcatword, "rie", (ident *id, int *n, uint *body), loopconc(*id, 0, *n, 1, body, false));
    engine\command.cpp:3407             ICOMMAND(loopconcatword+, "riie", (ident *id, int *offset, int *n, uint *body), loopconc(*id, *offset, *n, 1, body, false));
    engine\command.cpp:3408             ICOMMAND(loopconcatword*, "riie", (ident *id, int *step, int *n, uint *body), loopconc(*id, 0, *n, *step, body, false));
    engine\command.cpp:3409             ICOMMAND(loopconcatword+*, "riiie", (ident *id, int *offset, int *step, int *n, uint *body), loopconc(*id, *offset, *n, *step, body, false));
    engine\command.cpp:3432             ICOMMAND(append, "rt", (ident *id, tagval *v), append(id, v, true));
    engine\command.cpp:3433             ICOMMAND(appendword, "rt", (ident *id, tagval *v), append(id, v, false));
    engine\command.cpp:3558             ICOMMAND(listlen, "s", (char *s), intret(listlen(s)));
    engine\command.cpp:3618             ICOMMAND(stripcolors, "s", (char *s),
    engine\command.cpp:3678             ICOMMAND(name, "s" fmt "i", (char *list, type *val, int *skip), \
    engine\command.cpp:3695             ICOMMAND(name, "s" fmt, (char *list, type *val), \
    engine\command.cpp:3791             ICOMMAND(looplistconcat, "rse", (ident *id, char *list, uint *body), looplistconc(id, list, body, true));
    engine\command.cpp:3792             ICOMMAND(looplistconcatword, "rse", (ident *id, char *list, uint *body), looplistconc(id, list, body, false));
    engine\command.cpp:3868             ICOMMAND(indexof, "ss", (char *list, char *elem), intret(listincludes(list, elem, strlen(elem))));
    engine\command.cpp:3871             ICOMMAND(name, "ss", (const char *list, const char *elems), \
    engine\command.cpp:3919             ICOMMAND(loopfiles, "rsse", (ident *id, char *dir, char *ext, uint *body),
    engine\command.cpp:4060             ICOMMAND(uniquelist, "srre", (char *list, ident *x, ident *y, uint *body), sortlist(list, x, y, NULL, body));
    engine\command.cpp:4160             ICOMMAND(sin, "f", (float *a), floatret(sin(*a*RAD)));
    engine\command.cpp:4161             ICOMMAND(cos, "f", (float *a), floatret(cos(*a*RAD)));
    engine\command.cpp:4162             ICOMMAND(tan, "f", (float *a), floatret(tan(*a*RAD)));
    engine\command.cpp:4163             ICOMMAND(asin, "f", (float *a), floatret(asin(*a)/RAD));
    engine\command.cpp:4164             ICOMMAND(acos, "f", (float *a), floatret(acos(*a)/RAD));
    engine\command.cpp:4165             ICOMMAND(atan, "f", (float *a), floatret(atan(*a)/RAD));
    engine\command.cpp:4166             ICOMMAND(atan2, "ff", (float *y, float *x), floatret(atan2(*y, *x)/RAD));
    engine\command.cpp:4167             ICOMMAND(sqrt, "f", (float *a), floatret(sqrt(*a)));
    engine\command.cpp:4168             ICOMMAND(loge, "f", (float *a), floatret(log(*a)));
    engine\command.cpp:4169             ICOMMAND(log2, "f", (float *a), floatret(log(*a)/M_LN2));
    engine\command.cpp:4170             ICOMMAND(log10, "f", (float *a), floatret(log10(*a)));
    engine\command.cpp:4171             ICOMMAND(exp, "f", (float *a), floatret(exp(*a)));
    engine\command.cpp:4174             ICOMMAND(name, #fmt "1V", (tagval *args, int numargs), \
    engine\command.cpp:4186             ICOMMAND(bitscan, "i", (int *n), intret(bitscan(*n)));
    engine\command.cpp:4188             ICOMMAND(abs, "i", (int *n), intret(abs(*n)));
    engine\command.cpp:4189             ICOMMAND(absf, "f", (float *n), floatret(fabs(*n)));
    engine\command.cpp:4191             ICOMMAND(floor, "f", (float *n), floatret(floor(*n)));
    engine\command.cpp:4192             ICOMMAND(ceil, "f", (float *n), floatret(ceil(*n)));
    engine\command.cpp:4193             ICOMMAND(round, "ff", (float *n, float *k),
    engine\command.cpp:4206             ICOMMAND(cond, "ee2V", (tagval *args, int numargs),
    engine\command.cpp:4227             ICOMMAND(name, fmt "te2V", (tagval *args, int numargs), \
    engine\command.cpp:4245             ICOMMAND(rnd, "ii", (int *a, int *b), intret(*a - *b > 0 ? rnd(*a - *b) + *b : *b));
    engine\command.cpp:4246             ICOMMAND(rndstr, "i", (int *len),
    engine\command.cpp:4263             ICOMMAND(tohex, "ii", (int *n, int *p),
    engine\command.cpp:4272             ICOMMAND(name, "s1V", (tagval *args, int numargs), \
    engine\command.cpp:4292             ICOMMAND(echo, "C", (char *s), conoutf(CON_ECHO, "\f1%s", s));
    engine\command.cpp:4293             ICOMMAND(error, "C", (char *s), conoutf(CON_ERROR, "%s", s));
    engine\command.cpp:4294             ICOMMAND(strstr, "ss", (char *a, char *b), { char *s = strstr(a, b); intret(s ? s-a : -1); });
    engine\command.cpp:4295             ICOMMAND(strlen, "s", (char *s), intret(strlen(s)));
    engine\command.cpp:4296             ICOMMAND(strcode, "si", (char *s, int *i), intret(*i > 0 ? (memchr(s, 0, *i) ? 0 : uchar(s[*i])) : uchar(s[0])));
    engine\command.cpp:4297             ICOMMAND(codestr, "i", (int *i), { char *s = newstring(1); s[0] = char(*i); s[1] = '\0'; stringret(s); });
    engine\command.cpp:4298             ICOMMAND(struni, "si", (char *s, int *i), intret(*i > 0 ? (memchr(s, 0, *i) ? 0 : cube2uni(s[*i])) : cube2uni(s[0])));
    engine\command.cpp:4299             ICOMMAND(unistr, "i", (int *i), { char *s = newstring(1); s[0] = uni2cube(*i); s[1] = '\0'; stringret(s); });
    engine\command.cpp:4325             ICOMMAND(naturalsort, "ss", (char *a, char *b), intret(naturalsort(a,b)<=0));
    engine\command.cpp:4328             ICOMMAND(name, "s", (char *s), \
    engine\command.cpp:4364             ICOMMAND(strreplace, "ssss", (char *s, char *o, char *n, char *n2), commandret->setstr(strreplace(s, o, n, n2[0] ? n2 : n)));
    engine\command.cpp:4381             ICOMMAND(getmillis, "i", (int *total), intret(*total ? totalmillis : lastmillis));
    engine\console.cpp:50               ICOMMAND(fullconsole, "iN$", (int *val, int *numargs, ident *id),
    engine\console.cpp:60               ICOMMAND(toggleconsole, "", (), UI::toggleui("fullconsole"));
    engine\console.cpp:106              ICOMMAND(conskip, "i", (int *n), setconskip(conskip, UI::uivisible("fullconsole") ? fullconfilter : confilter, *n));
    engine\console.cpp:107              ICOMMAND(miniconskip, "i", (int *n), setconskip(miniconskip, miniconfilter, *n));
    engine\console.cpp:109              ICOMMAND(clearconsole, "", (), { while(conlines.length()) delete[] conlines.pop().line; });
    engine\console.cpp:263              ICOMMAND(bind,     "ss", (char *key, char *action), bindkey(key, action, keym::ACTION_DEFAULT, "bind"));
    engine\console.cpp:264              ICOMMAND(specbind, "ss", (char *key, char *action), bindkey(key, action, keym::ACTION_SPECTATOR, "specbind"));
    engine\console.cpp:265              ICOMMAND(editbind, "ss", (char *key, char *action), bindkey(key, action, keym::ACTION_EDITING, "editbind"));
    engine\console.cpp:266              ICOMMAND(getbind,     "s", (char *key), getbind(key, keym::ACTION_DEFAULT));
    engine\console.cpp:267              ICOMMAND(getspecbind, "s", (char *key), getbind(key, keym::ACTION_SPECTATOR));
    engine\console.cpp:268              ICOMMAND(geteditbind, "s", (char *key), getbind(key, keym::ACTION_EDITING));
    engine\console.cpp:269              ICOMMAND(searchbinds,     "s", (char *action), searchbinds(action, keym::ACTION_DEFAULT));
    engine\console.cpp:270              ICOMMAND(searchspecbinds, "s", (char *action), searchbinds(action, keym::ACTION_SPECTATOR));
    engine\console.cpp:271              ICOMMAND(searcheditbinds, "s", (char *action), searchbinds(action, keym::ACTION_EDITING));
    engine\console.cpp:283              ICOMMAND(clearbinds, "", (), enumerate(keyms, keym, km, km.clear(keym::ACTION_DEFAULT)));
    engine\console.cpp:284              ICOMMAND(clearspecbinds, "", (), enumerate(keyms, keym, km, km.clear(keym::ACTION_SPECTATOR)));
    engine\console.cpp:285              ICOMMAND(cleareditbinds, "", (), enumerate(keyms, keym, km, km.clear(keym::ACTION_EDITING)));
    engine\console.cpp:286              ICOMMAND(clearallbinds, "", (), enumerate(keyms, keym, km, km.clear()));
    engine\console.cpp:309              ICOMMAND(saycommand, "C", (char *init), inputcommand(init));
    engine\light.cpp:541                ICOMMAND(calclight, "", (), mpcalclight(true));
    engine\main.cpp:519                 ICOMMAND(screenres, "ii", (int *w, int *h), screenres(*w, *h));
    engine\master.cpp:68                ICOMMAND(ban, "s", (char *name), addban(bans, name));
    engine\master.cpp:69                ICOMMAND(servban, "s", (char *name), addban(servbans, name));
    engine\master.cpp:70                ICOMMAND(gban, "s", (char *name), addban(gbans, name));
    engine\menus.cpp:53                 ICOMMAND(pendingchanges, "b", (int *idx), { if(needsapply.inrange(*idx)) result(needsapply[*idx].desc); else if(*idx < 0) intret(needsapply.length()); });
    engine\movie.cpp:1165               ICOMMAND(movierecording, "", (), intret(recorder::isrecording() ? 1 : 0));
    engine\normal.cpp:280               ICOMMAND(smoothangle, "ib", (int *id, int *angle), intret(smoothangle(*id, *angle)));
    engine\octa.cpp:587                 ICOMMAND(remip, "", (), mpremip(true));
    engine\octaedit.cpp:117             ICOMMAND(moving, "b", (int *n),
    engine\octaedit.cpp:228             ICOMMAND(edittoggle, "", (), toggleedit(false));
    engine\octaedit.cpp:235             ICOMMAND(selmoved, "", (), { if(noedit(true)) return; intret(sel.o != savedsel.o ? 1 : 0); });
    engine\octaedit.cpp:236             ICOMMAND(selsave, "", (), { if(noedit(true)) return; savedsel = sel; });
    engine\octaedit.cpp:237             ICOMMAND(selrestore, "", (), { if(noedit(true)) return; sel = savedsel; });
    engine\octaedit.cpp:238             ICOMMAND(selswap, "", (), { if(noedit(true)) return; swap(sel, savedsel); });
    engine\octaedit.cpp:240             ICOMMAND(getselpos, "", (),
    engine\octaedit.cpp:283             ICOMMAND(havesel, "", (), intret(havesel ? selchildcount : 0));
    engine\octaedit.cpp:284             ICOMMAND(selchildcount, "", (), { if(selchildcount < 0) result(tempformatstring("1/%d", -selchildcount)); else intret(selchildcount); });
    engine\octaedit.cpp:285             ICOMMAND(selchildmat, "s", (char *prefix), { if(selchildmat > 0) result(getmaterialdesc(selchildmat, prefix)); });
    engine\octaedit.cpp:1579            ICOMMAND(hmapcancel, "", (), cancel());
    engine\octaedit.cpp:1580            ICOMMAND(hmapselect, "", (),
    engine\octaedit.cpp:2230            ICOMMAND(getvrotate, "i", (int *tex), intret(lookupvslot(*tex, false).rotation));
    engine\octaedit.cpp:2241            ICOMMAND(getvoffset, "i", (int *tex),
    engine\octaedit.cpp:2257            ICOMMAND(getvscroll, "i", (int *tex),
    engine\octaedit.cpp:2273            ICOMMAND(getvscale, "i", (int *tex), floatret(lookupvslot(*tex, false).scale));
    engine\octaedit.cpp:2289            ICOMMAND(getvlayer, "i", (int *tex), intret(lookupvslot(*tex, false).layer));
    engine\octaedit.cpp:2305            ICOMMAND(getvdetail, "i", (int *tex), intret(lookupvslot(*tex, false).detail));
    engine\octaedit.cpp:2317            ICOMMAND(getvalpha, "i", (int *tex),
    engine\octaedit.cpp:2333            ICOMMAND(getvcolor, "i", (int *tex),
    engine\octaedit.cpp:2354            ICOMMAND(getvrefract, "i", (int *tex),
    engine\octaedit.cpp:2382            ICOMMAND(getvshaderparam, "is", (int *tex, const char *name),
    engine\octaedit.cpp:2396            ICOMMAND(getvshaderparamnames, "i", (int *tex),
    engine\octaedit.cpp:2563            ICOMMAND(settex, "i", (int *tex), { if(!vslots.inrange(*tex) || noedit()) return; filltexlist(); edittex(*tex); });
    engine\octaedit.cpp:2567            ICOMMAND(getreptex, "", (), { if(!noedit()) intret(vslots.inrange(reptex) ? reptex : -1); });
    engine\octaedit.cpp:2569            ICOMMAND(texmru, "b", (int *idx), { filltexlist(); intret(texmru.inrange(*idx) ? texmru[*idx] : texmru.length()); });
    engine\octaedit.cpp:2570            ICOMMAND(looptexmru, "re", (ident *id, uint *body),
    engine\octaedit.cpp:2577            ICOMMAND(numvslots, "", (), intret(vslots.length()));
    engine\octaedit.cpp:2578            ICOMMAND(numslots, "", (), intret(slots.length()));
    engine\octaedit.cpp:2580            ICOMMAND(texloaded, "i", (int *tex), intret(slots.inrange(*tex) && slots[*tex]->loaded ? 1 : 0));
    engine\octaedit.cpp:2618            ICOMMAND(replace, "", (), replace(false));
    engine\octaedit.cpp:2619            ICOMMAND(replacesel, "", (), replace(true));
    engine\octaedit.cpp:2918            ICOMMAND(editstat##name, "", (), \
    engine\physics.cpp:1963             ICOMMAND(jump,   "D", (int *down), { if(!*down || game::canjump()) player->jumping = *down!=0; });
    engine\physics.cpp:1964             ICOMMAND(crouch, "D", (int *down), { if(!*down) player->crouching = abs(player->crouching); else if(game::cancrouch()) player->crouching = -1; });
    engine\rendergl.cpp:1075            ICOMMAND(glext, "s", (char *ext), intret(hasext(ext) ? 1 : 0));
    engine\rendergl.cpp:1237            ICOMMAND(getcamyaw, "", (), floatret(camera1->yaw));
    engine\rendergl.cpp:1238            ICOMMAND(getcampitch, "", (), floatret(camera1->pitch));
    engine\rendergl.cpp:1239            ICOMMAND(getcamroll, "", (), floatret(camera1->roll));
    engine\rendergl.cpp:1240            ICOMMAND(getcampos, "", (),
    engine\rendergl.cpp:2633            ICOMMAND(getcrosshair, "i", (int *i),
    engine\renderlights.cpp:539         ICOMMAND(usepacknorm, "", (), intret(usepacknorm() ? 1 : 0));
    engine\rendermodel.cpp:336          ICOMMAND(mmodel, "s", (char *name), mapmodel(name));
    engine\rendermodel.cpp:339          ICOMMAND(mapmodelname, "ii", (int *index, int *prefix), { if(mapmodels.inrange(*index)) result(mapmodels[*index].name[0] ? mapmodels[*index].name + (*prefix ? 0 : mmprefixlen) : ""); });
    engine\rendermodel.cpp:340          ICOMMAND(mapmodelloaded, "i", (int *index), { intret(mapmodels.inrange(*index) && mapmodels[*index].m ? 1 : 0); });
    engine\rendermodel.cpp:341          ICOMMAND(nummapmodels, "", (), { intret(mapmodels.length()); });
    engine\rendermodel.cpp:342          ICOMMAND(mapmodelfind, "s", (char *name), { int found = -1; loopv(mapmodels) if(strstr(mapmodels[i].name, name)) { found = i; break; } intret(found); });
    engine\rendermodel.cpp:1084         ICOMMAND(findanims, "s", (char *name),
    engine\serverbrowser.cpp:573        ICOMMAND(numservers, "", (), intret(servers.length()))
    engine\serverbrowser.cpp:583        ICOMMAND(servinfovalid, "i", (int *i), GETSERVERINFO_(*i, si, intret(si.valid() ? 1 : 0)));
    engine\serverbrowser.cpp:584        ICOMMAND(servinfodesc, "i", (int *i),
    engine\serverbrowser.cpp:590        ICOMMAND(servinfoname, "i", (int *i), GETSERVERINFO_(*i, si, result(si.name)));
    engine\serverbrowser.cpp:591        ICOMMAND(servinfoport, "i", (int *i), GETSERVERINFO_(*i, si, intret(si.address.port)));
    engine\serverbrowser.cpp:592        ICOMMAND(servinfohaspassword, "i", (int *i), GETSERVERINFO_(*i, si, intret(si.password && si.password[0] ? 1 : 0)));
    engine\serverbrowser.cpp:593        ICOMMAND(servinfokeep, "i", (int *i), GETSERVERINFO_(*i, si, intret(si.keep ? 1 : 0)));
    engine\serverbrowser.cpp:594        ICOMMAND(servinfomap, "i", (int *i), GETSERVERINFO(*i, si, result(si.map)));
    engine\serverbrowser.cpp:595        ICOMMAND(servinfoping, "i", (int *i), GETSERVERINFO(*i, si, intret(si.ping)));
    engine\serverbrowser.cpp:596        ICOMMAND(servinfonumplayers, "i", (int *i), GETSERVERINFO(*i, si, intret(si.numplayers)));
    engine\serverbrowser.cpp:597        ICOMMAND(servinfomaxplayers, "i", (int *i), GETSERVERINFO(*i, si, intret(si.maxplayers)));
    engine\serverbrowser.cpp:598        ICOMMAND(servinfoplayers, "i", (int *i),
    engine\serverbrowser.cpp:604        ICOMMAND(servinfoattr, "ii", (int *i, int *n), GETSERVERINFO(*i, si, { if(si.attr.inrange(*n)) intret(si.attr[*n]); }));
    engine\serverbrowser.cpp:606        ICOMMAND(connectservinfo, "is", (int *i, char *pw), GETSERVERINFO_(*i, si, connectserv(si.name, si.address.port, pw[0] ? pw : si.password)));
    engine\serverbrowser.cpp:716        ICOMMAND(addserver, "sis", (const char *name, int *port, const char *password), addserver(name, *port, password[0] ? password : NULL));
    engine\serverbrowser.cpp:717        ICOMMAND(keepserver, "sis", (const char *name, int *port, const char *password), addserver(name, *port, password[0] ? password : NULL, true));
    engine\serverbrowser.cpp:718        ICOMMAND(clearservers, "i", (int *full), clearservers(*full!=0));
    engine\shader.cpp:1129              ICOMMAND(forceshader, "s", (const char *name), useshaderbyname(name));
    engine\shader.cpp:1283              ICOMMAND(dumpshader, "sbi", (const char *name, int *col, int *row),
    engine\shader.cpp:1297              ICOMMAND(isshaderdefined, "s", (char *name), intret(lookupshaderbyname(name) ? 1 : 0));
    engine\shader.cpp:1328              ICOMMAND(setuniformparam, "sfFFf", (char *name, float *x, float *y, float *z, float *w), addslotparam(name, *x, *y, *z, *w));
    engine\shader.cpp:1329              ICOMMAND(setshaderparam, "sfFFf", (char *name, float *x, float *y, float *z, float *w), addslotparam(name, *x, *y, *z, *w));
    engine\shader.cpp:1330              ICOMMAND(defuniformparam, "sfFFf", (char *name, float *x, float *y, float *z, float *w), addslotparam(name, *x, *y, *z, *w));
    engine\shader.cpp:1331              ICOMMAND(reuseuniformparam, "sfFFf", (char *name, float *x, float *y, float *z, float *w), addslotparam(name, *x, *y, *z, *w, SlotShaderParam::REUSE));
    engine\shader.cpp:1494              ICOMMAND(addpostfx, "siisffff", (char *name, int *bind, int *scale, char *inputs, float *x, float *y, float *z, float *w),
    engine\shader.cpp:1514              ICOMMAND(setpostfx, "sffff", (char *name, float *x, float *y, float *z, float *w),
    engine\sound.cpp:463                ICOMMAND(numsounds, "", (), intret(gamesounds.configs.length()));
    engine\sound.cpp:464                ICOMMAND(nummapsounds, "", (), intret(mapsounds.configs.length()));
    engine\sound.cpp:746                ICOMMAND(playsound, "i", (int *n), playsound(*n));
    engine\textedit.h:723               ICOMMAND(textlist, "", (), // @DEBUG return list of all the editors
    engine\textedit.h:739               ICOMMAND(textfocus, "si", (char *name, int *mode), // focus on a (or create a persistent) specific editor, else returns current name
    engine\textedit.h:761               ICOMMAND(textinit, "sss", (char *name, char *file, char *initval), // loads into named editor if no file assigned and editor has been rendered
    engine\texture.cpp:1952             ICOMMAND(compactvslots, "i", (int *cull),
    engine\texture.cpp:2321             ICOMMAND(fixinsidefaces, "i", (int *tex),
    engine\ui.cpp:2038                  ICOMMAND(uicontextscale, "", (), floatret(FONTH*uicontextscale));
    engine\ui.cpp:3090                  ICOMMAND(newui, "ssss", (char *name, char *contents, char *onshow, char *onhide),
    engine\ui.cpp:3097                  ICOMMAND(uiallowinput, "b", (int *val), { if(window) { if(*val >= 0) window->allowinput = *val!=0; intret(window->allowinput ? 1 : 0); } });
    engine\ui.cpp:3098                  ICOMMAND(uieschide, "b", (int *val), { if(window) { if(*val >= 0) window->eschide = *val!=0; intret(window->eschide ? 1 : 0); } });
    engine\ui.cpp:3133                  ICOMMAND(showui, "s", (char *name), intret(showui(name) ? 1 : 0));
    engine\ui.cpp:3134                  ICOMMAND(hideui, "s", (char *name), intret(hideui(name) ? 1 : 0));
    engine\ui.cpp:3135                  ICOMMAND(hidetopui, "", (), intret(world->hidetop() ? 1 : 0));
    engine\ui.cpp:3136                  ICOMMAND(hideallui, "", (), intret(world->hideall()));
    engine\ui.cpp:3137                  ICOMMAND(toggleui, "s", (char *name), intret(toggleui(name) ? 1 : 0));
    engine\ui.cpp:3138                  ICOMMAND(holdui, "sD", (char *name, int *down), holdui(name, *down!=0));
    engine\ui.cpp:3139                  ICOMMAND(uivisible, "s", (char *name), intret(uivisible(name) ? 1 : 0));
    engine\ui.cpp:3140                  ICOMMAND(uiname, "", (), { if(window) result(window->name); });
    engine\ui.cpp:3172                  ICOMMAND(uialign, "ii", (int *xalign, int *yalign),
    engine\ui.cpp:3185                  ICOMMAND(uiclamp, "iiii", (int *left, int *right, int *top, int *bottom),
    engine\ui.cpp:3198                  ICOMMAND(uigroup, "e", (uint *children),
    engine\ui.cpp:3201                  ICOMMAND(uihlist, "fe", (float *space, uint *children),
    engine\ui.cpp:3204                  ICOMMAND(uivlist, "fe", (float *space, uint *children),
    engine\ui.cpp:3207                  ICOMMAND(uilist, "fe", (float *space, uint *children),
    engine\ui.cpp:3220                  ICOMMAND(uigrid, "iffe", (int *columns, float *spacew, float *spaceh, uint *children),
    engine\ui.cpp:3223                  ICOMMAND(uitableheader, "ee", (uint *columndata, uint *children),
    engine\ui.cpp:3225                  ICOMMAND(uitablerow, "ee", (uint *columndata, uint *children),
    engine\ui.cpp:3227                  ICOMMAND(uitable, "ffe", (float *spacew, float *spaceh, uint *children),
    engine\ui.cpp:3230                  ICOMMAND(uispace, "ffe", (float *spacew, float *spaceh, uint *children),
    engine\ui.cpp:3233                  ICOMMAND(uioffset, "ffe", (float *offsetx, float *offsety, uint *children),
    engine\ui.cpp:3236                  ICOMMAND(uifill, "ffe", (float *minw, float *minh, uint *children),
    engine\ui.cpp:3239                  ICOMMAND(uitarget, "ffe", (float *minw, float *minh, uint *children),
    engine\ui.cpp:3242                  ICOMMAND(uiclip, "ffe", (float *clipw, float *cliph, uint *children),
    engine\ui.cpp:3245                  ICOMMAND(uiscroll, "ffe", (float *clipw, float *cliph, uint *children),
    engine\ui.cpp:3248                  ICOMMAND(uihscrolloffset, "", (),
    engine\ui.cpp:3257                  ICOMMAND(uivscrolloffset, "", (),
    engine\ui.cpp:3266                  ICOMMAND(uihscrollbar, "e", (uint *children),
    engine\ui.cpp:3269                  ICOMMAND(uivscrollbar, "e", (uint *children),
    engine\ui.cpp:3272                  ICOMMAND(uiscrollarrow, "fe", (float *dir, uint *children),
    engine\ui.cpp:3275                  ICOMMAND(uiscrollbutton, "e", (uint *children),
    engine\ui.cpp:3278                  ICOMMAND(uihslider, "rfffee", (ident *var, float *vmin, float *vmax, float *vstep, uint *onchange, uint *children),
    engine\ui.cpp:3281                  ICOMMAND(uivslider, "rfffee", (ident *var, float *vmin, float *vmax, float *vstep, uint *onchange, uint *children),
    engine\ui.cpp:3284                  ICOMMAND(uisliderarrow, "fe", (float *dir, uint *children),
    engine\ui.cpp:3287                  ICOMMAND(uisliderbutton, "e", (uint *children),
    engine\ui.cpp:3290                  ICOMMAND(uicolor, "iffe", (int *c, float *minw, float *minh, uint *children),
    engine\ui.cpp:3293                  ICOMMAND(uimodcolor, "iffe", (int *c, float *minw, float *minh, uint *children),
    engine\ui.cpp:3296                  ICOMMAND(uivgradient, "iiffe", (int *c, int *c2, float *minw, float *minh, uint *children),
    engine\ui.cpp:3299                  ICOMMAND(uimodvgradient, "iiffe", (int *c, int *c2, float *minw, float *minh, uint *children),
    engine\ui.cpp:3302                  ICOMMAND(uihgradient, "iiffe", (int *c, int *c2, float *minw, float *minh, uint *children),
    engine\ui.cpp:3305                  ICOMMAND(uimodhgradient, "iiffe", (int *c, int *c2, float *minw, float *minh, uint *children),
    engine\ui.cpp:3308                  ICOMMAND(uioutline, "iffe", (int *c, float *minw, float *minh, uint *children),
    engine\ui.cpp:3311                  ICOMMAND(uiline, "iffe", (int *c, float *minw, float *minh, uint *children),
    engine\ui.cpp:3314                  ICOMMAND(uitriangle, "iffie", (int *c, float *minw, float *minh, int *angle, uint *children),
    engine\ui.cpp:3317                  ICOMMAND(uitriangleoutline, "iffie", (int *c, float *minw, float *minh, int *angle, uint *children),
    engine\ui.cpp:3320                  ICOMMAND(uimodtriangle, "iffie", (int *c, float *minw, float *minh, int *angle, uint *children),
    engine\ui.cpp:3323                  ICOMMAND(uicircle, "ife", (int *c, float *size, uint *children),
    engine\ui.cpp:3326                  ICOMMAND(uicircleoutline, "ife", (int *c, float *size, uint *children),
    engine\ui.cpp:3329                  ICOMMAND(uimodcircle, "ife", (int *c, float *size, uint *children),
    engine\ui.cpp:3359                  ICOMMAND(uicolortext, "tife", (tagval *text, int *c, float *scale, uint *children),
    engine\ui.cpp:3362                  ICOMMAND(uitext, "tfe", (tagval *text, float *scale, uint *children),
    engine\ui.cpp:3365                  ICOMMAND(uitextfill, "ffe", (float *minw, float *minh, uint *children),
    engine\ui.cpp:3368                  ICOMMAND(uiwrapcolortext, "tfife", (tagval *text, float *wrap, int *c, float *scale, uint *children),
    engine\ui.cpp:3371                  ICOMMAND(uiwraptext, "tffe", (tagval *text, float *wrap, float *scale, uint *children),
    engine\ui.cpp:3374                  ICOMMAND(uicolorcontext, "tife", (tagval *text, int *c, float *scale, uint *children),
    engine\ui.cpp:3377                  ICOMMAND(uicontext, "tfe", (tagval *text, float *scale, uint *children),
    engine\ui.cpp:3380                  ICOMMAND(uicontextfill, "ffe", (float *minw, float *minh, uint *children),
    engine\ui.cpp:3383                  ICOMMAND(uiwrapcolorcontext, "tfife", (tagval *text, float *wrap, int *c, float *scale, uint *children),
    engine\ui.cpp:3386                  ICOMMAND(uiwrapcontext, "tffe", (tagval *text, float *wrap, float *scale, uint *children),
    engine\ui.cpp:3389                  ICOMMAND(uitexteditor, "siifsie", (char *name, int *length, int *height, float *scale, char *initval, int *mode, uint *children),
    engine\ui.cpp:3392                  ICOMMAND(uifont, "se", (char *name, uint *children),
    engine\ui.cpp:3395                  ICOMMAND(uiabovehud, "", (), { if(window) window->abovehud = true; });
    engine\ui.cpp:3397                  ICOMMAND(uiconsole, "ffe", (float *minw, float *minh, uint *children),
    engine\ui.cpp:3400                  ICOMMAND(uifield, "riefe", (ident *var, int *length, uint *onchange, float *scale, uint *children),
    engine\ui.cpp:3403                  ICOMMAND(uikeyfield, "riefe", (ident *var, int *length, uint *onchange, float *scale, uint *children),
    engine\ui.cpp:3406                  ICOMMAND(uiimage, "sffe", (char *texname, float *minw, float *minh, uint *children),
    engine\ui.cpp:3409                  ICOMMAND(uistretchedimage, "sffe", (char *texname, float *minw, float *minh, uint *children),
    engine\ui.cpp:3429                  ICOMMAND(uicroppedimage, "sfftttte", (char *texname, float *minw, float *minh, tagval *cropx, tagval *cropy, tagval *cropw, tagval *croph, uint *children),
    engine\ui.cpp:3437                  ICOMMAND(uiborderedimage, "stfe", (char *texname, tagval *texborder, float *screenborder, uint *children),
    engine\ui.cpp:3445                  ICOMMAND(uitiledimage, "sffffe", (char *texname, float *tilew, float *tileh, float *minw, float *minh, uint *children),
    engine\ui.cpp:3451                  ICOMMAND(uimodelpreview, "ssffe", (char *model, char *animspec, float *minw, float *minh, uint *children),
    engine\ui.cpp:3454                  ICOMMAND(uiplayerpreview, "iiiiffe", (int *model, int *color, int *team, int *weapon, float *minw, float *minh, uint *children),
    engine\ui.cpp:3457                  ICOMMAND(uiprefabpreview, "siffe", (char *prefab, int *color, float *minw, float *minh, uint *children),
    engine\ui.cpp:3460                  ICOMMAND(uislotview, "iffe", (int *index, float *minw, float *minh, uint *children),
    engine\ui.cpp:3463                  ICOMMAND(uivslotview, "iffe", (int *index, float *minw, float *minh, uint *children),
    engine\world.cpp:914                ICOMMAND(entadd, "", (),
    engine\world.cpp:923                ICOMMAND(enttoggle, "", (),
    engine\world.cpp:929                ICOMMAND(entmoving, "b", (int *n),
    engine\world.cpp:1244               ICOMMAND(enthavesel,"",  (), addimplicit(intret(entgroup.length())));
    engine\world.cpp:1245               ICOMMAND(entselect, "e", (uint *body), if(!noentedit()) addgroup(e.type != ET_EMPTY && entgroup.find(n)<0 && executebool(body)));
    engine\world.cpp:1246               ICOMMAND(entloop,   "e", (uint *body), if(!noentedit()) { addimplicit(groupeditloop(((void)e, execute(body)))); commitchanges(); });
    engine\world.cpp:1247               ICOMMAND(insel,     "",  (), entfocus(efocus, intret(pointinsel(sel, e.o))));
    engine\world.cpp:1248               ICOMMAND(entget,    "",  (), entfocus(efocus, string s; printent(e, s, sizeof(s)); result(s)));
    engine\world.cpp:1249               ICOMMAND(entindex,  "",  (), intret(efocus));
    game\ai.cpp:16                      ICOMMAND(addbot, "s", (char *s), addmsg(N_ADDBOT, "ri", *s ? clamp(parseint(s), 1, 101) : -1));
    game\ai.cpp:17                      ICOMMAND(delbot, "", (), addmsg(N_DELBOT, "r"));
    game\ai.cpp:18                      ICOMMAND(botlimit, "i", (int *n), addmsg(N_BOTLIMIT, "ri", *n));
    game\ai.cpp:19                      ICOMMAND(botbalance, "i", (int *n), addmsg(N_BOTBALANCE, "ri", *n));
    game\client.cpp:155                 ICOMMAND(name, "sN", (char *s, int *numargs),
    game\client.cpp:161                 ICOMMAND(getname, "", (), result(player1->name));
    game\client.cpp:175                 ICOMMAND(team, "sN", (char *s, int *numargs),
    game\client.cpp:181                 ICOMMAND(getteam, "", (), intret((player1->clientnum < 0 || m_teammode) && validteam(player1->team) ? player1->team : 0));
    game\client.cpp:182                 ICOMMAND(getteamname, "i", (int *num), result(teamname(*num)));
    game\client.cpp:218                 ICOMMAND(authkey, "sss", (char *name, char *key, char *desc), addauthkey(name, key, desc));
    game\client.cpp:227                 ICOMMAND(hasauthkey, "ss", (char *name, char *desc), intret(hasauthkey(name, desc) ? 1 : 0));
    game\client.cpp:303                 ICOMMAND(getclientname, "i", (int *cn), result(getclientname(*cn)));
    game\client.cpp:305                 ICOMMAND(getclientcolorname, "i", (int *cn),
    game\client.cpp:316                 ICOMMAND(getclientteam, "i", (int *cn), intret(getclientteam(*cn)));
    game\client.cpp:323                 ICOMMAND(getclientmodel, "i", (int *cn), intret(getclientmodel(*cn)));
    game\client.cpp:332                 ICOMMAND(getclienticon, "i", (int *cn), result(getclienticon(*cn)));
    game\client.cpp:339                 ICOMMAND(getclientcolor, "i", (int *cn), intret(getclientcolor(*cn)));
    game\client.cpp:341                 ICOMMAND(getclientfrags, "i", (int *cn),
    game\client.cpp:347                 ICOMMAND(getclientflags, "i", (int *cn),
    game\client.cpp:353                 ICOMMAND(getclientdeaths, "i", (int *cn),
    game\client.cpp:364                 ICOMMAND(ismaster, "i", (int *cn), intret(ismaster(*cn) ? 1 : 0));
    game\client.cpp:371                 ICOMMAND(isauth, "i", (int *cn), intret(isauth(*cn) ? 1 : 0));
    game\client.cpp:378                 ICOMMAND(isadmin, "i", (int *cn), intret(isadmin(*cn) ? 1 : 0));
    game\client.cpp:380                 ICOMMAND(getmastermode, "", (), intret(mastermode));
    game\client.cpp:381                 ICOMMAND(getmastermodename, "i", (int *mm), result(server::mastermodename(*mm, "")));
    game\client.cpp:388                 ICOMMAND(isspectator, "i", (int *cn), intret(isspectator(*cn) ? 1 : 0));
    game\client.cpp:390                 ICOMMAND(islagged, "i", (int *cn),
    game\client.cpp:396                 ICOMMAND(isdead, "i", (int *cn),
    game\client.cpp:408                 ICOMMAND(isai, "ii", (int *cn, int *type), intret(isai(*cn, *type) ? 1 : 0));
    game\client.cpp:450                 ICOMMAND(getclientnum, "s", (char *name), intret(name[0] ? parseplayer(name) : player1->clientnum));
    game\client.cpp:472                 ICOMMAND(listclients, "bb", (int *local, int *bots), listclients(*local>0, *bots!=0));
    game\client.cpp:497                 ICOMMAND(authkick, "ss", (const char *victim, const char *reason), authkick("", victim, reason));
    game\client.cpp:498                 ICOMMAND(sauthkick, "ss", (const char *victim, const char *reason), if(servauth[0]) authkick(servauth, victim, reason));
    game\client.cpp:499                 ICOMMAND(dauthkick, "sss", (const char *desc, const char *victim, const char *reason), if(desc[0]) authkick(desc, victim, reason));
    game\client.cpp:521                 ICOMMAND(ignore, "s", (char *arg), ignore(parseplayer(arg)));
    game\client.cpp:522                 ICOMMAND(unignore, "s", (char *arg), unignore(parseplayer(arg)));
    game\client.cpp:523                 ICOMMAND(isignored, "s", (char *arg), intret(isignored(parseplayer(arg)) ? 1 : 0));
    game\client.cpp:563                 ICOMMAND(mastermode, "i", (int *val), addmsg(N_MASTERMODE, "ri", *val));
    game\client.cpp:573                 ICOMMAND(auth, "s", (char *desc), tryauth(desc));
    game\client.cpp:574                 ICOMMAND(sauth, "", (), if(servauth[0]) tryauth(servauth));
    game\client.cpp:575                 ICOMMAND(dauth, "s", (char *desc), if(desc[0]) tryauth(desc));
    game\client.cpp:577                 ICOMMAND(getservauth, "", (), result(servauth));
    game\client.cpp:584                 ICOMMAND(spectator, "is", (int *val, char *who), togglespectator(*val, who));
    game\client.cpp:586                 ICOMMAND(checkmaps, "", (), addmsg(N_CHECKMAPS, "r"));
    game\client.cpp:622                 ICOMMAND(mode, "i", (int *val), setmode(*val));
    game\client.cpp:623                 ICOMMAND(getmode, "", (), intret(gamemode));
    game\client.cpp:624                 ICOMMAND(getnextmode, "", (), intret(m_valid(nextmode) ? nextmode : (remote ? 1 : 0)));
    game\client.cpp:625                 ICOMMAND(getmodename, "i", (int *mode), result(server::modename(*mode, "")));
    game\client.cpp:626                 ICOMMAND(getmodeprettyname, "i", (int *mode), result(server::modeprettyname(*mode, "")));
    game\client.cpp:627                 ICOMMAND(timeremaining, "i", (int *formatted),
    game\client.cpp:633                 ICOMMAND(intermission, "", (), intret(intermission ? 1 : 0));
    game\client.cpp:657                 ICOMMAND(map, "s", (char *name), changemap(name));
    game\client.cpp:850                 ICOMMAND(pausegame, "i", (int *val), pausegame(*val > 0));
    game\client.cpp:851                 ICOMMAND(paused, "iN$", (int *val, int *numargs, ident *id),
    game\client.cpp:868                 ICOMMAND(gamespeed, "iN$", (int *val, int *numargs, ident *id),
    game\client.cpp:874                 ICOMMAND(prettygamespeed, "i", (), result(tempformatstring("%d.%02dx", gamespeed/100, gamespeed%100)));
    game\client.cpp:998                 ICOMMAND(servcmd, "C", (char *cmd), addmsg(N_SERVCMD, "rs", cmd));
    game\client.cpp:2135                ICOMMAND(recorddemo, "i", (int *val), recorddemo(*val));
    game\client.cpp:2142                ICOMMAND(cleardemos, "i", (int *val), cleardemos(*val));
    game\client.cpp:2161                ICOMMAND(getdemo, "ss", (char *val, char *name), getdemo(val, name));
    game\ctf.h:910                      ICOMMAND(dropflag, "", (), { ctfmode.trydropflag(); });
    game\game.cpp:28                    ICOMMAND(getfollow, "", (),
    game\game.cpp:69                    ICOMMAND(nextfollow, "i", (int *dir), nextfollow(*dir < 0 ? -1 : 1));
    game\game.cpp:148                   ICOMMAND(allowthirdperson, "b", (int *msg), intret(allowthirdperson(*msg!=0) ? 1 : 0));
    game\game.cpp:303                   ICOMMAND(shoot, "D", (int *down), doaction(*down ? ACT_SHOOT : ACT_IDLE));
    game\game.cpp:304                   ICOMMAND(melee, "D", (int *down), doaction(*down ? ACT_MELEE : ACT_IDLE));
    game\game.cpp:464                   ICOMMAND(getfrags, "", (), intret(player1->frags));
    game\game.cpp:465                   ICOMMAND(getflags, "", (), intret(player1->flags));
    game\game.cpp:466                   ICOMMAND(getdeaths, "", (), intret(player1->deaths));
    game\game.cpp:467                   ICOMMAND(getaccuracy, "", (), intret((player1->totaldamage*100)/max(player1->totalshots, 1)));
    game\game.cpp:468                   ICOMMAND(gettotaldamage, "", (), intret(player1->totaldamage));
    game\game.cpp:469                   ICOMMAND(gettotalshots, "", (), intret(player1->totalshots));
    game\game.cpp:693                   ICOMMAND(suicide, "", (), suicide(player1));
    game\game.cpp:857                   ICOMMAND(servinfomode, "i", (int *i), GETSERVINFOATTR(*i, 0, mode, intret(mode)));
    game\game.cpp:858                   ICOMMAND(servinfomodename, "i", (int *i),
    game\game.cpp:864                   ICOMMAND(servinfomastermode, "i", (int *i), GETSERVINFOATTR(*i, 2, mm, intret(mm)));
    game\game.cpp:865                   ICOMMAND(servinfomastermodename, "i", (int *i),
    game\game.cpp:871                   ICOMMAND(servinfotime, "ii", (int *i, int *raw),
    game\game.cpp:883                   ICOMMAND(servinfoicon, "i", (int *i),
    game\render.cpp:121                 ICOMMAND(getplayercolor, "ii", (int *color, int *team), intret(getplayercolor(*team, *color)));
    game\scoreboard.cpp:114             ICOMMAND(numscoreboard, "i", (int *team), intret(*team < 0 ? spectators.length() : (*team <= MAXTEAMS ? teamplayers[*team].length() : 0)));
    game\scoreboard.cpp:115             ICOMMAND(loopscoreboard, "rie", (ident *id, int *team, uint *body),
    game\scoreboard.cpp:128             ICOMMAND(scoreboardstatus, "i", (int *cn),
    game\scoreboard.cpp:143             ICOMMAND(scoreboardpj, "i", (int *cn),
    game\scoreboard.cpp:153             ICOMMAND(scoreboardping, "i", (int *cn),
    game\scoreboard.cpp:163             ICOMMAND(scoreboardshowfrags, "", (), intret(cmode && cmode->hidefrags() && hidefrags ? 0 : 1));
    game\scoreboard.cpp:164             ICOMMAND(scoreboardshowclientnum, "", (), intret(showclientnum || player1->privilege>=PRIV_MASTER ? 1 : 0));
    game\scoreboard.cpp:165             ICOMMAND(scoreboardmultiplayer, "", (), intret(multiplayer(false) || demoplayback ? 1 : 0));
    game\scoreboard.cpp:167             ICOMMAND(scoreboardhighlight, "i", (int *cn),
    game\scoreboard.cpp:170             ICOMMAND(scoreboardservinfo, "", (),
    game\scoreboard.cpp:186             ICOMMAND(scoreboardmode, "", (),
    game\scoreboard.cpp:191             ICOMMAND(scoreboardmap, "", (),
    game\scoreboard.cpp:197             ICOMMAND(scoreboardtime, "", (),
    game\scoreboard.cpp:210             ICOMMAND(getteamscore, "i", (int *team),
    game\server.cpp:1257                ICOMMAND(seekdemo, "sN$", (char *t, int *numargs, ident *id),
    game\server.cpp:2655                ICOMMAND(clearipbans, "", (), ipbans.clear());
    game\server.cpp:2656                ICOMMAND(ipban, "s", (const char *ipname), ipbans.add(ipname));
    game\waypoint.cpp:187               ICOMMAND(clearwpcache, "", (), clearwpcache());
    game\waypoint.cpp:609               ICOMMAND(clearwaypoints, "", (), clearwaypoints());
    game\waypoint.cpp:726               ICOMMAND(loadwaypoints, "s", (char *mname), loadwaypoints(true, mname));
    game\waypoint.cpp:755               ICOMMAND(savewaypoints, "s", (char *mname), savewaypoints(true, mname));
    game\waypoint.cpp:804               ICOMMAND(movewaypoints, "iii", (int *dx, int *dy, int *dz), movewaypoints(vec(*dx, *dy, *dz)));
    game\weapon.cpp:22                  ICOMMAND(getweapon, "", (), intret(player1->gunselect));
    game\weapon.cpp:47                  ICOMMAND(nextweapon, "ii", (int *dir, int *force), nextweapon(*dir, *force!=0));
    game\weapon.cpp:67                  ICOMMAND(setweapon, "si", (char *name, int *force), setweapon(name, *force!=0));
    game\weapon.cpp:85                  ICOMMAND(cycleweapon, "V", (tagval *args, int numargs),
    game\weapon.cpp:102                 ICOMMAND(weapon, "V", (tagval *args, int numargs),
    shared\zip.cpp:589                  ICOMMAND(addzip, "sss", (const char *name, const char *mount, const char *strip), addzip(name, mount[0] ? mount : NULL, strip[0] ? strip : NULL));
    shared\zip.cpp:590                  ICOMMAND(removezip, "s", (const char *name), removezip(name));


ICOMMANDK
    engine\command.cpp:3275             ICOMMANDK(do, ID_DO, "e", (uint *body), executeret(body, *commandret));
    engine\command.cpp:3289             ICOMMANDK(if, ID_IF, "tee", (tagval *cond, uint *t, uint *f), executeret(getbool(*cond) ? t : f, *commandret));
    engine\command.cpp:3451             ICOMMANDK(result, ID_RESULT, "T", (tagval *v),
    engine\command.cpp:4127             ICOMMANDK(!, ID_NOT, "t", (tagval *a), intret(getbool(*a) ? 0 : 1));
    engine\command.cpp:4128             ICOMMANDK(&&, ID_AND, "E1V", (tagval *args, int numargs),
    engine\command.cpp:4139             ICOMMANDK(||, ID_OR, "E1V", (tagval *args, int numargs),


ICOMMANDNS
    engine\ui.cpp:3144                  ICOMMANDNS("ui!" #func, uinot##func##_, "ee", (uint *t, uint *f), \
    engine\ui.cpp:3146                  ICOMMANDNS("ui" #func, ui##func##_, "ee", (uint *t, uint *f), \
    engine\ui.cpp:3148                  ICOMMANDNS("ui!" #func "?", uinot##func##__, "tt", (tagval *t, tagval *f), \
    engine\ui.cpp:3150                  ICOMMANDNS("ui" #func "?", ui##func##__, "tt", (tagval *t, tagval *f), \
    engine\ui.cpp:3152                  ICOMMANDNS("ui!" #func "+", uinextnot##func##_, "ee", (uint *t, uint *f), \
    engine\ui.cpp:3154                  ICOMMANDNS("ui" #func "+", uinext##func##_, "ee", (uint *t, uint *f), \
    engine\ui.cpp:3156                  ICOMMANDNS("ui!" #func "+?", uinextnot##func##__, "tt", (tagval *t, tagval *f), \
    engine\ui.cpp:3158                  ICOMMANDNS("ui" #func "+?", uinext##func##__, "tt", (tagval *t, tagval *f), \
    engine\ui.cpp:3163                  ICOMMANDNS("uifocus", uifocus_, "ee", (uint *t, uint *f),
    engine\ui.cpp:3165                  ICOMMANDNS("uifocus?", uifocus__, "tt", (tagval *t, tagval *f),
    engine\ui.cpp:3167                  ICOMMANDNS("uifocus+", uinextfocus_, "ee", (uint *t, uint *f),
    engine\ui.cpp:3169                  ICOMMANDNS("uifocus+?", uinextfocus__, "tt", (tagval *t, tagval *f),
    engine\ui.cpp:3176                  ICOMMANDNS("uialign-", uialign_, "ii", (int *xalign, int *yalign),
    engine\ui.cpp:3180                  ICOMMANDNS("uialign*", uialign__, "ii", (int *xalign, int *yalign),
    engine\ui.cpp:3189                  ICOMMANDNS("uiclamp-", uiclamp_, "iiii", (int *left, int *right, int *top, int *bottom),
    engine\ui.cpp:3193                  ICOMMANDNS("uiclamp*", uiclamp__, "iiii", (int *left, int *right, int *top, int *bottom),


ICOMMANDS
    engine\command.cpp:4063             ICOMMANDS(name, #fmt "1V", (tagval *args, int numargs), \
    engine\command.cpp:4082             ICOMMANDS(name, #fmt "1V", (tagval *args, int numargs), \
    game\client.cpp:635                 ICOMMANDS("m_ctf", "i", (int *mode), { int gamemode = *mode; intret(m_ctf); });
    game\client.cpp:636                 ICOMMANDS("m_teammode", "i", (int *mode), { int gamemode = *mode; intret(m_teammode); });
    game\client.cpp:637                 ICOMMANDS("m_rail", "i", (int *mode), { int gamemode = *mode; intret(m_rail); });
    game\client.cpp:638                 ICOMMANDS("m_pulse", "i", (int *mode), { int gamemode = *mode; intret(m_pulse); });
    game\client.cpp:639                 ICOMMANDS("m_demo", "i", (int *mode), { int gamemode = *mode; intret(m_demo); });
    game\client.cpp:640                 ICOMMANDS("m_edit", "i", (int *mode), { int gamemode = *mode; intret(m_edit); });
    game\client.cpp:641                 ICOMMANDS("m_lobby", "i", (int *mode), { int gamemode = *mode; intret(m_lobby); });
    game\client.cpp:642                 ICOMMANDS("m_timed", "i", (int *mode), { int gamemode = *mode; intret(m_timed); });


KEYWORD
    engine\command.cpp:388              KEYWORD(local, ID_LOCAL);


LISTASSOC
    engine\command.cpp:3704             LISTASSOC(listassoc=, "i", int, , parseint(start) == *val);
    engine\command.cpp:3705             LISTASSOC(listassoc=f, "f", float, , parsefloat(start) == *val);
    engine\command.cpp:3706             LISTASSOC(listassoc=s, "s", char, int len = (int)strlen(val), int(end-start) == len && !memcmp(start, val, len));


LISTFIND
    engine\command.cpp:3690             LISTFIND(listfind=, "i", int, , parseint(start) == *val);
    engine\command.cpp:3691             LISTFIND(listfind=f, "f", float, , parsefloat(start) == *val);
    engine\command.cpp:3692             LISTFIND(listfind=s, "s", char, int len = (int)strlen(val), int(end-start) == len && !memcmp(start, val, len));


LISTMERGECMD
    engine\command.cpp:3888             LISTMERGECMD(listdel, , list, elems, <);
    engine\command.cpp:3889             LISTMERGECMD(listintersect, , list, elems, >=);
    engine\command.cpp:3890             LISTMERGECMD(listunion, p.put(list, strlen(list)), elems, list, <);


MATHCMD
    engine\command.cpp:4114             MATHCMD("<<", i, int, val = val2 < 32 ? val << max(val2, 0) : 0, 0, );
    engine\command.cpp:4115             MATHCMD(">>", i, int, val >>= clamp(val2, 0, 31), 0, );
    engine\command.cpp:4158             MATHCMD("pow", f, float, val = pow(val, val2), 0, );


MATHFCMD
    engine\command.cpp:4117             MATHFCMD(+, 0, );
    engine\command.cpp:4118             MATHFCMD(*, 1, );
    engine\command.cpp:4119             MATHFCMD(-, 0, val = -val);


MATHICMD
    engine\command.cpp:4098             MATHICMD(+, 0, );
    engine\command.cpp:4099             MATHICMD(*, 1, );
    engine\command.cpp:4100             MATHICMD(-, 0, val = -val);
    engine\command.cpp:4107             MATHICMD(^, 0, val = ~val);
    engine\command.cpp:4109             MATHICMD(&, 0, );
    engine\command.cpp:4110             MATHICMD(|, 0, );
    engine\command.cpp:4111             MATHICMD(^~, 0, );
    engine\command.cpp:4112             MATHICMD(&~, 0, );
    engine\command.cpp:4113             MATHICMD(|~, 0, );


MATHICMDN
    engine\command.cpp:4108             MATHICMDN(~, ^, 0, val = ~val);


MINMAXCMD
    engine\command.cpp:4181             MINMAXCMD(min, i, int, min);
    engine\command.cpp:4182             MINMAXCMD(max, i, int, max);
    engine\command.cpp:4183             MINMAXCMD(minf, f, float, min);
    engine\command.cpp:4184             MINMAXCMD(maxf, f, float, max);


STRMAPCOMMAND
    engine\command.cpp:4337             STRMAPCOMMAND(strlower, cubelower);
    engine\command.cpp:4338             STRMAPCOMMAND(strupper, cubeupper);


TEXTCOMMAND
    engine\textedit.h:733               TEXTCOMMAND(textshow, "", (), // @DEBUG return the start of the buffer
    engine\textedit.h:744               TEXTCOMMAND(textprev, "", (), editors.insert(0, textfocus); editors.pop();); // return to the previous editor
    engine\textedit.h:745               TEXTCOMMAND(textmode, "i", (int *m), // (1= keep while focused, 2= keep while used in gui, 3= keep forever (i.e. until mode changes)) topmost editor, return current setting if no args
    engine\textedit.h:749               TEXTCOMMAND(textsave, "s", (char *file),  // saves the topmost (filename is optional)
    engine\textedit.h:753               TEXTCOMMAND(textload, "s", (char *file), // loads into the textfocusmost editor, returns filename if no args
    engine\textedit.h:775               TEXTCOMMAND(textcopy, "", (), editor *b = useeditor(PASTEBUFFER, EDITORFOREVER, false); textfocus->copyselectionto(b););
    engine\textedit.h:776               TEXTCOMMAND(textpaste, "", (), editor *b = useeditor(PASTEBUFFER, EDITORFOREVER, false); textfocus->insertallfrom(b););
    engine\textedit.h:777               TEXTCOMMAND(textmark, "i", (int *m),  // (1=mark, 2=unmark), return current mark setting if no args
    engine\textedit.h:781               TEXTCOMMAND(textselectall, "", (), textfocus->selectall(););
    engine\textedit.h:782               TEXTCOMMAND(textclear, "", (), textfocus->clear(););
    engine\textedit.h:783               TEXTCOMMAND(textcurrentline, "",  (), result(textfocus->currentline().text););
    engine\textedit.h:785               TEXTCOMMAND(textexec, "i", (int *selected), // execute script commands from the buffer (0=all, 1=selected region only)




###############################################################################################################################################################################################
###############################################################################################################################################################################################
###############################################################################################################################################################################################
###############################################################################################################################################################################################
###############################################################################################################################################################################################
###############################################################################################################################################################################################
###############################################################################################################################################################################################
###############################################################################################################################################################################################




DEFFVAR
    engine\command.cpp:616              DEFFVAR(deffvar, 0);
    engine\command.cpp:617              DEFFVAR(deffvarp, IDF_PERSIST);

DEFIVAR
    engine\command.cpp:614              DEFIVAR(defvar, 0);
    engine\command.cpp:615              DEFIVAR(defvarp, IDF_PERSIST);

DEFSVAR
    engine\command.cpp:618              DEFSVAR(defsvar, 0);
    engine\command.cpp:619              DEFSVAR(defsvarp, IDF_PERSIST);

DEFVAR
    engine\command.cpp:605              DEFVAR(cmdname, "siiis", (char *name, int *min, int *cur, int *max, char *onchange), \
    engine\command.cpp:608              DEFVAR(cmdname, "sfffs", (char *name, float *min, float *cur, float *max, char *onchange), \
    engine\command.cpp:611              DEFVAR(cmdname, "sss", (char *name, char *cur, char *onchange), \




CVAR0R
    engine\grass.cpp:73                 CVAR0R(grasscolour, 0xFFFFFF);
    engine\material.cpp:650             CVAR0R(name##colour, 0xB0D8FF); \
    engine\water.cpp:366                CVAR0R(name##colour, 0x01212C); \
    engine\water.cpp:367                CVAR0R(name##deepcolour, 0x010A10); \
    engine\water.cpp:368                CVAR0R(name##deepfade, 0x60BFFF); \
    engine\water.cpp:369                CVAR0R(name##refractcolour, 0xFFFFFF); \
    engine\water.cpp:398                CVAR0R(name##colour, 0xFF4000); \


CVAR1FR
    engine\light.cpp:10                 CVAR1FR(sunlight, 0,


CVAR1R
    engine\light.cpp:3                  CVAR1R(ambient, 0x191919);
    engine\light.cpp:6                  CVAR1R(skylight, 0);
    engine\renderlights.cpp:2602        CVAR1R(volcolour, 0x808080);
    engine\rendersky.cpp:375            CVAR1R(atmosunlight, 0);
    engine\rendersky.cpp:377            CVAR1R(atmosundisk, 0);


CVARFP
    engine\rendergl.cpp:2030            CVARFP(nominimapcolour, 0x101010, { if(minimaptex && !showminimap) drawminimap(); });


CVARP
    engine\renderva.cpp:613             CVARP(outlinecolour, 0);
    engine\renderva.cpp:667             CVARP(blendbrushcolour, 0x0000C0);
    engine\renderva.cpp:2127            CVARP(explicitskycolour, 0x800080);


CVARR
    engine\rendergl.cpp:1866            CVARR(fogcolour, 0x8099B3);
    engine\rendergl.cpp:2026            CVARR(minimapcolour, 0);
    engine\rendersky.cpp:56             CVARR(skyboxcolour, 0xFFFFFF);
    engine\rendersky.cpp:63             CVARR(cloudboxcolour, 0xFFFFFF);
    engine\rendersky.cpp:80             CVARR(cloudcolour, 0xFFFFFF);
    engine\rendersky.cpp:186            CVARR(fogdomecolour, 0);
    engine\water.cpp:374                CVARR(name##fallcolour, 0); \
    engine\water.cpp:375                CVARR(name##fallrefractcolour, 0); \


FVAR
    engine\aa.cpp:6                     FVAR(tqaareproject, 0, 75, 1e3f);
    engine\aa.cpp:9                     FVAR(tqaacolorweightscale, 0, 0.25f, 1e3f);
    engine\aa.cpp:10                    FVAR(tqaacolorweightbias, 0, 0.01f, 1);
    engine\grass.cpp:10                 FVAR(grassmarginfade, 0, 1, 1);
    engine\lightning.h:8                FVAR(lnjitterscale, 0, 0.5f, 10);
    engine\lightning.h:10               FVAR(lnscrollscale, 0, 0.125f, 10);
    engine\lightning.h:11               FVAR(lnblendpower, 0, 0.25f, 1000);
    engine\physics.cpp:1688             FVAR(straferoll, 0, 0.033f, 90);
    engine\physics.cpp:1689             FVAR(faderoll, 0, 0.95f, 1);
    engine\ragdoll.h:331                FVAR(ragdollrotfric, 0, 0.85f, 1);
    engine\ragdoll.h:332                FVAR(ragdollrotfricstop, 0, 0.1f, 1);
    engine\ragdoll.h:440                FVAR(ragdollbodyfric, 0, 0.95f, 1);
    engine\ragdoll.h:441                FVAR(ragdollbodyfricscale, 0, 2, 10);
    engine\ragdoll.h:442                FVAR(ragdollwaterfric, 0, 0.85f, 1);
    engine\ragdoll.h:443                FVAR(ragdollgroundfric, 0, 0.8f, 1);
    engine\ragdoll.h:444                FVAR(ragdollairfric, 0, 0.996f, 1);
    engine\ragdoll.h:445                FVAR(ragdollunstick, 0, 10, 1e3f);
    engine\ragdoll.h:509                FVAR(ragdolleyesmooth, 0, 0.5f, 1);
    engine\rendergl.cpp:1349            FVAR(avatardepth, 0, 0.7f, 1);
    engine\rendergl.cpp:1383            FVAR(thirdpersondistance, 0, 30, 50);
    engine\rendergl.cpp:1384            FVAR(thirdpersonup, -25, 0, 25);
    engine\rendergl.cpp:1385            FVAR(thirdpersonside, -25, 0, 25);
    engine\rendergl.cpp:1525            FVAR(nearplane, 0.01f, 0.54f, 2.0f);
    engine\rendergl.cpp:1560            FVAR(polygonoffsetfactor, -1e4f, -3.0f, 1e4f);
    engine\rendergl.cpp:1561            FVAR(polygonoffsetunits, -1e4f, -3.0f, 1e4f);
    engine\rendergl.cpp:1562            FVAR(depthoffset, -1e4f, 0.01f, 1e4f);
    engine\rendergl.cpp:1940            FVAR(fogintensity, 0, 0.15f, 1);
    engine\rendergl.cpp:1947            FVAR(fogcullintensity, 0, 1e-3f, 1);
    engine\renderlights.cpp:236         FVAR(aocutoff, 0, 2.0f, 1e3f);
    engine\renderlights.cpp:239         FVAR(aoprefilterdepth, 0, 1, 1e3f);
    engine\renderlights.cpp:943         FVAR(bloomthreshold, 1e-3f, 0.85f, 1e3f);
    engine\renderlights.cpp:949         FVAR(hdraccumscale, 0, 0.98f, 1);
    engine\renderlights.cpp:955         FVAR(hdrsaturate, 1e-3f, 0.85f, 1e3f);
    engine\renderlights.cpp:956         FVAR(hdrminexposure, 0, 0.03f, 1);
    engine\renderlights.cpp:957         FVAR(hdrmaxexposure, 0, 0.3f, 1);
    engine\renderlights.cpp:1518        FVAR(rhnudge, 0, 0.5f, 4);
    engine\renderlights.cpp:1892        FVAR(smpolyfactor, -1e3f, 1, 1e3f);
    engine\renderlights.cpp:1893        FVAR(smpolyoffset, -1e3f, 0, 1e3f);
    engine\renderlights.cpp:1894        FVAR(smbias, -1e6f, 0.01f, 1e6f);
    engine\renderlights.cpp:1895        FVAR(smpolyfactor2, -1e3f, 1.5f, 1e3f);
    engine\renderlights.cpp:1896        FVAR(smpolyoffset2, -1e3f, 0, 1e3f);
    engine\renderlights.cpp:1897        FVAR(smbias2, -1e6f, 0.02f, 1e6f);
    engine\renderlights.cpp:1898        FVAR(smprec, 1e-3f, 1, 1e3f);
    engine\renderlights.cpp:1899        FVAR(smcubeprec, 1e-3f, 1, 1e3f);
    engine\renderlights.cpp:1900        FVAR(smspotprec, 1e-3f, 1, 1e3f);
    engine\renderlights.cpp:2063        FVAR(csmsplitweight, 0.20f, 0.75f, 0.95f);
    engine\renderlights.cpp:2108        FVAR(csmpradiustweak, 1e-3f, 1, 1e3f);
    engine\renderlights.cpp:2109        FVAR(csmdepthrange, 0, 1024, 1e6f);
    engine\renderlights.cpp:2110        FVAR(csmdepthmargin, 0, 0.1f, 1e3f);
    engine\renderlights.cpp:2111        FVAR(csmpolyfactor, -1e3f, 2, 1e3f);
    engine\renderlights.cpp:2112        FVAR(csmpolyoffset, -1e4f, 0, 1e4f);
    engine\renderlights.cpp:2113        FVAR(csmbias, -1e6f, 1e-4f, 1e6f);
    engine\renderlights.cpp:2114        FVAR(csmpolyfactor2, -1e3f, 3, 1e3f);
    engine\renderlights.cpp:2115        FVAR(csmpolyoffset2, -1e4f, 0, 1e4f);
    engine\renderlights.cpp:2116        FVAR(csmbias2, -1e16f, 2e-4f, 1e6f);
    engine\renderlights.cpp:2483        FVAR(avatarshadowdist, 0, 12, 100);
    engine\renderlights.cpp:2484        FVAR(avatarshadowbias, 0, 8, 100);
    engine\renderlights.cpp:2596        FVAR(volbilateraldepth, 0, 4, 1e3f);
    engine\renderlights.cpp:2599        FVAR(volminstep, 0, 0.0625f, 1e3f);
    engine\renderlights.cpp:2600        FVAR(volprefilter, 0, 4, 1e3f);
    engine\renderlights.cpp:2601        FVAR(voldistclamp, 0, 0.99f, 2);
    engine\renderlights.cpp:2850        FVAR(depthtestlightsclamp, 0, 0.999995f, 1);
    engine\renderlights.cpp:2852        FVAR(lightradiustweak, 1, 1.11f, 2);
    engine\renderlights.cpp:4860        FVAR(refractmargin, 0, 0.1f, 1);
    engine\renderlights.cpp:4861        FVAR(refractdepth, 1e-3f, 16, 1e3f);
    engine\shader.cpp:1573              FVAR(blursigma, 0.005f, 0.5f, 2.0f);
    engine\ui.cpp:1850                  FVAR(uitextscale, 1, 0, 0);
    game\render.cpp:376                 FVAR(swaystep, 1, 35.0f, 100);
    game\render.cpp:377                 FVAR(swayside, 0, 0.10f, 1);
    game\render.cpp:378                 FVAR(swayup, -1, 0.15f, 1);



FVARF
    engine\renderlights.cpp:1511        FVARF(rsmpradiustweak, 1e-3f, 1, 1e3f, clearradiancehintscache());
    engine\renderlights.cpp:1512        FVARF(rhpradiustweak, 1e-3f, 1, 1e3f, clearradiancehintscache());
    engine\renderlights.cpp:1513        FVARF(rsmdepthrange, 0, 1024, 1e6f, clearradiancehintscache());
    engine\renderlights.cpp:1514        FVARF(rsmdepthmargin, 0, 0.1f, 1e3f, clearradiancehintscache());
    engine\renderlights.cpp:1519        FVARF(rhworldbias, 0, 0.5f, 10, clearradiancehintscache());
    engine\renderlights.cpp:1520        FVARF(rhsplitweight, 0.20f, 0.6f, 0.95f, clearradiancehintscache());
    engine\renderlights.cpp:1522        FVARF(rsmspread, 0, 0.15f, 1, clearradiancehintscache());


FVARFP
    engine\renderlights.cpp:953         FVARFP(hdrgamma, 1e-3f, 2, 1e3f, initwarning("HDR setup", INIT_LOAD, CHANGE_SHADERS));
    engine\renderlights.cpp:961         FVARFP(gscalecubicsoft, 0, 0, 1, initwarning("scaling setup", INIT_LOAD, CHANGE_SHADERS));

FVARFR
    engine\light.cpp:16                 FVARFR(sunlightscale, 0, 1, 16, setupsunlight());
    engine\light.cpp:20                 FVARFR(sunlightyaw, 0, 0, 360, setsunlightdir());
    engine\light.cpp:21                 FVARFR(sunlightpitch, -90, 90, 90, setsunlightdir());
    engine\renderlights.cpp:1531        FVARFR(giscale, 0, 1.5f, 1e3f, { cleardeferredlightshaders(); if(!giscale) cleanupradiancehints(); });
    engine\renderlights.cpp:1930        FVARFR(alphashadowscale, 0, 1, 2, clearshadowcache());


FVARNP
    engine\rendergl.cpp:1350            FVARNP(aspect, forceaspect, 0, 0, 1e3f);


FVARP
    engine\grass.cpp:6                  FVARP(grasstaper, 0, 0.2, 1);
    engine\grass.cpp:7                  FVARP(grassstep, 0.5, 3, 8);
    engine\movie.cpp:759                FVARP(movieminquality, 0, 0, 1);
    engine\rendergl.cpp:1374            FVARP(zoomsens, 1e-4f, 4.5f, 1e4f);
    engine\rendergl.cpp:1375            FVARP(zoomaccel, 0, 0, 1000);
    engine\rendergl.cpp:1377            FVARP(sensitivity, 1e-4f, 10, 1e4f);
    engine\rendergl.cpp:1378            FVARP(sensitivityscale, 1e-4f, 100, 1e4f);
    engine\rendergl.cpp:1380            FVARP(mouseaccel, 0, 0, 1000);
    engine\rendergl.cpp:2702            FVARP(conscale, 1e-3f, 0.33f, 1e3f);
    engine\renderlights.cpp:252         FVARP(aobilateraldepth, 0, 4, 1e3f);
    engine\renderlights.cpp:944         FVARP(bloomscale, 0, 1.0f, 1e3f);
    engine\renderparticles.cpp:8        FVARP(particlebright, 0, 2, 100);
    engine\ui.cpp:3466                  FVARP(uisensitivity, 1e-4f, 1, 1e4f);
    game\client.cpp:8                   FVARP(minimapalpha, 0, 1, 1);

FVARR
    engine\grass.cpp:64                 FVARR(grassanimscale, 0, 0.03f, 1);
    engine\grass.cpp:74                 FVARR(grasstest, 0, 0.6f, 1);
    engine\light.cpp:4                  FVARR(ambientscale, 0, 1, 16);
    engine\light.cpp:7                  FVARR(skylightscale, 0, 1, 16);
    engine\material.cpp:651             FVARR(name##refract, 0, 0.1f, 1e3f); \
    engine\renderlights.cpp:235         FVARR(aoradius, 0, 5, 256);
    engine\renderlights.cpp:237         FVARR(aodark, 1e-3f, 11.0f, 1e3f);
    engine\renderlights.cpp:238         FVARR(aosharp, 1e-3f, 1, 1e3f);
    engine\renderlights.cpp:240         FVARR(aomin, 0, 0.25f, 1);
    engine\renderlights.cpp:242         FVARR(aosunmin, 0, 0.5f, 1);
    engine\renderlights.cpp:954         FVARR(hdrbright, 1e-4f, 1.0f, 1e4f);
    engine\renderlights.cpp:1532        FVARR(giaoscale, 0, 3, 1e3f);
    engine\renderlights.cpp:2603        FVARR(volscale, 0, 1, 16);
    engine\rendersky.cpp:57             FVARR(skyboxoverbright, 1, 2, 16);
    engine\rendersky.cpp:58             FVARR(skyboxoverbrightmin, 0, 1, 16);
    engine\rendersky.cpp:59             FVARR(skyboxoverbrightthreshold, 0, 0.7f, 1);
    engine\rendersky.cpp:60             FVARR(spinsky, -720, 0, 720);
    engine\rendersky.cpp:64             FVARR(cloudboxalpha, 0, 1, 1);
    engine\rendersky.cpp:65             FVARR(spinclouds, -720, 0, 720);
    engine\rendersky.cpp:67             FVARR(cloudclip, 0, 0.5f, 1);
    engine\rendersky.cpp:69             FVARR(cloudoffsetx, 0, 0, 1);
    engine\rendersky.cpp:70             FVARR(cloudoffsety, 0, 0, 1);
    engine\rendersky.cpp:71             FVARR(cloudscrollx, -16, 0, 16);
    engine\rendersky.cpp:72             FVARR(cloudscrolly, -16, 0, 16);
    engine\rendersky.cpp:73             FVARR(cloudscale, 0.001, 1, 64);
    engine\rendersky.cpp:74             FVARR(spincloudlayer, -720, 0, 720);
    engine\rendersky.cpp:76             FVARR(cloudheight, -1, 0.2f, 1);
    engine\rendersky.cpp:77             FVARR(cloudfade, 0, 0.2f, 1);
    engine\rendersky.cpp:78             FVARR(cloudalpha, 0, 1, 1);
    engine\rendersky.cpp:181            FVARR(fogdomeheight, -1, -0.5f, 1);
    engine\rendersky.cpp:182            FVARR(fogdomemin, 0, 0, 1);
    engine\rendersky.cpp:183            FVARR(fogdomemax, 0, 0, 1);
    engine\rendersky.cpp:185            FVARR(fogdomeclip, 0, 1, 1);
    engine\rendersky.cpp:372            FVARR(atmoplanetsize, 1e-3f, 1, 1e3f);
    engine\rendersky.cpp:373            FVARR(atmoheight, 1e-3f, 1, 1e3f);
    engine\rendersky.cpp:374            FVARR(atmobright, 0, 1, 16);
    engine\rendersky.cpp:376            FVARR(atmosunlightscale, 0, 1, 16);
    engine\rendersky.cpp:378            FVARR(atmosundisksize, 0, 12, 90);
    engine\rendersky.cpp:379            FVARR(atmosundiskcorona, 0, 0.4f, 1);
    engine\rendersky.cpp:380            FVARR(atmosundiskbright, 0, 1, 16);
    engine\rendersky.cpp:381            FVARR(atmohaze, 0, 0.1f, 16);
    engine\rendersky.cpp:382            FVARR(atmodensity, 0, 1, 16);
    engine\rendersky.cpp:383            FVARR(atmoozone, 0, 1, 16);
    engine\rendersky.cpp:384            FVARR(atmoalpha, 0, 1, 1);
    engine\water.cpp:28                 FVARR(causticcontrast, 0, 0.6f, 2);
    engine\water.cpp:29                 FVARR(causticoffset, 0, 0.7f, 1);
    engine\water.cpp:373                FVARR(name##refract, 0, 0.1f, 1e3f); \
    engine\water.cpp:377                FVARR(name##fallrefract, 0, 0.1f, 1e3f);
    engine\water.cpp:400                FVARR(name##glowmin, 0, 0.25f, 2); \
    engine\water.cpp:401                FVARR(name##glowmax, 0, 1.0f, 2); \


HVARP
    engine\console.cpp:83               HVARP(confilter, 0, 0xFFFFFF, 0xFFFFFF);
    engine\console.cpp:84               HVARP(fullconfilter, 0, 0xFFFFFF, 0xFFFFFF);
    engine\console.cpp:85               HVARP(miniconfilter, 0, 0, 0xFFFFFF);


SVAR
    engine\master.cpp:229               SVAR(mastermotd, "");
    engine\server.cpp:585               SVAR(serverip, "");
    game\server.cpp:612                 SVAR(serverdesc, "");
    game\server.cpp:613                 SVAR(serverpass, "");
    game\server.cpp:614                 SVAR(adminpass, "");
    game\server.cpp:623                 SVAR(servermotd, "");
    game\server.cpp:1312                SVAR(serverauth, "");


SVARF
    engine\server.cpp:378               SVARF(mastername, server::defaultmaster(), disconnectmaster());
    engine\sound.cpp:165                SVARF(audiodriver, AUDIODRIVER, { shouldinitaudio = true; initwarning("sound configuration", INIT_RESET, CHANGE_SOUND); });


SVARFR
    engine\rendersky.cpp:55             SVARFR(skybox, "", { if(skybox[0]) loadsky(skybox, sky); });
    engine\rendersky.cpp:62             SVARFR(cloudbox, "", { if(cloudbox[0]) loadsky(cloudbox, clouds); });
    engine\rendersky.cpp:68             SVARFR(cloudlayer, "", { if(cloudlayer[0]) cloudoverlay = loadskyoverlay(cloudlayer); });


SVARP
    engine\client.cpp:73                SVARP(connectname, "");
    engine\movie.cpp:34                 SVARP(moviedir, "movie");
    engine\texture.cpp:3958             SVARP(screenshotdir, "screenshot");
    game\server.cpp:1129                SVARP(demodir, "demo");


SVARR
    engine\world.cpp:8                  SVARR(maptitle, "Untitled Map by Unknown");


VAR
    engine\aa.cpp:11                    VAR(tqaaresolvegather, 1, 0, 0);
    engine\aa.cpp:75                    VAR(debugtqaa, 0, 0, 2);
    engine\aa.cpp:498                   VAR(smaat2x, 1, 0, 0);
    engine\aa.cpp:499                   VAR(smaas2x, 1, 0, 0);
    engine\aa.cpp:500                   VAR(smaa4x, 1, 0, 0);
    engine\aa.cpp:565                   VAR(debugsmaa, 0, 0, 5);
    engine\animmodel.h:2                VAR(testtags, 0, 0, 1);
    engine\blend.cpp:980                VAR(paintblendmapdelay, 1, 500, 3000);
    engine\blend.cpp:981                VAR(paintblendmapinterval, 1, 30, 3000);
    engine\command.cpp:237              VAR(dbgalias, 0, 4, 1000);
    engine\grass.cpp:4                  VAR(dbggrass, 0, 0, 1);
    engine\grass.cpp:48                 VAR(maxgrass, 10, 10000, 10000);
    engine\light.cpp:543                VAR(fullbright, 0, 0, 1);
    engine\light.cpp:544                VAR(fullbrightlevel, 0, 160, 255);
    engine\lightning.h:6                VAR(lnjittermillis, 0, 100, 1000);
    engine\lightning.h:7                VAR(lnjitterradius, 0, 4, 100);
    engine\lightning.h:9                VAR(lnscrollmillis, 1, 300, 5000);
    engine\main.cpp:76                  VAR(desktopw, 1, 0, 0);
    engine\main.cpp:77                  VAR(desktoph, 1, 0, 0);
    engine\main.cpp:242                 VAR(menumute, 0, 1, 1);
    engine\main.cpp:341                 VAR(progressbackground, 0, 0, 1);
    engine\main.cpp:384                 VAR(textinputfilter, 0, 5, 1000);
    engine\main.cpp:411                 VAR(sdl_xgrab_bug, 0, 0, 1);
    engine\main.cpp:558                 VAR(dbgmodes, 0, 0, 1);
    engine\main.cpp:1086                VAR(numcpus, 1, 1, 16);
    engine\menus.cpp:19                 VAR(hidechanges, 0, 0, 1);
    engine\menus.cpp:67                 VAR(mainmenu, 1, 1, 0);
    engine\movie.cpp:13                 VAR(dbgmovie, 0, 0, 1);
    engine\movie.cpp:755                VAR(movieaccelblit, 0, 0, 1);
    engine\movie.cpp:756                VAR(movieaccelyuv, 0, 1, 1);
    engine\octa.cpp:474                 VAR(mipvis, 0, 0, 1);
    engine\octa.cpp:1403                VAR(maxmerge, 0, 6, 12);
    engine\octa.cpp:1404                VAR(minface, 0, 4, 12);
    engine\octaedit.cpp:135             VAR(passthroughsel, 0, 0, 1);
    engine\octaedit.cpp:136             VAR(editing, 1, 0, 0);
    engine\octaedit.cpp:137             VAR(selectcorners, 0, 0, 1);
    engine\octaedit.cpp:352             VAR(gridlookup, 0, 0, 1);
    engine\octaedit.cpp:353             VAR(passthroughcube, 0, 1, 1);
    engine\octaedit.cpp:354             VAR(passthroughent, 0, 1, 1);
    engine\octaedit.cpp:1964            VAR(invalidcubeguard, 0, 1, 1);
    engine\octaedit.cpp:2054            VAR(selectionsurf, 0, 0, 1);
    engine\octaedit.cpp:2209            VAR(allfaces, 0, 0, 1);
    engine\octaedit.cpp:2210            VAR(usevdelta, 1, 0, 0);
    engine\octarender.cpp:13            VAR(printvbo, 0, 0, 1);
    engine\physics.cpp:751              VAR(testtricol, 0, 0, 2);
    engine\physics.cpp:1690             VAR(floatspeed, 1, 100, 10000);
    engine\physics.cpp:1865             VAR(physinterp, 0, 1, 1);
    engine\pvs.cpp:276                  VAR(maxpvsblocker, 1, 512, 1<<16);
    engine\pvs.cpp:277                  VAR(pvsleafsize, 1, 64, 1024);
    engine\ragdoll.h:329                VAR(ragdolltimestepmin, 1, 5, 50);
    engine\ragdoll.h:330                VAR(ragdolltimestepmax, 1, 10, 50);
    engine\ragdoll.h:399                VAR(ragdollconstrain, 1, 7, 100);
    engine\ragdoll.h:446                VAR(ragdollexpireoffset, 0, 2500, 30000);
    engine\ragdoll.h:447                VAR(ragdollwaterexpireoffset, 0, 4000, 30000);
    engine\ragdoll.h:510                VAR(ragdolleyesmoothmillis, 1, 250, 10000);
    engine\rendergl.cpp:10              VAR(glversion, 1, 0, 0);
    engine\rendergl.cpp:11              VAR(glslversion, 1, 0, 0);
    engine\rendergl.cpp:12              VAR(glcompat, 1, 0, 0);
    engine\rendergl.cpp:253             VAR(glerr, 0, 0, 1);
    engine\rendergl.cpp:271             VAR(amd_pf_bug, 0, 0, 1);
    engine\rendergl.cpp:272             VAR(amd_eal_bug, 0, 0, 1);
    engine\rendergl.cpp:273             VAR(mesa_texrectoffset_bug, 0, 0, 1);
    engine\rendergl.cpp:274             VAR(intel_texalpha_bug, 0, 0, 1);
    engine\rendergl.cpp:275             VAR(intel_mapbufferrange_bug, 0, 0, 1);
    engine\rendergl.cpp:276             VAR(mesa_swap_bug, 0, 0, 1);
    engine\rendergl.cpp:277             VAR(useubo, 1, 0, 0);
    engine\rendergl.cpp:278             VAR(usetexgather, 1, 0, 0);
    engine\rendergl.cpp:279             VAR(usetexcompress, 1, 0, 0);
    engine\rendergl.cpp:280             VAR(maxdrawbufs, 1, 0, 0);
    engine\rendergl.cpp:281             VAR(maxdualdrawbufs, 1, 0, 0);
    engine\rendergl.cpp:305             VAR(dbgexts, 0, 0, 1);
    engine\rendergl.cpp:1173            VAR(frametimer, 0, 0, 1);
    engine\rendergl.cpp:1235            VAR(wireframe, 0, 0, 1);
    engine\rendergl.cpp:1347            VAR(avatarzoomfov, 1, 1, 1);
    engine\rendergl.cpp:1348            VAR(avatarfov, 10, 40, 100);
    engine\rendergl.cpp:1353            VAR(zoom, -1, 0, 1);
    engine\rendergl.cpp:1382            VAR(thirdperson, 0, 0, 2);
    engine\rendergl.cpp:1867            VAR(fogoverlay, 0, 1, 1);
    engine\rendergl.cpp:2278            VAR(modelpreviewfov, 10, 20, 100);
    engine\rendergl.cpp:2279            VAR(modelpreviewpitch, -90, -15, 90);
    engine\rendergl.cpp:2603            VAR(hidestats, 0, 0, 1);
    engine\rendergl.cpp:2604            VAR(hidehud, 0, 0, 1);
    engine\rendergl.cpp:2700            VAR(statrate, 1, 200, 1000);
    engine\renderlights.cpp:249         VAR(aodepthformat, 1, 0, 0);
    engine\renderlights.cpp:257         VAR(aoderiv, -1, 1, 1);
    engine\renderlights.cpp:258         VAR(debugao, 0, 0, 1);
    engine\renderlights.cpp:453         VAR(gdepthformat, 1, 0, 0);
    engine\renderlights.cpp:456         VAR(ghasstencil, 1, 0, 0);
    engine\renderlights.cpp:464         VAR(msaamaxsamples, 1, 0, 0);
    engine\renderlights.cpp:465         VAR(msaamaxdepthtexsamples, 1, 0, 0);
    engine\renderlights.cpp:466         VAR(msaamaxcolortexsamples, 1, 0, 0);
    engine\renderlights.cpp:467         VAR(msaaminsamples, 1, 0, 0);
    engine\renderlights.cpp:468         VAR(msaasamples, 1, 0, 0);
    engine\renderlights.cpp:469         VAR(msaalight, 1, 0, 0);
    engine\renderlights.cpp:878         VAR(msaadepthblit, 0, 0, 1);
    engine\renderlights.cpp:950         VAR(hdraccummillis, 1, 33, 1000);
    engine\renderlights.cpp:951         VAR(hdrreduce, 0, 2, 2);
    engine\renderlights.cpp:1327        VAR(debugbloom, 0, 0, 1);
    engine\renderlights.cpp:1338        VAR(debugdepth, 0, 0, 1);
    engine\renderlights.cpp:1349        VAR(debugstencil, 0, 0, 0xFF);
    engine\renderlights.cpp:1378        VAR(debugrefract, 0, 0, 1);
    engine\renderlights.cpp:1523        VAR(rhclipgrid, 0, 1, 1);
    engine\renderlights.cpp:1526        VAR(rsmcull, 0, 1, 1);
    engine\renderlights.cpp:1528        VAR(rhdyntex, 0, 0, 1);
    engine\renderlights.cpp:1529        VAR(rhdynmm, 0, 0, 1);
    engine\renderlights.cpp:1535        VAR(debugrsm, 0, 0, 2);
    engine\renderlights.cpp:1545        VAR(debugrh, -1, 0, RH_MAXSPLITS*(RH_MAXGRID + 2));
    engine\renderlights.cpp:1780        VAR(debugshadowatlas, 0, 0, 3);
    engine\renderlights.cpp:1904        VAR(smsidecull, 0, 1, 1);
    engine\renderlights.cpp:1905        VAR(smviscull, 0, 1, 1);
    engine\renderlights.cpp:1906        VAR(smborder, 0, 3, 16);
    engine\renderlights.cpp:1907        VAR(smborder2, 0, 4, 16);
    engine\renderlights.cpp:1908        VAR(smminradius, 0, 16, 10000);
    engine\renderlights.cpp:1909        VAR(smminsize, 1, 96, 1024);
    engine\renderlights.cpp:1910        VAR(smmaxsize, 1, 384, 1024);
    engine\renderlights.cpp:1912        VAR(smused, 1, 0, 0);
    engine\renderlights.cpp:1913        VAR(smquery, 0, 1, 1);
    engine\renderlights.cpp:1918        VAR(smnoshadow, 0, 0, 1);
    engine\renderlights.cpp:1919        VAR(smdynshadow, 0, 1, 1);
    engine\renderlights.cpp:1922        VAR(lightpassesused, 1, 0, 0);
    engine\renderlights.cpp:1923        VAR(lightsvisible, 1, 0, 0);
    engine\renderlights.cpp:1924        VAR(lightsoccluded, 1, 0, 0);
    engine\renderlights.cpp:2106        VAR(csmnearplane, 1, 1, 16);
    engine\renderlights.cpp:2107        VAR(csmfarplane, 64, 1024, 16384);
    engine\renderlights.cpp:2117        VAR(csmcull, 0, 1, 1);
    engine\renderlights.cpp:2511        VAR(forcespotlights, 1, 0, 0);
    engine\renderlights.cpp:2604        VAR(volderiv, -1, 1, 1);
    engine\renderlights.cpp:2709        VAR(lighttilealignw, 1, 16, 256);
    engine\renderlights.cpp:2710        VAR(lighttilealignh, 1, 16, 256);
    engine\renderlights.cpp:2849        VAR(depthtestlights, 0, 2, 2);
    engine\renderlights.cpp:2851        VAR(depthfaillights, 0, 1, 1);
    engine\renderlights.cpp:3552        VAR(oqvol, 0, 1, 1);
    engine\renderlights.cpp:3553        VAR(oqlights, 0, 1, 1);
    engine\renderlights.cpp:3554        VAR(debuglightscissor, 0, 0, 1);
    engine\renderlights.cpp:3697        VAR(csminoq, 0, 1, 1);
    engine\renderlights.cpp:3698        VAR(sminoq, 0, 1, 1);
    engine\renderlights.cpp:3699        VAR(rhinoq, 0, 1, 1);
    engine\renderlights.cpp:5073        VAR(gdepthclear, 0, 1, 1);
    engine\renderlights.cpp:5074        VAR(gcolorclear, 0, 1, 1);
    engine\rendermodel.cpp:3            VAR(oqdynent, 0, 1, 1);
    engine\rendermodel.cpp:4            VAR(animationinterpolationtime, 0, 200, 1000);
    engine\rendermodel.cpp:558          VAR(maxmodelradiusdistance, 10, 200, 1000);
    engine\renderparticles.cpp:26       VAR(cullparticles, 0, 1, 1);
    engine\renderparticles.cpp:27       VAR(replayparticles, 0, 1, 1);
    engine\renderparticles.cpp:29       VAR(dbgpcull, 0, 0, 1);
    engine\renderparticles.cpp:30       VAR(dbgpseed, 0, 0, 1);
    engine\rendersky.cpp:456            VAR(showsky, 0, 1, 1);
    engine\rendersky.cpp:457            VAR(clampsky, 0, 1, 1);
    engine\renderva.cpp:343             VAR(oqfrags, 0, 8, 64);
    engine\renderva.cpp:344             VAR(oqwait, 0, 1, 1);
    engine\renderva.cpp:506             VAR(oqmm, 0, 4, 8);
    engine\renderva.cpp:612             VAR(outline, 0, 0, 1);
    engine\renderva.cpp:614             VAR(dtoutline, 0, 1, 1);
    engine\renderva.cpp:881             VAR(smbbcull, 0, 1, 1);
    engine\renderva.cpp:882             VAR(smdistcull, 0, 1, 1);
    engine\renderva.cpp:883             VAR(smnodraw, 0, 0, 1);
    engine\renderva.cpp:1141            VAR(oqdist, 0, 256, 1024);
    engine\renderva.cpp:1696            VAR(batchgeom, 0, 1, 1);
    engine\renderva.cpp:1768            VAR(oqgeom, 0, 1, 1);
    engine\renderva.cpp:2482            VAR(batchdecals, 0, 1, 1);
    engine\server.cpp:584               VAR(serveruprate, 0, 0, INT_MAX);
    engine\shader.cpp:16                VAR(maxvsuniforms, 1, 0, 0);
    engine\shader.cpp:17                VAR(maxfsuniforms, 1, 0, 0);
    engine\shader.cpp:18                VAR(mintexoffset, 1, 0, 0);
    engine\shader.cpp:19                VAR(maxtexoffset, 1, 0, 0);
    engine\shader.cpp:20                VAR(mintexrectoffset, 1, 0, 0);
    engine\shader.cpp:21                VAR(maxtexrectoffset, 1, 0, 0);
    engine\shader.cpp:23                VAR(dbgshader, 0, 1, 2);
    engine\shader.cpp:304               VAR(dbgubo, 0, 0, 1);
    engine\shader.cpp:1070              VAR(defershaders, 0, 1, 1);
    engine\skelmodel.h:3                VAR(maxskelanimdata, 1, 192, 0);
    engine\sound.cpp:539                VAR(stereo, 0, 1, 1);
    engine\sound.cpp:541                VAR(maxsoundradius, 1, 340, 0);
    engine\sound.cpp:619                VAR(dbgsound, 0, 0, 1);
    engine\stain.cpp:30                 VAR(dbgstain, 0, 0, 1);
    engine\texture.cpp:681              VAR(hwtexsize, 1, 0, 0);
    engine\texture.cpp:682              VAR(hwcubetexsize, 1, 0, 0);
    engine\texture.cpp:683              VAR(hwmaxaniso, 1, 0, 0);
    engine\texture.cpp:684              VAR(hwtexunits, 1, 0, 0);
    engine\texture.cpp:685              VAR(hwvtexunits, 1, 0, 0);
    engine\texture.cpp:1549             VAR(usedds, 0, 1, 1);
    engine\texture.cpp:1550             VAR(dbgdds, 0, 0, 1);
    engine\texture.cpp:1551             VAR(scaledds, 0, 2, 4);
    engine\world.cpp:11                 VAR(octaentsize, 0, 64, 1024);
    engine\world.cpp:12                 VAR(entselradius, 0, 2, 10);
    engine\world.cpp:414                VAR(attachradius, 1, 100, 1000);
    engine\world.cpp:585                VAR(entselsnap, 0, 0, 1);
    engine\world.cpp:586                VAR(entmovingshadow, 0, 1, 1);
    engine\world.cpp:625                VAR(showentradius, 0, 1, 1);
    engine\world.cpp:912                VAR(entitysurf, 0, 0, 1);
    engine\world.cpp:961                VAR(entautoviewdist, 0, 25, 100);
    engine\world.cpp:999                VAR(entdrop, 0, 2, 3);
    engine\worldio.cpp:441              VAR(dbgvars, 0, 0, 1);
    game\ai.cpp:13                      VAR(aidebug, 0, 0, 6);
    game\ai.cpp:14                      VAR(aiforcegun, -1, -1, NUMGUNS-1);
    game\ai.cpp:1337                    VAR(showwaypoints, 0, 0, 1);
    game\ai.cpp:1338                    VAR(showwaypointsradius, 0, 200, 10000);
    game\aiman.h:6                      VAR(serverbotbalance, 0, 1, 1);
    game\ctf.h:4                        VAR(ctftkpenalty, 0, 1, 1);
    game\extinfo.h:32                   VAR(extinfoip, 0, 0, 1);
    game\render.cpp:205                 VAR(animoverride, -1, 0, NUMANIMS-1);
    game\render.cpp:206                 VAR(testanims, 0, 0, 1);
    game\render.cpp:207                 VAR(testpitch, -90, 0, 90);
    game\server.cpp:451                 VAR(lockmaprotation, 0, 0, 2);
    game\server.cpp:604                 VAR(maxdemos, 0, 5, 25);
    game\server.cpp:605                 VAR(maxdemosize, 0, 16, 31);
    game\server.cpp:606                 VAR(restrictdemos, 0, 1, 1);
    game\server.cpp:609                 VAR(restrictpausegame, 0, 1, 1);
    game\server.cpp:610                 VAR(restrictgamespeed, 0, 1, 1);
    game\server.cpp:908                 VAR(persistteams, 0, 0, 1);
    game\server.cpp:2138                VAR(overtime, 0, 0, 1);
    game\server.cpp:2479                VAR(modifiedmapspectator, 0, 1, 2);
    shared\stream.cpp:756               VAR(dbggz, 0, 0, 1);
    shared\zip.cpp:113                  VAR(dbgzip, 0, 0, 1);



VARF
    engine\aa.cpp:7                     VARF(tqaamovemask, 0, 1, 1, cleanupaa());
    engine\aa.cpp:563                   VARF(smaadepthmask, 0, 1, 1, cleanupsmaa());
    engine\aa.cpp:564                   VARF(smaastencil, 0, 1, 1, cleanupsmaa());
    engine\animmodel.h:3                VARF(dbgcolmesh, 0, 0, 1,
    engine\blend.cpp:359                VARF(blendpaintmode, 0, 0, 5,
    engine\client.cpp:22                VARF(rate, 0, 0, 1024, setrate(rate));
    engine\client.cpp:26                VARF(throttle_interval, 0, 5, 30, throttle());
    engine\client.cpp:27                VARF(throttle_accel,    0, 2, 32, throttle());
    engine\client.cpp:28                VARF(throttle_decel,    0, 2, 32, throttle());
    engine\main.cpp:488                 VARF(fullscreen, 0, 0, 1, setfullscreen(fullscreen!=0));
    engine\main.cpp:490                 VARF(fullscreen, 0, 1, 1, setfullscreen(fullscreen!=0));
    engine\material.cpp:313             VARF(optmats, 0, 1, 1, allchanged());
    engine\octaedit.cpp:108             VARF(dragging, 0, 0, 1,
    engine\octaedit.cpp:127             VARF(gridpower, 0, 3, 12,
    engine\octaedit.cpp:138             VARF(hmapedit, 0, 0, 1, horient = sel.orient);
    engine\octaedit.cpp:355             VARF(passthrough, 0, 0, 1, { passthroughsel = passthrough; entcancel(); });
    engine\octarender.cpp:1546          VARF(vafacemax, 64, 384, 256*256, allchanged());
    engine\octarender.cpp:1547          VARF(vafacemin, 0, 96, 256*256, allchanged());
    engine\octarender.cpp:1548          VARF(vacubesize, 32, 128, 0x1000, allchanged());
    engine\physics.cpp:497              VARF(dynentsize, 4, 7, 12, cleardynentcache());
    engine\pvs.cpp:985                  VARF(lockpvs, 0, 0, 1, lockpvs_(lockpvs!=0));
    engine\renderlights.cpp:246         VARF(aoreducedepth, 0, 1, 2, cleanupao());
    engine\renderlights.cpp:250         VARF(aonoise, 0, 5, 8, cleanupao());
    engine\renderlights.cpp:254         VARF(aopackdepth, 0, 1, 1, cleanupao());
    engine\renderlights.cpp:256         VARF(aoderivnormal, 0, 0, 1, cleanupao());
    engine\renderlights.cpp:454         VARF(gstencil, 0, 0, 1, initwarning("g-buffer setup", INIT_LOAD, CHANGE_SHADERS));
    engine\renderlights.cpp:455         VARF(gdepthstencil, 0, 2, 2, initwarning("g-buffer setup", INIT_LOAD, CHANGE_SHADERS));
    engine\renderlights.cpp:458         VARF(msaadepthstencil, 0, 2, 2, initwarning("MSAA setup", INIT_LOAD, CHANGE_SHADERS));
    engine\renderlights.cpp:459         VARF(msaastencil, 0, 0, 1, initwarning("MSAA setup", INIT_LOAD, CHANGE_SHADERS));
    engine\renderlights.cpp:460         VARF(msaaedgedetect, 0, 1, 1, cleanupgbuffer());
    engine\renderlights.cpp:463         VARF(msaatonemapblit, 0, 0, 1, cleanupgbuffer());
    engine\renderlights.cpp:470         VARF(msaapreserve, -1, 0, 1, initwarning("MSAA setup", INIT_LOAD, CHANGE_SHADERS));
    engine\renderlights.cpp:536         VARF(forcepacknorm, 0, 0, 1, initwarning("g-buffer setup", INIT_LOAD, CHANGE_SHADERS));
    engine\renderlights.cpp:1505        VARF(rhrect, 0, 0, 1, cleanupradiancehints());
    engine\renderlights.cpp:1506        VARF(rhsplits, 1, 2, RH_MAXSPLITS, { cleardeferredlightshaders(); cleanupradiancehints(); });
    engine\renderlights.cpp:1507        VARF(rhborder, 0, 1, 1, cleanupradiancehints());
    engine\renderlights.cpp:1508        VARF(rsmsize, 64, 384, 2048, cleanupradiancehints());
    engine\renderlights.cpp:1509        VARF(rhnearplane, 1, 1, 16, clearradiancehintscache());
    engine\renderlights.cpp:1510        VARF(rhfarplane, 64, 1024, 16384, clearradiancehintscache());
    engine\renderlights.cpp:1521        VARF(rhgrid, 3, 27, RH_MAXGRID, cleanupradiancehints());
    engine\renderlights.cpp:1524        VARF(rhcache, 0, 1, 1, cleanupradiancehints());
    engine\renderlights.cpp:1525        VARF(rhforce, 0, 0, 1, cleanupradiancehints());
    engine\renderlights.cpp:1914        VARF(smcullside, 0, 1, 1, cleanupshadowatlas());
    engine\renderlights.cpp:1915        VARF(smcache, 0, 1, 2, cleanupshadowatlas());
    engine\renderlights.cpp:1920        VARF(smalpha, 0, 2, 2, { cleardeferredlightshaders(); cleanupshadowatlas(); });
    engine\renderlights.cpp:1937        VARF(lighttilebatch, 0, MAXLIGHTTILEBATCH, MAXLIGHTTILEBATCH, cleardeferredlightshaders());
    engine\renderlights.cpp:1938        VARF(batchsunlight, 0, 2, 2, cleardeferredlightshaders());
    engine\renderlights.cpp:2061        VARF(csmmaxsize, 256, 768, 2048, clearshadowcache());
    engine\renderlights.cpp:2062        VARF(csmsplits, 1, 3, CSM_MAXSPLITS, { cleardeferredlightshaders(); clearshadowcache(); });
    engine\renderlights.cpp:2064        VARF(csmshadowmap, 0, 1, 1, { cleardeferredlightshaders(); clearshadowcache(); });
    engine\renderlights.cpp:2485        VARF(avatarshadowstencil, 0, 1, 2, initwarning("g-buffer setup", INIT_LOAD, CHANGE_SHADERS));
    engine\renderva.cpp:342             VARF(oqany, 0, 0, 2, clearqueries());
    engine\renderva.cpp:2764            VARF(smmesh, 0, 1, 1, { if(!smmesh) clearshadowmeshes(); });
    engine\server.cpp:165               VARF(maxclients, 0, DEFAULTCLIENTS, MAXCLIENTS, { if(!maxclients) maxclients = DEFAULTCLIENTS; });
    engine\server.cpp:166               VARF(maxdupclients, 0, 0, MAXCLIENTS, { if(serverhost) serverhost->duplicatePeers = maxdupclients ? maxdupclients : MAXCLIENTS; });
    engine\server.cpp:379               VARF(masterport, 1, server::masterport(), 0xFFFF, disconnectmaster());
    engine\server.cpp:586               VARF(serverport, 0, server::serverport(), 0xFFFF, { if(!serverport) serverport = server::serverport(); });
    engine\sound.cpp:166                VARF(sound, 0, 1, 1, { shouldinitaudio = true; initwarning("sound configuration", INIT_RESET, CHANGE_SOUND); });
    engine\sound.cpp:167                VARF(soundchans, 1, 32, 128, initwarning("sound configuration", INIT_RESET, CHANGE_SOUND));
    engine\sound.cpp:168                VARF(soundfreq, 0, 44100, 48000, initwarning("sound configuration", INIT_RESET, CHANGE_SOUND));
    engine\sound.cpp:169                VARF(soundbufferlen, 128, 1024, 4096, initwarning("sound configuration", INIT_RESET, CHANGE_SOUND));
    engine\texture.cpp:691              VARF(trilinear, 0, 1, 1, initwarning("texture filtering", INIT_LOAD));
    engine\texture.cpp:692              VARF(bilinear, 0, 1, 1, initwarning("texture filtering", INIT_LOAD));
    engine\world.cpp:346                VARF(entediting, 0, 0, 1, { if(!entediting) { entcancel(); efocus = enthover = -1; } });
    game\server.cpp:607                 VARF(autorecorddemo, 0, 0, 1, demonextmatch = autorecorddemo!=0);
    game\server.cpp:615                 VARF(publicserver, 0, 0, 2, {
    game\waypoint.cpp:509               VARF(dropwaypoints, 0, 0, 1, { player1->lastnode = -1; });


VARFN
    engine\main.cpp:104                 VARFN(screenw, scr_w, SCR_MINW, -1, SCR_MAXW, initwarning("screen resolution"));
    engine\main.cpp:105                 VARFN(screenh, scr_h, SCR_MINH, -1, SCR_MAXH, initwarning("screen resolution"));
    engine\octarender.cpp:14            VARFN(vbosize, maxvbosize, 0, 1<<14, 1<<16, allchanged());
    engine\rendergl.cpp:1172            VARFN(timer, usetimers, 0, 0, 1, cleanuptimers());


VARFNP
    engine\main.cpp:527                 VARFNP(gamma, reqgamma, 30, 100, 300,


VARFP
    engine\aa.cpp:5                     VARFP(tqaa, 0, 0, 1, cleanupaa());
    engine\aa.cpp:171                   VARFP(fxaa, 0, 0, 1, cleanupfxaa());
    engine\aa.cpp:172                   VARFP(fxaaquality, 0, 1, 3, cleanupfxaa());
    engine\aa.cpp:173                   VARFP(fxaagreenluma, 0, 0, 1, cleanupfxaa());
    engine\aa.cpp:558                   VARFP(smaa, 0, 0, 1, cleanupgbuffer());
    engine\aa.cpp:559                   VARFP(smaaspatial, 0, 1, 1, cleanupgbuffer());
    engine\aa.cpp:560                   VARFP(smaaquality, 0, 2, 3, cleanupsmaa());
    engine\aa.cpp:561                   VARFP(smaacoloredge, 0, 0, 1, cleanupsmaa());
    engine\aa.cpp:562                   VARFP(smaagreenluma, 0, 0, 1, cleanupsmaa());
    engine\blend.cpp:629                VARFP(blendtexsize, 0, 9, 12-BM_SCALE, { clearblendtextures(); updateblendtextures(); });
    engine\console.cpp:15               VARFP(maxcon, 10, 200, MAXCONLINES, { while(conlines.length() > maxcon) delete[] conlines.pop().line; });
    engine\main.cpp:555                 VARFP(vsync, 0, 0, 1, restorevsync());
    engine\main.cpp:556                 VARFP(vsynctear, 0, 0, 1, { if(vsync) restorevsync(); });
    engine\main.cpp:1075                VARFP(clockerror, 990000, 1000000, 1010000, clockreset());
    engine\main.cpp:1076                VARFP(clockfix, 0, 0, 1, clockreset());
    engine\material.cpp:663             VARFP(glassenv, 0, 1, 1, preloadglassshaders());
    engine\octarender.cpp:633           VARFP(filltjoints, 0, 1, 1, allchanged());
    engine\rendergl.cpp:2028            VARFP(minimapsize, 7, 8, 10, { if(minimaptex) drawminimap(); });
    engine\rendergl.cpp:2029            VARFP(showminimap, 0, 1, 1, { if(minimaptex) drawminimap(); });
    engine\rendergl.cpp:2564            VARFP(damagescreen, 0, 1, 1, { if(!damagescreen) damageblendmillis = 0; });
    engine\renderlights.cpp:234         VARFP(ao, 0, 1, 1, { cleanupao(); cleardeferredlightshaders(); });
    engine\renderlights.cpp:245         VARFP(aoreduce, 0, 1, 2, cleanupao());
    engine\renderlights.cpp:247         VARFP(aofloatdepth, 0, 1, 2, initwarning("AO setup", INIT_LOAD, CHANGE_SHADERS));
    engine\renderlights.cpp:248         VARFP(aoprec, 0, 1, 1, cleanupao());
    engine\renderlights.cpp:251         VARFP(aobilateral, 0, 3, 10, cleanupao());
    engine\renderlights.cpp:253         VARFP(aobilateralupscale, 0, 0, 1, cleanupao());
    engine\renderlights.cpp:255         VARFP(aotaps, 1, 5, 12, cleanupao());
    engine\renderlights.cpp:452         VARFP(glineardepth, 0, 0, 3, initwarning("g-buffer setup", INIT_LOAD, CHANGE_SHADERS));
    engine\renderlights.cpp:457         VARFP(msaa, 0, 0, 16, initwarning("MSAA setup", INIT_LOAD, CHANGE_SHADERS));
    engine\renderlights.cpp:461         VARFP(msaalineardepth, -1, -1, 3, initwarning("MSAA setup", INIT_LOAD, CHANGE_SHADERS));
    engine\renderlights.cpp:462         VARFP(msaatonemap, 0, 0, 1, cleanupgbuffer());
    engine\renderlights.cpp:947         VARFP(bloomsize, 6, 9, 11, cleanupbloom());
    engine\renderlights.cpp:948         VARFP(bloomprec, 0, 2, 3, cleanupbloom());
    engine\renderlights.cpp:952         VARFP(hdrprec, 0, 2, 3, cleanupgbuffer());
    engine\renderlights.cpp:958         VARFP(gscale, 25, 100, 100, cleanupgbuffer());
    engine\renderlights.cpp:959         VARFP(gscalecubic, 0, 0, 1, cleanupgbuffer());
    engine\renderlights.cpp:960         VARFP(gscalenearest, 0, 0, 1, cleanupgbuffer());
    engine\renderlights.cpp:1515        VARFP(rhprec, 0, 0, 1, cleanupradiancehints());
    engine\renderlights.cpp:1516        VARFP(rsmprec, 0, 0, 3, cleanupradiancehints());
    engine\renderlights.cpp:1517        VARFP(rsmdepthprec, 0, 0, 2, cleanupradiancehints());
    engine\renderlights.cpp:1527        VARFP(rhtaps, 0, 20, 32, cleanupradiancehints());
    engine\renderlights.cpp:1533        VARFP(gi, 0, 1, 1, { cleardeferredlightshaders(); cleanupradiancehints(); });
    engine\renderlights.cpp:1902        VARFP(smsize, 10, 12, 14, cleanupshadowatlas());
    engine\renderlights.cpp:1903        VARFP(smdepthprec, 0, 0, 2, cleanupshadowatlas());
    engine\renderlights.cpp:1916        VARFP(smfilter, 0, 2, 3, { cleardeferredlightshaders(); cleanupshadowatlas(); cleanupvolumetric(); });
    engine\renderlights.cpp:1917        VARFP(smgather, 0, 0, 1, { cleardeferredlightshaders(); cleanupshadowatlas(); cleanupvolumetric(); });
    engine\renderlights.cpp:1921        VARFP(smalphaprec, 0, 0, 2, cleanupshadowatlas());
    engine\renderlights.cpp:2593        VARFP(volumetric, 0, 1, 1, cleanupvolumetric());
    engine\renderlights.cpp:2594        VARFP(volreduce, 0, 1, 2, cleanupvolumetric());
    engine\renderlights.cpp:2595        VARFP(volbilateral, 0, 1, 3, cleanupvolumetric());
    engine\renderlights.cpp:2597        VARFP(volblur, 0, 1, 3, cleanupvolumetric());
    engine\renderlights.cpp:2598        VARFP(volsteps, 1, 12, 64, cleanupvolumetric());
    engine\renderparticles.cpp:867      VARFP(maxparticles, 10, 4000, 10000, initparticles());
    engine\renderparticles.cpp:868      VARFP(fewparticles, 10, 100, 10000, initparticles());
    engine\sound.cpp:124                VARFP(soundvol, 0, 255, 255,
    engine\sound.cpp:130                VARFP(musicvol, 0, 60, 255, setmusicvol(soundvol ? musicvol : 0));
    engine\sound.cpp:826                VARFP(mumble, 0, 1, 1, { if(mumble) initmumble(); else closemumble(); });
    engine\sound.cpp:828                VARFP(mumble, 0, 0, 1, { if(mumble) initmumble(); else closemumble(); });
    engine\stain.cpp:28                 VARFP(maxstaintris, 1, 2048, 16384, initstains());
    engine\texture.cpp:686              VARFP(maxtexsize, 0, 0, 1<<12, initwarning("texture quality", INIT_LOAD));
    engine\texture.cpp:687              VARFP(reducefilter, 0, 1, 1, initwarning("texture quality", INIT_LOAD));
    engine\texture.cpp:688              VARFP(texreduce, 0, 0, 12, initwarning("texture quality", INIT_LOAD));
    engine\texture.cpp:689              VARFP(texcompress, 0, 1536, 1<<12, initwarning("texture quality", INIT_LOAD));
    engine\texture.cpp:690              VARFP(texcompressquality, -1, -1, 1, setuptexcompress());
    engine\texture.cpp:693              VARFP(aniso, 0, 0, 16, initwarning("texture filtering", INIT_LOAD));
    engine\texture.cpp:790              VARFP(usenp2, 0, 1, 1, initwarning("texture quality", INIT_LOAD));
    engine\texture.cpp:830              VARFP(gpumipmap, 0, 1, 1, cleanupmipmaps());
    engine\texture.cpp:2875             VARFP(envmapsize, 4, 7, 10, setupmaterials());
    engine\water.cpp:30                 VARFP(caustics, 0, 1, 1, { loadcaustics(); preloadwatershaders(); });
    engine\water.cpp:356                VARFP(vertwater, 0, 1, 1, allchanged());
    engine\water.cpp:415                VARFP(waterreflect, 0, 1, 1, { preloadwatershaders(); });
    engine\water.cpp:417                VARFP(waterenvmap, 0, 1, 1, { preloadwatershaders(); });
    engine\water.cpp:418                VARFP(waterfallenv, 0, 1, 1, preloadwatershaders());
    game\game.cpp:14                    VARFP(specmode, 0, 0, 2,
    game\render.cpp:79                  VARFP(playercolor, 0, 4, sizeof(playercolors)/sizeof(playercolors[0])-1, changedplayercolor());
    game\render.cpp:80                  VARFP(playercolorazul, 0, 0, sizeof(playercolorsazul)/sizeof(playercolorsazul[0])-1, changedplayercolor());
    game\render.cpp:81                  VARFP(playercolorrojo, 0, 0, sizeof(playercolorsrojo)/sizeof(playercolorsrojo[0])-1, changedplayercolor());
    game\render.cpp:89                  VARFP(playermodel, 0, 0, sizeof(playermodels)/sizeof(playermodels[0])-1, changedplayermodel());


VARFR
    engine\renderlights.cpp:241         VARFR(aosun, 0, 1, 1, cleardeferredlightshaders());
    engine\renderlights.cpp:1530        VARFR(gidist, 0, 384, 1024, { clearradiancehintscache(); cleardeferredlightshaders(); if(!gidist) cleanupradiancehints(); });
    engine\renderlights.cpp:1929        VARFR(alphashadow, 0, 0, 2, { cleardeferredlightshaders(); cleanupshadowatlas(); });
    engine\rendersky.cpp:459            VARFR(skyshadow, 0, 0, 1, clearshadowcache());
    engine\water.cpp:26                 VARFR(causticscale, 0, 50, 10000, preloadwatershaders());
    engine\water.cpp:27                 VARFR(causticmillis, 0, 75, 1000, preloadwatershaders());


VARMP
    engine\serverbrowser.cpp:411        VARMP(servpingrate, 1, 5, 60, 1000);
    engine\serverbrowser.cpp:412        VARMP(servpingdecay, 1, 15, 60, 1000);
    engine\stain.cpp:29                 VARMP(stainfade, 1, 15, 60, 1000);


VARN
    engine\command.cpp:19               VARN(numargs, _numargs, MAXARGS, 0, 0);
    engine\main.cpp:376                 VARN(relativemouse, userelativemouse, 1, 1, 0);
    engine\octaedit.cpp:1601            VARN(hbrushx, brushx, 0, MAXBRUSH2, MAXBRUSH);
    engine\octaedit.cpp:1602            VARN(hbrushy, brushy, 0, MAXBRUSH2, MAXBRUSH);
    engine\pvs.cpp:987                  VARN(pvs, usepvs, 0, 1, 1);
    engine\pvs.cpp:988                  VARN(waterpvs, usewaterpvs, 0, 1, 1);
    engine\renderlights.cpp:1925        VARN(lightbatches, lightbatchesused, 1, 0, 0);
    engine\renderlights.cpp:1926        VARN(lightbatchrects, lightbatchrectsused, 1, 0, 0);
    engine\renderlights.cpp:1927        VARN(lightbatchstacks, lightbatchstacksused, 1, 0, 0);
    engine\renderlights.cpp:2711        VARN(lighttilew, lighttilemaxw, 1, 10, LIGHTTILE_MAXW);
    engine\renderlights.cpp:2712        VARN(lighttileh, lighttilemaxh, 1, 10, LIGHTTILE_MAXH);
    engine\renderparticles.cpp:28       VARN(seedparticles, seedmillis, 0, 3000, 10000);
    engine\renderparticles.cpp:902      VARN(debugparticles, dbgparts, 0, 0, 1);
    engine\server.cpp:357               VARN(updatemaster, allowupdatemaster, 0, 1, 1);
    game\aiman.h:5                      VARN(serverbotlimit, botlimit, 0, 8, MAXBOTS);


VARNP
    engine\dynlight.cpp:3               VARNP(dynlights, usedynlights, 0, 1, 1);
    engine\main.cpp:378                 VARNP(relativemouse, userelativemouse, 0, 1, 1);
    engine\rendergl.cpp:2497            VARNP(damagecompass, usedamagecompass, 0, 1, 1);
    engine\stain.cpp:773                VARNP(stains, showstains, 0, 1, 1);


VARNR
    engine\rendersky.cpp:458            VARNR(skytexture, useskytexture, 0, 0, 1);
    engine\world.cpp:6                  VARNR(mapscale, worldscale, 1, 0, 0);
    engine\world.cpp:7                  VARNR(mapsize, worldsize, 1, 0, 0);
    engine\world.cpp:9                  VARNR(emptymap, _emptymap, 1, 0, 0);


VARP
    engine\aa.cpp:8                     VARP(tqaaquincunx, 0, 1, 1);
    engine\animmodel.h:1                VARP(fullbrightmodels, 0, 0, 200);
    engine\client.cpp:74                VARP(connectport, 0, 0, 0xFFFF);
    engine\console.cpp:19               VARP(contags, 0, 3, 3);
    engine\console.cpp:77               VARP(consize, 0, 5, 100);
    engine\console.cpp:78               VARP(miniconsize, 0, 5, 100);
    engine\console.cpp:79               VARP(miniconwidth, 0, 40, 100);
    engine\console.cpp:80               VARP(confade, 0, 30, 60);
    engine\console.cpp:81               VARP(miniconfade, 0, 30, 60);
    engine\console.cpp:82               VARP(fullconsize, 0, 75, 100);
    engine\console.cpp:378              VARP(maxhistory, 0, 1000, 10000);
    engine\dynlight.cpp:4               VARP(dynlightdist, 0, 1024, 10000);
    engine\explosion.h:1                VARP(softexplosion, 0, 1, 1);
    engine\explosion.h:2                VARP(softexplosionblend, 1, 16, 64);
    engine\grass.cpp:3                  VARP(grass, 0, 1, 1);
    engine\grass.cpp:5                  VARP(grassdist, 0, 256, 10000);
    engine\grass.cpp:8                  VARP(grassheight, 1, 4, 64);
    engine\grass.cpp:9                  VARP(grassmargin, 0, 8, 32);
    engine\lensflare.h:31               VARP(flarecutoff, 0, 1000, 10000);
    engine\lensflare.h:32               VARP(flaresize, 20, 100, 500);
    engine\main.cpp:916                 VARP(menufps, 0, 60, 1000);
    engine\main.cpp:917                 VARP(maxfps, 0, 125, 1000);
    engine\material.cpp:434             VARP(showmat, 0, 1, 1);
    engine\menus.cpp:18                 VARP(applydialog, 0, 1, 1);
    engine\movie.cpp:757                VARP(movieaccel, 0, 1, 1);
    engine\movie.cpp:758                VARP(moviesync, 0, 0, 1);
    engine\movie.cpp:1153               VARP(moview, 0, 320, 10000);
    engine\movie.cpp:1154               VARP(movieh, 0, 240, 10000);
    engine\movie.cpp:1155               VARP(moviefps, 1, 24, 1000);
    engine\movie.cpp:1156               VARP(moviesound, 0, 1, 1);
    engine\octaedit.cpp:186             VARP(editinview, 0, 1, 1);
    engine\octaedit.cpp:746             VARP(undomegs, 0, 8, 100);
    engine\octaedit.cpp:795             VARP(nompedit, 0, 1, 1);
    engine\physics.cpp:1687             VARP(maxroll, 0, 0, 20);
    engine\pvs.cpp:835                  VARP(pvsthreads, 0, 0, 16);
    engine\rendergl.cpp:1343            VARP(zoominvel, 0, 40, 500);
    engine\rendergl.cpp:1344            VARP(zoomoutvel, 0, 50, 500);
    engine\rendergl.cpp:1345            VARP(zoomfov, 10, 42, 90);
    engine\rendergl.cpp:1346            VARP(fov, 10, 100, 150);
    engine\rendergl.cpp:1376            VARP(zoomautosens, 0, 1, 1);
    engine\rendergl.cpp:1379            VARP(invmouse, 0, 0, 1);
    engine\rendergl.cpp:2498            VARP(damagecompassfade, 1, 1000, 10000);
    engine\rendergl.cpp:2499            VARP(damagecompasssize, 1, 30, 100);
    engine\rendergl.cpp:2500            VARP(damagecompassalpha, 1, 25, 100);
    engine\rendergl.cpp:2501            VARP(damagecompassmin, 1, 25, 1000);
    engine\rendergl.cpp:2502            VARP(damagecompassmax, 1, 200, 1000);
    engine\rendergl.cpp:2565            VARP(damagescreenfactor, 1, 75, 100);
    engine\rendergl.cpp:2566            VARP(damagescreenalpha, 1, 45, 100);
    engine\rendergl.cpp:2567            VARP(damagescreenfade, 0, 1000, 1000);
    engine\rendergl.cpp:2568            VARP(damagescreenmin, 1, 10, 1000);
    engine\rendergl.cpp:2569            VARP(damagescreenmax, 1, 100, 1000);
    engine\rendergl.cpp:2606            VARP(crosshairsize, 0, 15, 50);
    engine\rendergl.cpp:2607            VARP(cursorsize, 0, 15, 30);
    engine\rendergl.cpp:2608            VARP(crosshairfx, 0, 1, 1);
    engine\rendergl.cpp:2609            VARP(crosshaircolors, 0, 1, 1);
    engine\rendergl.cpp:2692            VARP(wallclock, 0, 0, 1);
    engine\rendergl.cpp:2693            VARP(wallclock24, 0, 0, 1);
    engine\rendergl.cpp:2694            VARP(wallclocksecs, 0, 0, 1);
    engine\rendergl.cpp:2698            VARP(showfps, 0, 1, 1);
    engine\rendergl.cpp:2699            VARP(showfpsrange, 0, 0, 1);
    engine\renderlights.cpp:243         VARP(aoblur, 0, 4, 7);
    engine\renderlights.cpp:244         VARP(aoiter, 0, 0, 4);
    engine\renderlights.cpp:945         VARP(bloomblur, 0, 7, 7);
    engine\renderlights.cpp:946         VARP(bloomiter, 0, 0, 4);
    engine\renderparticles.cpp:7        VARP(particlelayers, 0, 1, 1);
    engine\renderparticles.cpp:9        VARP(particlesize, 20, 100, 500);
    engine\renderparticles.cpp:11       VARP(softparticles, 0, 1, 1);
    engine\renderparticles.cpp:12       VARP(softparticleblend, 1, 8, 64);
    engine\renderparticles.cpp:16       VARP(emitmillis, 1, 17, 1000);
    engine\renderparticles.cpp:25       VARP(showparticles, 0, 1, 1);
    engine\renderparticles.cpp:263      VARP(outlinemeters, 0, 0, 1);
    engine\renderparticles.cpp:1003     VARP(maxparticledistance, 256, 1024, 4096);
    engine\renderparticles.cpp:1050     VARP(maxtrail, 1, 500, 10000);
    engine\renderparticles.cpp:1068     VARP(particletext, 0, 1, 1);
    engine\renderparticles.cpp:1069     VARP(maxparticletextdistance, 0, 128, 10000);
    engine\rendertext.cpp:246           VARP(textbright, 0, 85, 100);
    engine\serverbrowser.cpp:410        VARP(searchlan, 0, 0, 1);
    engine\serverbrowser.cpp:413        VARP(maxservpings, 0, 10, 1000);
    engine\serverbrowser.cpp:553        VARP(autosortservers, 0, 1, 1);
    engine\serverbrowser.cpp:554        VARP(autoupdateservers, 0, 1, 1);
    engine\skelmodel.h:1                VARP(gpuskel, 0, 1, 1);
    engine\sound.cpp:596                VARP(minimizedsounds, 0, 0, 1);
    engine\sound.cpp:617                VARP(maxsoundsatonce, 0, 7, 100);
    engine\stain.cpp:806                VARP(maxstaindistance, 1, 512, 10000);
    engine\texture.cpp:2290             VARP(autocompactvslots, 0, 256, 0x10000);
    engine\texture.cpp:3010             VARP(aaenvmap, 0, 1, 1);
    engine\texture.cpp:3707             VARP(compresspng, 0, 9, 9);
    engine\texture.cpp:3819             VARP(compresstga, 0, 1, 1);
    engine\texture.cpp:3901             VARP(screenshotquality, 0, 97, 100);
    engine\texture.cpp:3902             VARP(screenshotformat, 0, IMG_PNG, NUMIMG-1);
    engine\ui.cpp:1849                  VARP(uitextrows, 1, 24, 200);
    engine\ui.cpp:2255                  VARP(uiscrollsteptime, 0, 50, 1000);
    engine\ui.cpp:2461                  VARP(uislidersteptime, 0, 50, 1000);
    engine\ui.cpp:2978                  VARP(uislotviewtime, 0, 25, 1000);
    engine\water.cpp:146                VARP(watersubdiv, 0, 2, 3);
    engine\water.cpp:147                VARP(waterlod, 0, 1, 3);
    engine\world.cpp:1061               VARP(entcamdir, 0, 1, 1);
    engine\worldio.cpp:140              VARP(savebak, 0, 2, 2);
    game\client.cpp:5                   VARP(minradarscale, 0, 384, 10000);
    game\client.cpp:6                   VARP(maxradarscale, 1, 1024, 10000);
    game\client.cpp:7                   VARP(radarteammates, 0, 1, 1);
    game\client.cpp:143                 VARP(deadpush, 1, 2, 20);
    game\client.cpp:211                 VARP(autoauth, 0, 1, 1);
    game\client.cpp:410                 VARP(playersearch, 0, 3, 10);
    game\client.cpp:989                 VARP(teamcolorchat, 0, 1, 1);
    game\game.cpp:167                   VARP(smoothmove, 0, 75, 100);
    game\game.cpp:168                   VARP(smoothdist, 0, 32, 64);
    game\game.cpp:273                   VARP(spawnwait, 0, 0, 1000);
    game\game.cpp:295                   VARP(attackspawn, 0, 1, 1);
    game\game.cpp:306                   VARP(jumpspawn, 0, 1, 1);
    game\game.cpp:336                   VARP(hitsound, 0, 0, 1);
    game\game.cpp:365                   VARP(deathscore, 0, 1, 1);
    game\game.cpp:394                   VARP(teamcolorfrags, 0, 1, 1);
    game\game.cpp:536                   VARP(showmodeinfo, 0, 1, 1);
    game\game.cpp:653                   VARP(teamcolortext, 0, 1, 1);
    game\game.cpp:667                   VARP(teamsounds, 0, 1, 1);
    game\game.cpp:788                   VARP(teamcrosshair, 0, 1, 1);
    game\game.cpp:789                   VARP(hitcrosshair, 0, 425, 1000);
    game\render.cpp:8                   VARP(ragdoll, 0, 1, 1);
    game\render.cpp:9                   VARP(ragdollmillis, 0, 10000, 300000);
    game\render.cpp:10                  VARP(ragdollfade, 0, 100, 5000);
    game\render.cpp:11                  VARP(forceplayermodels, 0, 0, 1);
    game\render.cpp:12                  VARP(hidedead, 0, 0, 1);
    game\render.cpp:373                 VARP(hudgun, 0, 1, 1);
    game\render.cpp:374                 VARP(hudgunsway, 0, 1, 1);
    game\scoreboard.cpp:6               VARP(showservinfo, 0, 1, 1);
    game\scoreboard.cpp:7               VARP(showclientnum, 0, 0, 1);
    game\scoreboard.cpp:8               VARP(showpj, 0, 0, 1);
    game\scoreboard.cpp:9               VARP(showping, 0, 1, 1);
    game\scoreboard.cpp:10              VARP(showspectators, 0, 1, 1);
    game\scoreboard.cpp:11              VARP(highlightscore, 0, 1, 1);
    game\scoreboard.cpp:12              VARP(showconnecting, 0, 0, 1);
    game\scoreboard.cpp:13              VARP(hidefrags, 0, 1, 1);
    game\weapon.cpp:18                  VARP(maxdebris, MINDEBRIS, 10, 100);
    game\weapon.cpp:19                  VARP(maxgibs, 0, 4, 100);
    game\weapon.cpp:271                 VARP(blood, 0, 1, 1);


VARR
    engine\grass.cpp:63                 VARR(grassanimmillis, 0, 3000, 60000);
    engine\grass.cpp:72                 VARR(grassscale, 1, 2, 64);
    engine\material.cpp:652             VARR(name##spec, 0, 150, 200);
    engine\normal.cpp:41                VARR(lerpangle, 0, 44, 180);
    engine\normal.cpp:144               VARR(lerpsubdiv, 0, 2, 4);
    engine\normal.cpp:145               VARR(lerpsubdivsize, 4, 4, 128);
    engine\rendergl.cpp:1865            VARR(fog, 16, 4000, 1000024);
    engine\rendergl.cpp:2025            VARR(minimapheight, 0, 0, 2<<16);
    engine\rendergl.cpp:2027            VARR(minimapclip, 0, 0, 1);
    engine\rendersky.cpp:61             VARR(yawsky, 0, 0, 360);
    engine\rendersky.cpp:66             VARR(yawclouds, 0, 0, 360);
    engine\rendersky.cpp:75             VARR(yawcloudlayer, 0, 0, 360);
    engine\rendersky.cpp:79             VARR(cloudsubdiv, 4, 16, 64);
    engine\rendersky.cpp:184            VARR(fogdomecap, 0, 1, 1);
    engine\rendersky.cpp:187            VARR(fogdomeclouds, 0, 1, 1);
    engine\rendersky.cpp:371            VARR(atmo, 0, 0, 1);
    engine\texture.cpp:3008             VARR(envmapradius, 0, 128, 10000);
    engine\texture.cpp:3009             VARR(envmapbb, 0, 0, 1);
    engine\water.cpp:370                VARR(name##fog, 0, 30, 10000); \
    engine\water.cpp:371                VARR(name##deep, 0, 50, 10000); \
    engine\water.cpp:372                VARR(name##spec, 0, 150, 200); \
    engine\water.cpp:376                VARR(name##fallspec, 0, 150, 200); \
    engine\water.cpp:399                VARR(name##fog, 0, 50, 10000); \
    engine\water.cpp:402                VARR(name##spec, 0, 25, 200);
    engine\water.cpp:416                VARR(waterreflectstep, 1, 32, 10000);
    engine\world.cpp:5                  VARR(mapversion, 1, MAPVERSION, 0);
    game\entities.cpp:234               VARR(teleteam, 0, 1, 1);




GLASSVARS
    engine\material.cpp:654             GLASSVARS(glass)
    engine\material.cpp:655             GLASSVARS(glass2)
    engine\material.cpp:656             GLASSVARS(glass3)
    engine\material.cpp:657             GLASSVARS(glass4)


LAVAVARS
    engine\water.cpp:404                LAVAVARS(lava)
    engine\water.cpp:405                LAVAVARS(lava2)
    engine\water.cpp:406                LAVAVARS(lava3)
    engine\water.cpp:407                LAVAVARS(lava4)


WATERVARS
    engine\water.cpp:379                WATERVARS(water)
    engine\water.cpp:380                WATERVARS(water2)
    engine\water.cpp:381                WATERVARS(water3)
    engine\water.cpp:382                WATERVARS(water4)


GETMATIDXVAR
    engine\material.cpp:659             GETMATIDXVAR(glass, colour, const bvec &)
    engine\material.cpp:660             GETMATIDXVAR(glass, refract, float)
    engine\material.cpp:661             GETMATIDXVAR(glass, spec, int)

    engine\water.cpp:384                GETMATIDXVAR(water, colour, const bvec &)
    engine\water.cpp:385                GETMATIDXVAR(water, deepcolour, const bvec &)
    engine\water.cpp:386                GETMATIDXVAR(water, deepfade, const bvec &)
    engine\water.cpp:387                GETMATIDXVAR(water, refractcolour, const bvec &)
    engine\water.cpp:388                GETMATIDXVAR(water, fallcolour, const bvec &)
    engine\water.cpp:389                GETMATIDXVAR(water, fallrefractcolour, const bvec &)
    engine\water.cpp:390                GETMATIDXVAR(water, fog, int)
    engine\water.cpp:391                GETMATIDXVAR(water, deep, int)
    engine\water.cpp:392                GETMATIDXVAR(water, spec, int)
    engine\water.cpp:393                GETMATIDXVAR(water, refract, float)
    engine\water.cpp:394                GETMATIDXVAR(water, fallspec, int)
    engine\water.cpp:395                GETMATIDXVAR(water, fallrefract, float)

    engine\water.cpp:409                GETMATIDXVAR(lava, colour, const bvec &)
    engine\water.cpp:410                GETMATIDXVAR(lava, fog, int)
    engine\water.cpp:411                GETMATIDXVAR(lava, glowmin, float)
    engine\water.cpp:412                GETMATIDXVAR(lava, glowmax, float)
    engine\water.cpp:413                GETMATIDXVAR(lava, spec, int)

