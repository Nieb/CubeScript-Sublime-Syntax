###############################################################################################################################################################################################
###############################################################################################################################################################################################

What: Dump of all Commands & Variables
From: Sauerbraten SVN -- Rev: 6603

###############################################################################################################################################################################################
###############################################################################################################################################################################################

MAPMODEL STUFFS
    (md5|iqm|smd)adjust
    (md5|iqm|smd)animpart
    (md5|iqm|smd)pitchcorrect
    (md5|iqm|smd)pitchtarget
    (md5|iqm|smd)tag

    (md2|md3|md5|iqm|smd)anim

    (md2|md3|md5|iqm|obj|smd)alphablend
    (md2|md3|md5|iqm|obj|smd)alphatest
    (md2|md3|md5|iqm|obj|smd)ambient
    (md2|md3|md5|iqm|obj|smd)bumpmap
    (md2|md3|md5|iqm|obj|smd)cullface
    (md2|md3|md5|iqm|obj|smd)dir
    (md2|md3|md5|iqm|obj|smd)envmap
    (md2|md3|md5|iqm|obj|smd)fullbright
    (md2|md3|md5|iqm|obj|smd)glare
    (md2|md3|md5|iqm|obj|smd)glow
    (md2|md3|md5|iqm|obj|smd)link
    (md2|md3|md5|iqm|obj|smd)load
    (md2|md3|md5|iqm|obj|smd)noclip
    (md2|md3|md5|iqm|obj|smd)pitch
    (md2|md3|md5|iqm|obj|smd)scroll
    (md2|md3|md5|iqm|obj|smd)shader
    (md2|md3|md5|iqm|obj|smd)skin
    (md2|md3|md5|iqm|obj|smd)spec


###############################################################################################################################################################################################
###############################################################################################################################################################################################


CASECOMMAND
    engine\command.cpp:3309             CASECOMMAND(case, "i", int, args[0].getint(), args[i].type == VAL_NULL || args[i].getint() == val);
    engine\command.cpp:3310             CASECOMMAND(casef, "f", float, args[0].getfloat(), args[i].type == VAL_NULL || args[i].getfloat() == val);
    engine\command.cpp:3311             CASECOMMAND(cases, "s", const char *, args[0].getstr(), args[i].type == VAL_NULL || !strcmp(args[i].getstr(), val));


COMMAND
    engine\blend.cpp:630                COMMAND(clearblendbrushes, "");
    engine\blend.cpp:631                COMMAND(delblendbrush, "s");
    engine\blend.cpp:632                COMMAND(addblendbrush, "ss");
    engine\blend.cpp:633                COMMAND(nextblendbrush, "i");
    engine\blend.cpp:634                COMMAND(setblendbrush, "s");
    engine\blend.cpp:635                COMMAND(getblendbrushname, "i");
    engine\blend.cpp:636                COMMAND(curblendbrush, "");
    engine\blend.cpp:664                COMMAND(rotateblendbrush, "i");
    engine\blend.cpp:723                COMMAND(clearblendmapsel, "");
    engine\blend.cpp:737                COMMAND(invertblendmapsel, "");
    engine\blend.cpp:746                COMMAND(invertblendmap, "");
    engine\blend.cpp:754                COMMAND(showblendmap, "");
    engine\blend.cpp:755                COMMAND(optimizeblendmap, "");
    engine\client.cpp:185               COMMAND(reconnect, "s");
    engine\command.cpp:414              COMMAND(resetvar, "s");
    engine\command.cpp:2481             COMMAND(writecfg, "s");
    engine\command.cpp:2491             COMMAND(changedvars, "");
    engine\command.cpp:2643             COMMAND(concat, "V");
    engine\command.cpp:2649             COMMAND(concatword, "V");
    engine\command.cpp:2717             COMMAND(format, "V");
    engine\command.cpp:2801             COMMAND(at, "si1V");
    engine\command.cpp:2808             COMMAND(substr, "siiN");
    engine\command.cpp:2833             COMMAND(chopstr, "sis");
    engine\command.cpp:2844             COMMAND(sublist, "siiN");
    engine\command.cpp:2888             COMMAND(listfind, "rse");
    engine\command.cpp:2903             COMMAND(looplist, "rse");
    engine\command.cpp:2918             COMMAND(loopsublist, "rsiie");
    engine\command.cpp:2968             COMMAND(listfilter, "rse");
    engine\command.cpp:2991             COMMAND(prettylist, "ss");
    engine\command.cpp:3047             COMMAND(listsplice, "ssii");
    engine\command.cpp:3166             COMMAND(sortlist, "srre");
    engine\command.cpp:3424             COMMAND(strsplice, "ssii");
    engine\console.cpp:189              COMMAND(keymap, "is");
    engine\console.cpp:276              COMMAND(inputcommand, "ssss");
    engine\console.cpp:380              COMMAND(onrelease, "s");
    engine\cubeloader.cpp:391           COMMAND(importcube, "s");
    engine\lightmap.cpp:2180            COMMAND(calclight, "i");
    engine\lightmap.cpp:2238            COMMAND(patchlight, "i");
    engine\lightmap.cpp:2250            COMMAND(clearlightmaps, "");
    engine\lightmap.cpp:2733            COMMAND(dumplms, "");
    engine\main.cpp:130                 COMMAND(quit, "");
    engine\main.cpp:799                 COMMAND(resetgl, "");
    engine\master.cpp:43                COMMAND(adduser, "ss");
    engine\master.cpp:50                COMMAND(clearusers, "");
    engine\master.cpp:60                COMMAND(clearbans, "");
    engine\menus.cpp:578                COMMAND(newgui, "ssss");
    engine\menus.cpp:579                COMMAND(guibutton, "sss");
    engine\menus.cpp:580                COMMAND(guitext, "ss");
    engine\menus.cpp:581                COMMAND(guiservers, "eii");
    engine\menus.cpp:583                COMMAND(showgui, "s");
    engine\menus.cpp:584                COMMAND(hidegui, "s");
    engine\menus.cpp:585                COMMAND(guionclear, "s");
    engine\menus.cpp:586                COMMAND(guistayopen, "e");
    engine\menus.cpp:587                COMMAND(guinoautotab, "e");
    engine\menus.cpp:588                COMMAND(guimerge, "e");
    engine\menus.cpp:590                COMMAND(guilist, "e");
    engine\menus.cpp:591                COMMAND(guialign, "ie");
    engine\menus.cpp:592                COMMAND(guititle, "s");
    engine\menus.cpp:593                COMMAND(guibar,"");
    engine\menus.cpp:594                COMMAND(guistrut,"fi");
    engine\menus.cpp:595                COMMAND(guispring, "i");
    engine\menus.cpp:596                COMMAND(guicolumn, "i");
    engine\menus.cpp:597                COMMAND(guiimage,"ssfiss");
    engine\menus.cpp:598                COMMAND(guislider,"sbbs");
    engine\menus.cpp:599                COMMAND(guilistslider, "sss");
    engine\menus.cpp:600                COMMAND(guinameslider, "ssss");
    engine\menus.cpp:601                COMMAND(guiradio,"ssfs");
    engine\menus.cpp:602                COMMAND(guibitfield, "ssis");
    engine\menus.cpp:603                COMMAND(guicheckbox, "ssffs");
    engine\menus.cpp:604                COMMAND(guitab, "s");
    engine\menus.cpp:605                COMMAND(guifield, "sis");
    engine\menus.cpp:606                COMMAND(guikeyfield, "sis");
    engine\menus.cpp:607                COMMAND(guieditor, "siii");
    engine\menus.cpp:608                COMMAND(guicolor, "i");
    engine\menus.cpp:609                COMMAND(guitextbox, "siii");
    engine\menus.cpp:624                COMMAND(guiplayerpreview, "iiisfis");
    engine\menus.cpp:660                COMMAND(guimodelpreview, "sssfisi");
    engine\menus.cpp:680                COMMAND(guiprefabpreview, "sisfisi");
    engine\movie.cpp:1155               COMMAND(movie, "s");
    engine\octa.cpp:170                 COMMAND(printcube, "");
    engine\octaedit.cpp:231             COMMAND(entcancel, "");
    engine\octaedit.cpp:232             COMMAND(cubecancel, "");
    engine\octaedit.cpp:233             COMMAND(cancelsel, "");
    engine\octaedit.cpp:234             COMMAND(reorient, "");
    engine\octaedit.cpp:235             COMMAND(selextend, "");
    engine\octaedit.cpp:255             COMMAND(setselpos, "iii");
    engine\octaedit.cpp:263             COMMAND(movesel, "ii");
    engine\octaedit.cpp:760             COMMAND(clearundos, "");
    engine\octaedit.cpp:1217            COMMAND(delprefab, "s");
    engine\octaedit.cpp:1245            COMMAND(saveprefab, "s");
    engine\octaedit.cpp:1293            COMMAND(pasteprefab, "s");
    engine\octaedit.cpp:1537            COMMAND(copy, "");
    engine\octaedit.cpp:1538            COMMAND(pastehilite, "");
    engine\octaedit.cpp:1539            COMMAND(paste, "");
    engine\octaedit.cpp:1603            COMMAND(clearbrush, "");
    engine\octaedit.cpp:1604            COMMAND(brushvert, "iii");
    engine\octaedit.cpp:1606            COMMAND(hmapcancel, "");
    engine\octaedit.cpp:2074            COMMAND(pushsel, "i");
    engine\octaedit.cpp:2075            COMMAND(editface, "ii");
    engine\octaedit.cpp:2076            COMMAND(delcube, "");
    engine\octaedit.cpp:2213            COMMAND(vdelta, "s");
    engine\octaedit.cpp:2223            COMMAND(vrotate, "i");
    engine\octaedit.cpp:2234            COMMAND(voffset, "ii");
    engine\octaedit.cpp:2250            COMMAND(vscroll, "ff");
    engine\octaedit.cpp:2266            COMMAND(vscale, "f");
    engine\octaedit.cpp:2282            COMMAND(vlayer, "i");
    engine\octaedit.cpp:2294            COMMAND(valpha, "ff");
    engine\octaedit.cpp:2310            COMMAND(vcolor, "fff");
    engine\octaedit.cpp:2324            COMMAND(vreset, "");
    engine\octaedit.cpp:2338            COMMAND(vshaderparam, "sffff");
    engine\octaedit.cpp:2521            COMMAND(gettex, "");
    engine\octaedit.cpp:2522            COMMAND(getcurtex, "");
    engine\octaedit.cpp:2523            COMMAND(getseltex, "");
    engine\octaedit.cpp:2525            COMMAND(gettexname, "ii");
    engine\octaedit.cpp:2528            COMMAND(getslottex, "i");
    engine\octaedit.cpp:2675            COMMAND(flip, "");
    engine\octaedit.cpp:2676            COMMAND(rotate, "i");
    engine\octaedit.cpp:2760            COMMAND(editmat, "ss");
    engine\octaedit.cpp:2880            COMMAND(showtexgui, "i");
    engine\octarender.cpp:1802          COMMAND(recalc, "");
    engine\physics.cpp:1546             COMMAND(phystest, "");
    engine\pvs.cpp:1022                 COMMAND(clearpvs, "");
    engine\pvs.cpp:1097                 COMMAND(testpvs, "i");
    engine\pvs.cpp:1180                 COMMAND(genpvs, "i");
    engine\pvs.cpp:1188                 COMMAND(pvsstats, "");
    engine\rendergl.cpp:589             COMMAND(glext, "s");
    engine\rendermodel.cpp:50           COMMAND(mdlcullface, "i");
    engine\rendermodel.cpp:58           COMMAND(mdlcollide, "i");
    engine\rendermodel.cpp:66           COMMAND(mdlellipsecollide, "i");
    engine\rendermodel.cpp:77           COMMAND(mdlspec, "i");
    engine\rendermodel.cpp:88           COMMAND(mdlambient, "i");
    engine\rendermodel.cpp:96           COMMAND(mdlalphatest, "f");
    engine\rendermodel.cpp:104          COMMAND(mdlalphablend, "i");
    engine\rendermodel.cpp:112          COMMAND(mdlalphadepth, "i");
    engine\rendermodel.cpp:120          COMMAND(mdldepthoffset, "i");
    engine\rendermodel.cpp:132          COMMAND(mdlglow, "iif");
    engine\rendermodel.cpp:140          COMMAND(mdlglare, "ff");
    engine\rendermodel.cpp:148          COMMAND(mdlenvmap, "ffs");
    engine\rendermodel.cpp:156          COMMAND(mdlfullbright, "f");
    engine\rendermodel.cpp:164          COMMAND(mdlshader, "s");
    engine\rendermodel.cpp:173          COMMAND(mdlspin, "ff");
    engine\rendermodel.cpp:183          COMMAND(mdlscale, "i");
    engine\rendermodel.cpp:191          COMMAND(mdltrans, "fff");
    engine\rendermodel.cpp:199          COMMAND(mdlyaw, "f");
    engine\rendermodel.cpp:207          COMMAND(mdlpitch, "f");
    engine\rendermodel.cpp:215          COMMAND(mdlshadow, "i");
    engine\rendermodel.cpp:225          COMMAND(mdlbb, "fff");
    engine\rendermodel.cpp:233          COMMAND(mdlextendbb, "fff");
    engine\rendermodel.cpp:241          COMMAND(mdlname, "");
    engine\rendermodel.cpp:263          COMMAND(rdvert, "ffff");
    engine\rendermodel.cpp:270          COMMAND(rdeye, "i");
    engine\rendermodel.cpp:280          COMMAND(rdtri, "iii");
    engine\rendermodel.cpp:293          COMMAND(rdjoint, "iibbb");
    engine\rendermodel.cpp:304          COMMAND(rdlimitdist, "iiff");
    engine\rendermodel.cpp:315          COMMAND(rdlimitrot, "iifffff");
    engine\rendermodel.cpp:322          COMMAND(rdanimjoints, "i");
    engine\rendermodel.cpp:349          COMMAND(mmodel, "s");
    engine\rendermodel.cpp:351          COMMAND(mapmodelreset, "i");
    engine\rendermodel.cpp:479          COMMAND(clearmodel, "s");
    engine\rendertext.cpp:76            COMMAND(fontoffset, "s");
    engine\rendertext.cpp:77            COMMAND(fontscale, "i");
    engine\rendertext.cpp:78            COMMAND(fonttex, "s");
    engine\rendertext.cpp:79            COMMAND(fontchar, "iiiiiii");
    engine\rendertext.cpp:80            COMMAND(fontskip, "i");
    engine\rendertext.cpp:99            COMMAND(fontalias, "ss");
    engine\rendertext.cpp:162           COMMAND(tabify, "si");
    engine\server.cpp:1107              COMMAND(startlistenserver, "i");
    engine\server.cpp:1119              COMMAND(stoplistenserver, "");
    engine\serverbrowser.cpp:539        COMMAND(sortservers, "");
    engine\serverbrowser.cpp:608        COMMAND(connectselected, "");
    engine\serverbrowser.cpp:718        COMMAND(updatefrommaster, "");
    engine\serverbrowser.cpp:719        COMMAND(initservers, "");
    engine\shader.cpp:1222              COMMAND(shader, "isss");
    engine\shader.cpp:1223              COMMAND(variantshader, "isiss");
    engine\shader.cpp:1224              COMMAND(setshader, "s");
    engine\shader.cpp:1225              COMMAND(altshader, "ss");
    engine\shader.cpp:1226              COMMAND(fastshader, "ssi");
    engine\shader.cpp:1227              COMMAND(defershader, "iss");
    engine\shader.cpp:1421              COMMAND(clearpostfx, "");
    engine\sound.cpp:551                COMMAND(registersound, "si");
    engine\sound.cpp:554                COMMAND(mapsound, "sii");
    engine\sound.cpp:557                COMMAND(altsound, "si");
    engine\sound.cpp:560                COMMAND(altmapsound, "si");
    engine\sound.cpp:569                COMMAND(soundreset, "");
    engine\sound.cpp:575                COMMAND(mapsoundreset, "");
    engine\sound.cpp:883                COMMAND(resetsound, "");
    engine\texture.cpp:1601             COMMAND(texturereset, "i");
    engine\texture.cpp:1609             COMMAND(materialreset, "");
    engine\texture.cpp:2128             COMMAND(texture, "ssiiif");
    engine\texture.cpp:2137             COMMAND(autograss, "s");
    engine\texture.cpp:2146             COMMAND(texscroll, "ff");
    engine\texture.cpp:2173             COMMAND(texscale, "f");
    engine\texture.cpp:2185             COMMAND(texlayer, "isif");
    engine\texture.cpp:2195             COMMAND(texalpha, "ff");
    engine\texture.cpp:2204             COMMAND(texcolor, "fff");
    engine\texture.cpp:2212             COMMAND(texsmooth, "ib");
    engine\texture.cpp:2913             COMMAND(reloadtex, "s");
    engine\texture.cpp:3307             COMMAND(gendds, "ss");
    engine\texture.cpp:3625             COMMAND(screenshot, "s");
    engine\texture.cpp:3651             COMMAND(flipnormalmapy, "ss");
    engine\texture.cpp:3652             COMMAND(mergenormalmaps, "ss");
    engine\world.cpp:842                COMMAND(entautoview, "i");
    engine\world.cpp:843                COMMAND(entflip, "");
    engine\world.cpp:844                COMMAND(entrotate, "i");
    engine\world.cpp:845                COMMAND(entpush, "i");
    engine\world.cpp:921                COMMAND(attachent, "");
    engine\world.cpp:1022               COMMAND(newent, "siiiii");
    engine\world.cpp:1023               COMMAND(delent, "");
    engine\world.cpp:1024               COMMAND(dropent, "");
    engine\world.cpp:1025               COMMAND(entcopy, "");
    engine\world.cpp:1026               COMMAND(entpaste, "");
    engine\world.cpp:1082               COMMAND(entset, "siiiii");
    engine\world.cpp:1083               COMMAND(nearestent, "");
    engine\world.cpp:1127               COMMAND(enttype, "sN");
    engine\world.cpp:1128               COMMAND(entattr, "iiN");
    engine\world.cpp:1352               COMMAND(newmap, "i");
    engine\world.cpp:1353               COMMAND(mapenlarge, "");
    engine\world.cpp:1354               COMMAND(shrinkmap, "");
    engine\world.cpp:1361               COMMAND(mapname, "");
    engine\worldio.cpp:204              COMMAND(mapcfgname, "");
    engine\worldio.cpp:1282             COMMAND(savemap, "s");
    engine\worldio.cpp:1283             COMMAND(savecurrentmap, "");
    engine\worldio.cpp:1385             COMMAND(writeobj, "s");
    fpsgame\client.cpp:223              COMMAND(genauthkey, "s");
    fpsgame\client.cpp:233              COMMAND(getpubkey, "s");
    fpsgame\client.cpp:247              COMMAND(saveauthkeys, "");
    fpsgame\client.cpp:418              COMMAND(clearbans, "");
    fpsgame\client.cpp:425              COMMAND(kick, "ss");
    fpsgame\client.cpp:470              COMMAND(setteam, "ss");
    fpsgame\client.cpp:479              COMMAND(hashpwd, "s");
    fpsgame\client.cpp:499              COMMAND(setmaster, "ss");
    fpsgame\client.cpp:946              COMMAND(sayteam, "C");
    fpsgame\client.cpp:2074             COMMAND(getmap, "");
    fpsgame\client.cpp:2085             COMMAND(stopdemo, "");
    fpsgame\client.cpp:2125             COMMAND(listdemos, "");
    fpsgame\client.cpp:2150             COMMAND(sendmap, "");
    fpsgame\client.cpp:2178             COMMAND(gotosel, "");
    fpsgame\fps.cpp:25                  COMMAND(taunt, "");
    fpsgame\fps.cpp:43                  COMMAND(follow, "s");
    fpsgame\fps.cpp:367                 COMMAND(respawn, "");
    fpsgame\server.cpp:591              COMMAND(maprotationreset, "");
    fpsgame\server.cpp:660              COMMAND(teamkillkickreset, "");
    fpsgame\server.cpp:1410             COMMAND(adduser, "ssss");
    fpsgame\server.cpp:1416             COMMAND(clearusers, "");
    fpsgame\waypoint.cpp:781            COMMAND(delselwaypoints, "");


COMMANDN
    engine\command.cpp:3095             COMMANDN(findfile, findfile_, "s");
    engine\command.cpp:3445             COMMANDN(sleep, addsleep, "is");
    engine\command.cpp:3482             COMMANDN(clearsleep, clearsleep_, "i");
    engine\console.cpp:357              COMMANDN(history, history_, "i");
    engine\console.cpp:758              COMMANDN(complete, addfilecomplete, "sss");
    engine\console.cpp:759              COMMANDN(varcomplete, addvarcomplete, "sss");
    engine\console.cpp:760              COMMANDN(listcomplete, addlistcomplete, "ss");
    engine\main.cpp:1148                COMMANDN(getfps, getfps_, "i");
    engine\octa.cpp:573                 COMMANDN(remip, remip_, "");
    engine\octaedit.cpp:1540            COMMANDN(undo, editundo, "");
    engine\octaedit.cpp:1541            COMMANDN(redo, editredo, "");
    engine\octaedit.cpp:2520            COMMANDN(edittex, edittex_, "i");
    engine\rendergl.cpp:2103            COMMANDN(loadcrosshair, loadcrosshair_, "si");
    engine\rendermodel.cpp:350          COMMANDN(mapmodel, mapmodelcompat, "iiiss");
    engine\rendertext.cpp:75            COMMANDN(font, newfont, "ssii");
    engine\sound.cpp:301                COMMANDN(music, startmusic, "ss");
    engine\texture.cpp:2155             COMMANDN(texoffset, texoffset_, "ii");
    engine\texture.cpp:2164             COMMANDN(texrotate, texrotate_, "i");
    fpsgame\client.cpp:943              COMMANDN(say, toserver, "C");
    fpsgame\client.cpp:2167             COMMANDN(goto, gotoplayer, "s");
    fpsgame\server.cpp:592              COMMANDN(maprotation, addmaprotations, "ss2V");
    fpsgame\server.cpp:661              COMMANDN(teamkillkick, addteamkillkick, "sii");


ICOMMAND
    engine\blend.cpp:702                ICOMMAND(paintblendmap, "D", (int *isdown),
    engine\blend.cpp:756                ICOMMAND(clearblendmap, "", (),
    engine\blend.cpp:763                ICOMMAND(moveblendmap, "ii", (int *dx, int *dy),
    engine\client.cpp:42                ICOMMAND(isconnected, "bb", (int *attempt, int *local), intret(isconnected(*attempt > 0, *local != 0) ? 1 : 0));
    engine\client.cpp:49                ICOMMAND(connectedip, "", (),
    engine\client.cpp:56                ICOMMAND(connectedport, "", (),
    engine\client.cpp:183               ICOMMAND(connect, "sis", (char *name, int *port, char *pw), connectserv(name, *port, pw));
    engine\client.cpp:184               ICOMMAND(lanconnect, "is", (int *port, char *pw), connectserv(NULL, *port, pw));
    engine\client.cpp:186               ICOMMAND(disconnect, "b", (int *local), trydisconnect(*local != 0));
    engine\client.cpp:187               ICOMMAND(localconnect, "", (), { if(!isconnected()) localconnect(); });
    engine\client.cpp:188               ICOMMAND(localdisconnect, "", (), { if(haslocalclients()) localdisconnect(); });
    engine\command.cpp:307              ICOMMAND(nodebug, "e", (uint *body), { nodebug++; executeret(body, *commandret); nodebug--; });
    engine\command.cpp:334              ICOMMAND(push, "rte", (ident *id, tagval *v, uint *code),
    engine\command.cpp:477              ICOMMAND(alias, "st", (const char *name, tagval *v),
    engine\command.cpp:573              ICOMMAND(getvarmin, "s", (char *s), intret(getvarmin(s)));
    engine\command.cpp:574              ICOMMAND(getvarmax, "s", (char *s), intret(getvarmax(s)));
    engine\command.cpp:575              ICOMMAND(getfvarmin, "s", (char *s), floatret(getfvarmin(s)));
    engine\command.cpp:576              ICOMMAND(getfvarmax, "s", (char *s), floatret(getfvarmax(s)));
    engine\command.cpp:600              ICOMMAND(getalias, "s", (char *s), result(getalias(s)));
    engine\command.cpp:690              ICOMMAND(set, "rt", (ident *id, tagval *v),
    engine\command.cpp:1640             ICOMMAND(printvar, "r", (ident *id), printvar(id));
    engine\command.cpp:2383             ICOMMAND(exec, "sb", (char *file, int *msg), intret(execfile(file, *msg != 0) ? 1 : 0));
    engine\command.cpp:2406             ICOMMAND(escape, "s", (char *s), result(escapestring(s)));
    engine\command.cpp:2407             ICOMMAND(unescape, "s", (char *s),
    engine\command.cpp:2526             ICOMMAND(do, "e", (uint *body), executeret(body, *commandret));
    engine\command.cpp:2527             ICOMMAND(if, "tee", (tagval *cond, uint *t, uint *f), executeret(getbool(*cond) ? t : f, *commandret));
    engine\command.cpp:2528             ICOMMAND(?, "ttt", (tagval *cond, tagval *t, tagval *f), result(*(getbool(*cond) ? t : f)));
    engine\command.cpp:2530             ICOMMAND(pushif, "rte", (ident *id, tagval *v, uint *code),
    engine\command.cpp:2584             ICOMMAND(loop, "rie", (ident *id, int *n, uint *body),
    engine\command.cpp:2595             ICOMMAND(loopwhile, "riee", (ident *id, int *n, uint *cond, uint *body),
    engine\command.cpp:2607             ICOMMAND(while, "ee", (uint *cond, uint *body), while(executebool(cond)) execute(body));
    engine\command.cpp:2629             ICOMMAND(loopconcat, "rie", (ident *id, int *n, uint *body),
    engine\command.cpp:2634             ICOMMAND(loopconcatword, "rie", (ident *id, int *n, uint *body),
    engine\command.cpp:2669             ICOMMAND(append, "rt", (ident *id, tagval *v), append(id, v, true));
    engine\command.cpp:2670             ICOMMAND(appendword, "rt", (ident *id, tagval *v), append(id, v, false));
    engine\command.cpp:2688             ICOMMAND(result, "t", (tagval *v),
    engine\command.cpp:2786             ICOMMAND(listlen, "s", (char *s), intret(listlen(s)));
    engine\command.cpp:2846             ICOMMAND(stripcolors, "s", (char *s),
    engine\command.cpp:2944             ICOMMAND(looplistconcat, "rse", (ident *id, char *list, uint *body), looplistconc(id, list, body, true));
    engine\command.cpp:2945             ICOMMAND(looplistconcatword, "rse", (ident *id, char *list, uint *body), looplistconc(id, list, body, false));
    engine\command.cpp:3004             ICOMMAND(indexof, "ss", (char *list, char *elem), intret(listincludes(list, elem, strlen(elem))));
    engine\command.cpp:3020             ICOMMAND(listdel, "ss", (char *list, char *del), commandret->setstr(listdel(list, del)));
    engine\command.cpp:3049             ICOMMAND(loopfiles, "rsse", (ident *id, char *dir, char *ext, uint *body),
    engine\command.cpp:3168             ICOMMAND(+, "ii", (int *a, int *b), intret(*a + *b));
    engine\command.cpp:3169             ICOMMAND(*, "ii", (int *a, int *b), intret(*a * *b));
    engine\command.cpp:3170             ICOMMAND(-, "ii", (int *a, int *b), intret(*a - *b));
    engine\command.cpp:3171             ICOMMAND(+f, "ff", (float *a, float *b), floatret(*a + *b));
    engine\command.cpp:3172             ICOMMAND(*f, "ff", (float *a, float *b), floatret(*a * *b));
    engine\command.cpp:3173             ICOMMAND(-f, "ff", (float *a, float *b), floatret(*a - *b));
    engine\command.cpp:3174             ICOMMAND(=, "ii", (int *a, int *b), intret((int)(*a == *b)));
    engine\command.cpp:3175             ICOMMAND(!=, "ii", (int *a, int *b), intret((int)(*a != *b)));
    engine\command.cpp:3176             ICOMMAND(<, "ii", (int *a, int *b), intret((int)(*a < *b)));
    engine\command.cpp:3177             ICOMMAND(>, "ii", (int *a, int *b), intret((int)(*a > *b)));
    engine\command.cpp:3178             ICOMMAND(<=, "ii", (int *a, int *b), intret((int)(*a <= *b)));
    engine\command.cpp:3179             ICOMMAND(>=, "ii", (int *a, int *b), intret((int)(*a >= *b)));
    engine\command.cpp:3180             ICOMMAND(=f, "ff", (float *a, float *b), intret((int)(*a == *b)));
    engine\command.cpp:3181             ICOMMAND(!=f, "ff", (float *a, float *b), intret((int)(*a != *b)));
    engine\command.cpp:3182             ICOMMAND(<f, "ff", (float *a, float *b), intret((int)(*a < *b)));
    engine\command.cpp:3183             ICOMMAND(>f, "ff", (float *a, float *b), intret((int)(*a > *b)));
    engine\command.cpp:3184             ICOMMAND(<=f, "ff", (float *a, float *b), intret((int)(*a <= *b)));
    engine\command.cpp:3185             ICOMMAND(>=f, "ff", (float *a, float *b), intret((int)(*a >= *b)));
    engine\command.cpp:3186             ICOMMAND(^, "ii", (int *a, int *b), intret(*a ^ *b));
    engine\command.cpp:3187             ICOMMAND(!, "t", (tagval *a), intret(!getbool(*a)));
    engine\command.cpp:3188             ICOMMAND(&, "ii", (int *a, int *b), intret(*a & *b));
    engine\command.cpp:3189             ICOMMAND(|, "ii", (int *a, int *b), intret(*a | *b));
    engine\command.cpp:3190             ICOMMAND(~, "i", (int *a), intret(~*a));
    engine\command.cpp:3191             ICOMMAND(^~, "ii", (int *a, int *b), intret(*a ^ ~*b));
    engine\command.cpp:3192             ICOMMAND(&~, "ii", (int *a, int *b), intret(*a & ~*b));
    engine\command.cpp:3193             ICOMMAND(|~, "ii", (int *a, int *b), intret(*a | ~*b));
    engine\command.cpp:3194             ICOMMAND(<<, "ii", (int *a, int *b), intret(*b < 32 ? *a << max(*b, 0) : 0));
    engine\command.cpp:3195             ICOMMAND(>>, "ii", (int *a, int *b), intret(*a >> clamp(*b, 0, 31)));
    engine\command.cpp:3196             ICOMMAND(&&, "e1V", (tagval *args, int numargs),
    engine\command.cpp:3206             ICOMMAND(||, "e1V", (tagval *args, int numargs),
    engine\command.cpp:3217             ICOMMAND(div, "ii", (int *a, int *b), intret(*b ? *a / *b : 0));
    engine\command.cpp:3218             ICOMMAND(mod, "ii", (int *a, int *b), intret(*b ? *a % *b : 0));
    engine\command.cpp:3219             ICOMMAND(divf, "ff", (float *a, float *b), floatret(*b ? *a / *b : 0));
    engine\command.cpp:3220             ICOMMAND(modf, "ff", (float *a, float *b), floatret(*b ? fmod(*a, *b) : 0));
    engine\command.cpp:3221             ICOMMAND(sin, "f", (float *a), floatret(sin(*a*RAD)));
    engine\command.cpp:3222             ICOMMAND(cos, "f", (float *a), floatret(cos(*a*RAD)));
    engine\command.cpp:3223             ICOMMAND(tan, "f", (float *a), floatret(tan(*a*RAD)));
    engine\command.cpp:3224             ICOMMAND(asin, "f", (float *a), floatret(asin(*a)/RAD));
    engine\command.cpp:3225             ICOMMAND(acos, "f", (float *a), floatret(acos(*a)/RAD));
    engine\command.cpp:3226             ICOMMAND(atan, "f", (float *a), floatret(atan(*a)/RAD));
    engine\command.cpp:3227             ICOMMAND(atan2, "ff", (float *y, float *x), floatret(atan2(*y, *x)/RAD));
    engine\command.cpp:3228             ICOMMAND(sqrt, "f", (float *a), floatret(sqrt(*a)));
    engine\command.cpp:3229             ICOMMAND(pow, "ff", (float *a, float *b), floatret(pow(*a, *b)));
    engine\command.cpp:3230             ICOMMAND(loge, "f", (float *a), floatret(log(*a)));
    engine\command.cpp:3231             ICOMMAND(log2, "f", (float *a), floatret(log(*a)/M_LN2));
    engine\command.cpp:3232             ICOMMAND(log10, "f", (float *a), floatret(log10(*a)));
    engine\command.cpp:3233             ICOMMAND(exp, "f", (float *a), floatret(exp(*a)));
    engine\command.cpp:3234             ICOMMAND(min, "V", (tagval *args, int numargs),
    engine\command.cpp:3240             ICOMMAND(max, "V", (tagval *args, int numargs),
    engine\command.cpp:3246             ICOMMAND(minf, "V", (tagval *args, int numargs),
    engine\command.cpp:3252             ICOMMAND(maxf, "V", (tagval *args, int numargs),
    engine\command.cpp:3258             ICOMMAND(abs, "i", (int *n), intret(abs(*n)));
    engine\command.cpp:3259             ICOMMAND(absf, "f", (float *n), floatret(fabs(*n)));
    engine\command.cpp:3261             ICOMMAND(floor, "f", (float *n), floatret(floor(*n)));
    engine\command.cpp:3262             ICOMMAND(ceil, "f", (float *n), floatret(ceil(*n)));
    engine\command.cpp:3263             ICOMMAND(round, "ff", (float *n, float *k),
    engine\command.cpp:3276             ICOMMAND(cond, "ee2V", (tagval *args, int numargs),
    engine\command.cpp:3296             ICOMMAND(name, fmt "te2V", (tagval *args, int numargs), \
    engine\command.cpp:3313             ICOMMAND(rnd, "ii", (int *a, int *b), intret(*a - *b > 0 ? rnd(*a - *b) + *b : *b));
    engine\command.cpp:3314             ICOMMAND(rndstr, "i", (int *len),
    engine\command.cpp:3331             ICOMMAND(strcmp, "ss", (char *a, char *b), intret(strcmp(a,b)==0));
    engine\command.cpp:3332             ICOMMAND(=s, "ss", (char *a, char *b), intret(strcmp(a,b)==0));
    engine\command.cpp:3333             ICOMMAND(!=s, "ss", (char *a, char *b), intret(strcmp(a,b)!=0));
    engine\command.cpp:3334             ICOMMAND(<s, "ss", (char *a, char *b), intret(strcmp(a,b)<0));
    engine\command.cpp:3335             ICOMMAND(>s, "ss", (char *a, char *b), intret(strcmp(a,b)>0));
    engine\command.cpp:3336             ICOMMAND(<=s, "ss", (char *a, char *b), intret(strcmp(a,b)<=0));
    engine\command.cpp:3337             ICOMMAND(>=s, "ss", (char *a, char *b), intret(strcmp(a,b)>=0));
    engine\command.cpp:3338             ICOMMAND(echo, "C", (char *s), conoutf(CON_ECHO, "\f1%s", s));
    engine\command.cpp:3339             ICOMMAND(error, "C", (char *s), conoutf(CON_ERROR, "%s", s));
    engine\command.cpp:3340             ICOMMAND(strstr, "ss", (char *a, char *b), { char *s = strstr(a, b); intret(s ? s-a : -1); });
    engine\command.cpp:3341             ICOMMAND(strlen, "s", (char *s), intret(strlen(s)));
    engine\command.cpp:3342             ICOMMAND(strcode, "si", (char *s, int *i), intret(*i > 0 ? (memchr(s, 0, *i) ? 0 : uchar(s[*i])) : uchar(s[0])));
    engine\command.cpp:3343             ICOMMAND(codestr, "i", (int *i), { char *s = newstring(1); s[0] = char(*i); s[1] = '\0'; stringret(s); });
    engine\command.cpp:3344             ICOMMAND(struni, "si", (char *s, int *i), intret(*i > 0 ? (memchr(s, 0, *i) ? 0 : cube2uni(s[*i])) : cube2uni(s[0])));
    engine\command.cpp:3345             ICOMMAND(unistr, "i", (int *i), { char *s = newstring(1); s[0] = uni2cube(*i); s[1] = '\0'; stringret(s); });
    engine\command.cpp:3371             ICOMMAND(naturalsort, "ss", (char *a, char *b), intret(naturalsort(a,b)<=0));
    engine\command.cpp:3374             ICOMMAND(name, "s", (char *s), \
    engine\command.cpp:3410             ICOMMAND(strreplace, "sss", (char *s, char *o, char *n), commandret->setstr(strreplace(s, o, n)));
    engine\command.cpp:3427             ICOMMAND(getmillis, "i", (int *total), intret(*total ? totalmillis : lastmillis));
    engine\console.cpp:51               ICOMMAND(toggleconsole, "", (), { fullconsole ^= 1; });
    engine\console.cpp:94               ICOMMAND(conskip, "i", (int *n), setconskip(conskip, fullconsole ? fullconfilter : confilter, *n));
    engine\console.cpp:95               ICOMMAND(miniconskip, "i", (int *n), setconskip(miniconskip, miniconfilter, *n));
    engine\console.cpp:97               ICOMMAND(clearconsole, "", (), { while(conlines.length()) delete[] conlines.pop().line; });
    engine\console.cpp:244              ICOMMAND(bind,     "ss", (char *key, char *action), bindkey(key, action, keym::ACTION_DEFAULT, "bind"));
    engine\console.cpp:245              ICOMMAND(specbind, "ss", (char *key, char *action), bindkey(key, action, keym::ACTION_SPECTATOR, "specbind"));
    engine\console.cpp:246              ICOMMAND(editbind, "ss", (char *key, char *action), bindkey(key, action, keym::ACTION_EDITING, "editbind"));
    engine\console.cpp:247              ICOMMAND(getbind,     "s", (char *key), getbind(key, keym::ACTION_DEFAULT));
    engine\console.cpp:248              ICOMMAND(getspecbind, "s", (char *key), getbind(key, keym::ACTION_SPECTATOR));
    engine\console.cpp:249              ICOMMAND(geteditbind, "s", (char *key), getbind(key, keym::ACTION_EDITING));
    engine\console.cpp:250              ICOMMAND(searchbinds,     "s", (char *action), searchbinds(action, keym::ACTION_DEFAULT));
    engine\console.cpp:251              ICOMMAND(searchspecbinds, "s", (char *action), searchbinds(action, keym::ACTION_SPECTATOR));
    engine\console.cpp:252              ICOMMAND(searcheditbinds, "s", (char *action), searchbinds(action, keym::ACTION_EDITING));
    engine\console.cpp:275              ICOMMAND(saycommand, "C", (char *init), inputcommand(init));
    engine\main.cpp:591                 ICOMMAND(screenres, "ii", (int *w, int *h), screenres(*w, *h));
    engine\master.cpp:68                ICOMMAND(ban, "s", (char *name), addban(bans, name));
    engine\master.cpp:69                ICOMMAND(servban, "s", (char *name), addban(servbans, name));
    engine\master.cpp:70                ICOMMAND(gban, "s", (char *name), addban(gbans, name));
    engine\menus.cpp:582                ICOMMAND(cleargui, "i", (int *n), intret(cleargui(*n)));
    engine\menus.cpp:589                ICOMMAND(guikeeptab, "b", (int *keeptab), if(guistack.length()) guistack.last()->keeptab = *keeptab!=0);
    engine\movie.cpp:1156               ICOMMAND(movierecording, "", (), intret(recorder::isrecording() ? 1 : 0));
    engine\normal.cpp:281               ICOMMAND(smoothangle, "ib", (int *id, int *angle), intret(smoothangle(*id, *angle)));
    engine\octaedit.cpp:117             ICOMMAND(moving, "b", (int *n),
    engine\octaedit.cpp:230             ICOMMAND(edittoggle, "", (), toggleedit(false));
    engine\octaedit.cpp:237             ICOMMAND(selmoved, "", (), { if(noedit(true)) return; intret(sel.o != savedsel.o ? 1 : 0); });
    engine\octaedit.cpp:238             ICOMMAND(selsave, "", (), { if(noedit(true)) return; savedsel = sel; });
    engine\octaedit.cpp:239             ICOMMAND(selrestore, "", (), { if(noedit(true)) return; sel = savedsel; });
    engine\octaedit.cpp:240             ICOMMAND(selswap, "", (), { if(noedit(true)) return; swap(sel, savedsel); });
    engine\octaedit.cpp:242             ICOMMAND(getselpos, "", (),
    engine\octaedit.cpp:285             ICOMMAND(havesel, "", (), intret(havesel ? selchildcount : 0));
    engine\octaedit.cpp:1607            ICOMMAND(hmapselect, "", (),
    engine\octaedit.cpp:2224            ICOMMAND(getvrotate, "i", (int *tex), intret(lookupvslot(*tex, false).rotation));
    engine\octaedit.cpp:2235            ICOMMAND(getvoffset, "i", (int *tex),
    engine\octaedit.cpp:2251            ICOMMAND(getvscroll, "i", (int *tex),
    engine\octaedit.cpp:2267            ICOMMAND(getvscale, "i", (int *tex), floatret(lookupvslot(*tex, false).scale));
    engine\octaedit.cpp:2283            ICOMMAND(getvlayer, "i", (int *tex), intret(lookupvslot(*tex, false).layer));
    engine\octaedit.cpp:2295            ICOMMAND(getvalpha, "i", (int *tex),
    engine\octaedit.cpp:2311            ICOMMAND(getvcolor, "i", (int *tex),
    engine\octaedit.cpp:2339            ICOMMAND(getvshaderparam, "is", (int *tex, const char *name),
    engine\octaedit.cpp:2353            ICOMMAND(getvshaderparamnames, "i", (int *tex),
    engine\octaedit.cpp:2524            ICOMMAND(getreptex, "", (), { if(!noedit()) intret(vslots.inrange(reptex) ? reptex : -1); });
    engine\octaedit.cpp:2526            ICOMMAND(numvslots, "", (), intret(vslots.length()));
    engine\octaedit.cpp:2527            ICOMMAND(numslots, "", (), intret(slots.length()));
    engine\octaedit.cpp:2529            ICOMMAND(texloaded, "i", (int *tex), intret(slots.inrange(*tex) && slots[*tex]->loaded ? 1 : 0));
    engine\octaedit.cpp:2567            ICOMMAND(replace, "", (), replace(false));
    engine\octaedit.cpp:2568            ICOMMAND(replacesel, "", (), replace(true));
    engine\octaedit.cpp:2888            ICOMMAND(cleartexgui, "", (), intret(cleartexgui() ? 1 : 0));
    engine\physics.cpp:2019             ICOMMAND(jump,   "D", (int *down), { if(!*down || game::canjump()) player->jumping = *down!=0; });
    engine\physics.cpp:2020             ICOMMAND(attack, "D", (int *down), { game::doattack(*down!=0); });
    engine\rendergl.cpp:621             ICOMMAND(getcamyaw, "", (), floatret(camera1->yaw));
    engine\rendergl.cpp:622             ICOMMAND(getcampitch, "", (), floatret(camera1->pitch));
    engine\rendergl.cpp:623             ICOMMAND(getcamroll, "", (), floatret(camera1->roll));
    engine\rendergl.cpp:624             ICOMMAND(getcampos, "", (),
    engine\rendergl.cpp:2105            ICOMMAND(getcrosshair, "i", (int *i),
    engine\rendermodel.cpp:352          ICOMMAND(mapmodelname, "i", (int *index), { result(mapmodels.inrange(*index) ? mapmodels[*index].name : ""); });
    engine\rendermodel.cpp:353          ICOMMAND(mapmodelloaded, "i", (int *index), { intret(mapmodels.inrange(*index) && mapmodels[*index].m ? 1 : 0); });
    engine\rendermodel.cpp:354          ICOMMAND(nummapmodels, "", (), { intret(mapmodels.length()); });
    engine\rendermodel.cpp:355          ICOMMAND(mapmodelfind, "s", (char *name), { int found = -1; loopv(mapmodels) if(strstr(mapmodels[i].name, name)) { found = i; break; } intret(found); });
    engine\rendermodel.cpp:1014         ICOMMAND(findanims, "s", (char *name),
    engine\serverbrowser.cpp:715        ICOMMAND(addserver, "sis", (const char *name, int *port, const char *password), addserver(name, *port, password[0] ? password : NULL));
    engine\serverbrowser.cpp:716        ICOMMAND(keepserver, "sis", (const char *name, int *port, const char *password), addserver(name, *port, password[0] ? password : NULL, true));
    engine\serverbrowser.cpp:717        ICOMMAND(clearservers, "i", (int *full), clearservers(*full!=0));
    engine\shader.cpp:1228              ICOMMAND(forceshader, "s", (const char *name), useshaderbyname(name));
    engine\shader.cpp:1230              ICOMMAND(isshaderdefined, "s", (char *name), intret(lookupshaderbyname(name) ? 1 : 0));
    engine\shader.cpp:1260              ICOMMAND(setuniformparam, "sffff", (char *name, float *x, float *y, float *z, float *w), addslotparam(name, *x, *y, *z, *w));
    engine\shader.cpp:1261              ICOMMAND(setshaderparam, "sffff", (char *name, float *x, float *y, float *z, float *w), addslotparam(name, *x, *y, *z, *w));
    engine\shader.cpp:1262              ICOMMAND(defuniformparam, "sffff", (char *name, float *x, float *y, float *z, float *w), addslotparam(name, *x, *y, *z, *w));
    engine\shader.cpp:1423              ICOMMAND(addpostfx, "siisffff", (char *name, int *bind, int *scale, char *inputs, float *x, float *y, float *z, float *w),
    engine\shader.cpp:1440              ICOMMAND(setpostfx, "sffff", (char *name, float *x, float *y, float *z, float *w),
    engine\sound.cpp:562                ICOMMAND(numsounds, "", (), intret(gamesounds.configs.length()));
    engine\sound.cpp:563                ICOMMAND(nummapsounds, "", (), intret(mapsounds.configs.length()));
    engine\sound.cpp:845                ICOMMAND(sound, "i", (int *n), playsound(*n));
    engine\textedit.h:705               ICOMMAND(textlist, "", (), // @DEBUG return list of all the editors
    engine\textedit.h:721               ICOMMAND(textfocus, "si", (char *name, int *mode), // focus on a (or create a persistent) specific editor, else returns current name
    engine\texture.cpp:1737             ICOMMAND(compactvslots, "", (),
    engine\texture.cpp:2063             ICOMMAND(fixinsidefaces, "i", (int *tex),
    engine\world.cpp:776                ICOMMAND(entadd, "", (),
    engine\world.cpp:785                ICOMMAND(enttoggle, "", (),
    engine\world.cpp:791                ICOMMAND(entmoving, "b", (int *n),
    engine\world.cpp:1076               ICOMMAND(enthavesel,"",  (), addimplicit(intret(entgroup.length())));
    engine\world.cpp:1077               ICOMMAND(entselect, "e", (uint *body), if(!noentedit()) addgroup(e.type != ET_EMPTY && entgroup.find(n)<0 && executebool(body)));
    engine\world.cpp:1078               ICOMMAND(entloop,   "e", (uint *body), if(!noentedit()) addimplicit(groupeditloop(((void)e, execute(body)))));
    engine\world.cpp:1079               ICOMMAND(insel,     "",  (), entfocus(efocus, intret(pointinsel(sel, e.o))));
    engine\world.cpp:1080               ICOMMAND(entget,    "",  (), entfocus(efocus, string s; printent(e, s, sizeof(s)); result(s)));
    engine\world.cpp:1081               ICOMMAND(entindex,  "",  (), intret(efocus));
    fpsgame\ai.cpp:16                   ICOMMAND(addbot, "s", (char *s), addmsg(N_ADDBOT, "ri", *s ? clamp(parseint(s), 1, 101) : -1));
    fpsgame\ai.cpp:17                   ICOMMAND(delbot, "", (), addmsg(N_DELBOT, "r"));
    fpsgame\ai.cpp:18                   ICOMMAND(botlimit, "i", (int *n), addmsg(N_BOTLIMIT, "ri", *n));
    fpsgame\ai.cpp:19                   ICOMMAND(botbalance, "i", (int *n), addmsg(N_BOTBALANCE, "ri", *n));
    fpsgame\capture.h:706               ICOMMAND(repammo, "", (), capturemode.replenishammo());
    fpsgame\capture.h:707               ICOMMAND(insidebases, "", (),
    fpsgame\client.cpp:138              ICOMMAND(name, "sN", (char *s, int *numargs),
    fpsgame\client.cpp:144              ICOMMAND(getname, "", (), result(player1->name));
    fpsgame\client.cpp:155              ICOMMAND(team, "sN", (char *s, int *numargs),
    fpsgame\client.cpp:161              ICOMMAND(getteam, "", (), result(player1->team));
    fpsgame\client.cpp:203              ICOMMAND(authkey, "sss", (char *name, char *key, char *desc), addauthkey(name, key, desc));
    fpsgame\client.cpp:212              ICOMMAND(hasauthkey, "ss", (char *name, char *desc), intret(hasauthkey(name, desc) ? 1 : 0));
    fpsgame\client.cpp:286              ICOMMAND(getclientname, "i", (int *cn), result(getclientname(*cn)));
    fpsgame\client.cpp:293              ICOMMAND(getclientteam, "i", (int *cn), result(getclientteam(*cn)));
    fpsgame\client.cpp:300              ICOMMAND(getclientmodel, "i", (int *cn), intret(getclientmodel(*cn)));
    fpsgame\client.cpp:309              ICOMMAND(getclienticon, "i", (int *cn), result(getclienticon(*cn)));
    fpsgame\client.cpp:316              ICOMMAND(ismaster, "i", (int *cn), intret(ismaster(*cn) ? 1 : 0));
    fpsgame\client.cpp:323              ICOMMAND(isauth, "i", (int *cn), intret(isauth(*cn) ? 1 : 0));
    fpsgame\client.cpp:330              ICOMMAND(isadmin, "i", (int *cn), intret(isadmin(*cn) ? 1 : 0));
    fpsgame\client.cpp:332              ICOMMAND(getmastermode, "", (), intret(mastermode));
    fpsgame\client.cpp:333              ICOMMAND(mastermodename, "i", (int *mm), result(server::mastermodename(*mm, "")));
    fpsgame\client.cpp:340              ICOMMAND(isspectator, "i", (int *cn), intret(isspectator(*cn) ? 1 : 0));
    fpsgame\client.cpp:348              ICOMMAND(isai, "ii", (int *cn, int *type), intret(isai(*cn, *type) ? 1 : 0));
    fpsgame\client.cpp:390              ICOMMAND(getclientnum, "s", (char *name), intret(name[0] ? parseplayer(name) : player1->clientnum));
    fpsgame\client.cpp:412              ICOMMAND(listclients, "bb", (int *local, int *bots), listclients(*local>0, *bots!=0));
    fpsgame\client.cpp:437              ICOMMAND(authkick, "ss", (const char *victim, const char *reason), authkick("", victim, reason));
    fpsgame\client.cpp:438              ICOMMAND(sauthkick, "ss", (const char *victim, const char *reason), if(servauth[0]) authkick(servauth, victim, reason));
    fpsgame\client.cpp:439              ICOMMAND(dauthkick, "sss", (const char *desc, const char *victim, const char *reason), if(desc[0]) authkick(desc, victim, reason));
    fpsgame\client.cpp:461              ICOMMAND(ignore, "s", (char *arg), ignore(parseplayer(arg)));
    fpsgame\client.cpp:462              ICOMMAND(unignore, "s", (char *arg), unignore(parseplayer(arg)));
    fpsgame\client.cpp:463              ICOMMAND(isignored, "s", (char *arg), intret(isignored(parseplayer(arg)) ? 1 : 0));
    fpsgame\client.cpp:500              ICOMMAND(mastermode, "i", (int *val), addmsg(N_MASTERMODE, "ri", *val));
    fpsgame\client.cpp:510              ICOMMAND(auth, "s", (char *desc), tryauth(desc));
    fpsgame\client.cpp:511              ICOMMAND(sauth, "", (), if(servauth[0]) tryauth(servauth));
    fpsgame\client.cpp:512              ICOMMAND(dauth, "s", (char *desc), if(desc[0]) tryauth(desc));
    fpsgame\client.cpp:514              ICOMMAND(getservauth, "", (), result(servauth));
    fpsgame\client.cpp:521              ICOMMAND(spectator, "is", (int *val, char *who), togglespectator(*val, who));
    fpsgame\client.cpp:523              ICOMMAND(checkmaps, "", (), addmsg(N_CHECKMAPS, "r"));
    fpsgame\client.cpp:559              ICOMMAND(mode, "i", (int *val), setmode(*val));
    fpsgame\client.cpp:560              ICOMMAND(getmode, "", (), intret(gamemode));
    fpsgame\client.cpp:561              ICOMMAND(timeremaining, "i", (int *formatted),
    fpsgame\client.cpp:603              ICOMMAND(map, "s", (char *name), changemap(name));
    fpsgame\client.cpp:801              ICOMMAND(pausegame, "i", (int *val), pausegame(*val > 0));
    fpsgame\client.cpp:802              ICOMMAND(paused, "iN$", (int *val, int *numargs, ident *id),
    fpsgame\client.cpp:819              ICOMMAND(gamespeed, "iN$", (int *val, int *numargs, ident *id),
    fpsgame\client.cpp:948              ICOMMAND(servcmd, "C", (char *cmd), addmsg(N_SERVCMD, "rs", cmd));
    fpsgame\client.cpp:2092             ICOMMAND(recorddemo, "i", (int *val), recorddemo(*val));
    fpsgame\client.cpp:2099             ICOMMAND(cleardemos, "i", (int *val), cleardemos(*val));
    fpsgame\client.cpp:2118             ICOMMAND(getdemo, "ss", (char *val, char *name), getdemo(val, name));
    fpsgame\ctf.h:1273                  ICOMMAND(dropflag, "", (), { ctfmode.trydropflag(); });
    fpsgame\entities.cpp:503            ICOMMAND(trigger, "ii", (int *tag, int *state),
    fpsgame\fps.cpp:27                  ICOMMAND(getfollow, "", (),
    fpsgame\fps.cpp:66                  ICOMMAND(nextfollow, "i", (int *dir), nextfollow(*dir < 0 ? -1 : 1));
    fpsgame\fps.cpp:151                 ICOMMAND(allowthirdperson, "b", (int *msg), intret(allowthirdperson(*msg!=0) ? 1 : 0));
    fpsgame\fps.cpp:531                 ICOMMAND(getfrags, "", (), intret(player1->frags));
    fpsgame\fps.cpp:532                 ICOMMAND(getflags, "", (), intret(player1->flags));
    fpsgame\fps.cpp:533                 ICOMMAND(getdeaths, "", (), intret(player1->deaths));
    fpsgame\fps.cpp:534                 ICOMMAND(getaccuracy, "", (), intret((player1->totaldamage*100)/max(player1->totalshots, 1)));
    fpsgame\fps.cpp:535                 ICOMMAND(gettotaldamage, "", (), intret(player1->totaldamage));
    fpsgame\fps.cpp:536                 ICOMMAND(gettotalshots, "", (), intret(player1->totalshots));
    fpsgame\fps.cpp:809                 ICOMMAND(suicide, "", (), suicide(player1));
    fpsgame\fps.cpp:843                 ICOMMAND(ammohudup, "V", (tagval *args, int numargs),
    fpsgame\fps.cpp:848                 ICOMMAND(ammohuddown, "V", (tagval *args, int numargs),
    fpsgame\fps.cpp:853                 ICOMMAND(ammohudcycle, "V", (tagval *args, int numargs),
    fpsgame\monster.cpp:282             ICOMMAND(nummonsters, "ii", (int *tag, int *state), intret(nummonsters(*tag, *state)));
    fpsgame\monster.cpp:348             ICOMMAND(endsp, "", (), endsp(false));
    fpsgame\movable.cpp:122             ICOMMAND(platform, "ii", (int *tag, int *newdir), triggerplatform(*tag, *newdir));
    fpsgame\scoreboard.cpp:482          ICOMMAND(showscores, "D", (int *down), showscores(*down!=0));
    fpsgame\server.cpp:1316             ICOMMAND(seekdemo, "sN$", (char *t, int *numargs, ident *id),
    fpsgame\server.cpp:2731             ICOMMAND(clearipbans, "", (), ipbans.clear());
    fpsgame\server.cpp:2732             ICOMMAND(ipban, "s", (const char *ipname), ipbans.add(ipname));
    fpsgame\waypoint.cpp:187            ICOMMAND(clearwpcache, "", (), clearwpcache());
    fpsgame\waypoint.cpp:609            ICOMMAND(clearwaypoints, "", (), clearwaypoints());
    fpsgame\waypoint.cpp:728            ICOMMAND(loadwaypoints, "s", (char *mname), loadwaypoints(true, mname));
    fpsgame\waypoint.cpp:757            ICOMMAND(savewaypoints, "s", (char *mname), savewaypoints(true, mname));
    fpsgame\waypoint.cpp:806            ICOMMAND(movewaypoints, "iii", (int *dx, int *dy, int *dz), movewaypoints(vec(*dx, *dy, *dz)));
    fpsgame\weapon.cpp:20               ICOMMAND(getweapon, "", (), intret(player1->gunselect));
    fpsgame\weapon.cpp:45               ICOMMAND(nextweapon, "ii", (int *dir, int *force), nextweapon(*dir, *force!=0));
    fpsgame\weapon.cpp:62               ICOMMAND(setweapon, "si", (char *name, int *force), setweapon(name, *force!=0));
    fpsgame\weapon.cpp:80               ICOMMAND(cycleweapon, "V", (tagval *args, int numargs),
    fpsgame\weapon.cpp:103              ICOMMAND(weapon, "V", (tagval *args, int numargs),
    rpggame\entities.cpp:90             ICOMMAND(spawnname, "s", (char *s), { if(lastcreated) { copystring(lastcreated->name, s, SPAWNNAMELEN); spawnfroment(*lastcreated); } });
    rpggame\objset.cpp:147              ICOMMAND(r_get_##n, "",  (), { intret(stack[0]->s_##n); });
    rpggame\objset.cpp:152              ICOMMAND(r_eff_##n, "",   (), { intret(stack[0]->eff_##n()); });
    rpggame\objset.cpp:156              ICOMMAND(r_model,       "s",   (char *s), { stack[0]->model = stringpool(s); });
    rpggame\objset.cpp:157              ICOMMAND(r_spawn,       "s",   (char *s), { spawn(stringpool(s)); });
    rpggame\objset.cpp:158              ICOMMAND(r_contain,     "s",   (char *s), { stack[0]->decontain(); stack[1]->add(stack[0], atoi(s)); });
    rpggame\objset.cpp:159              ICOMMAND(r_pop,         "",    (), { popobj(); });
    rpggame\objset.cpp:160              ICOMMAND(r_swap,        "",    (), { swap(stack[0], stack[1]); });
    rpggame\objset.cpp:161              ICOMMAND(r_say,         "s",   (char *s), { stack[0]->abovetext = stringpool(s); });
    rpggame\objset.cpp:162              ICOMMAND(r_quest,       "ss",  (char *s, char *a), { stack[0]->addaction(stringpool(s), stringpool(a), true); });
    rpggame\objset.cpp:163              ICOMMAND(r_action,      "ss",  (char *s, char *a), { stack[0]->addaction(stringpool(s), stringpool(a), false); });
    rpggame\objset.cpp:164              ICOMMAND(r_action_use,  "s",   (char *s), { stack[0]->action_use.script = stringpool(s); });
    rpggame\objset.cpp:165              ICOMMAND(r_take,        "sss", (char *name, char *ok, char *notok), { takefromplayer(name, ok, notok); });
    rpggame\objset.cpp:166              ICOMMAND(r_give,        "s",   (char *s), { givetoplayer(s); });
    rpggame\objset.cpp:167              ICOMMAND(r_use,         "",    (), { stack[0]->selectuse(); });
    rpggame\objset.cpp:168              ICOMMAND(r_applydamage, "i",   (int *d), { stack[0]->takedamage(*d, *stack[1]); });
    rpggame\rpg.cpp:48                  ICOMMAND(map, "s", (char *s), changemap(s));
    rpggame\rpg.cpp:100                 ICOMMAND(showplayergui, "i", (int *which), menu.show(*which));
    shared\zip.cpp:589                  ICOMMAND(addzip, "sss", (const char *name, const char *mount, const char *strip), addzip(name, mount[0] ? mount : NULL, strip[0] ? strip : NULL));
    shared\zip.cpp:590                  ICOMMAND(removezip, "s", (const char *name), removezip(name));


ICOMMANDS
    fpsgame\client.cpp:571              ICOMMANDS("m_noitems", "i", (int *mode), { int gamemode = *mode; intret(m_noitems); });
    fpsgame\client.cpp:572              ICOMMANDS("m_noammo", "i", (int *mode), { int gamemode = *mode; intret(m_noammo); });
    fpsgame\client.cpp:573              ICOMMANDS("m_insta", "i", (int *mode), { int gamemode = *mode; intret(m_insta); });
    fpsgame\client.cpp:574              ICOMMANDS("m_tactics", "i", (int *mode), { int gamemode = *mode; intret(m_tactics); });
    fpsgame\client.cpp:575              ICOMMANDS("m_efficiency", "i", (int *mode), { int gamemode = *mode; intret(m_efficiency); });
    fpsgame\client.cpp:576              ICOMMANDS("m_capture", "i", (int *mode), { int gamemode = *mode; intret(m_capture); });
    fpsgame\client.cpp:577              ICOMMANDS("m_regencapture", "i", (int *mode), { int gamemode = *mode; intret(m_regencapture); });
    fpsgame\client.cpp:578              ICOMMANDS("m_ctf", "i", (int *mode), { int gamemode = *mode; intret(m_ctf); });
    fpsgame\client.cpp:579              ICOMMANDS("m_protect", "i", (int *mode), { int gamemode = *mode; intret(m_protect); });
    fpsgame\client.cpp:580              ICOMMANDS("m_hold", "i", (int *mode), { int gamemode = *mode; intret(m_hold); });
    fpsgame\client.cpp:581              ICOMMANDS("m_collect", "i", (int *mode), { int gamemode = *mode; intret(m_collect); });
    fpsgame\client.cpp:582              ICOMMANDS("m_teammode", "i", (int *mode), { int gamemode = *mode; intret(m_teammode); });
    fpsgame\client.cpp:583              ICOMMANDS("m_demo", "i", (int *mode), { int gamemode = *mode; intret(m_demo); });
    fpsgame\client.cpp:584              ICOMMANDS("m_edit", "i", (int *mode), { int gamemode = *mode; intret(m_edit); });
    fpsgame\client.cpp:585              ICOMMANDS("m_lobby", "i", (int *mode), { int gamemode = *mode; intret(m_lobby); });
    fpsgame\client.cpp:586              ICOMMANDS("m_sp", "i", (int *mode), { int gamemode = *mode; intret(m_sp); });
    fpsgame\client.cpp:587              ICOMMANDS("m_dmsp", "i", (int *mode), { int gamemode = *mode; intret(m_dmsp); });
    fpsgame\client.cpp:588              ICOMMANDS("m_classicsp", "i", (int *mode), { int gamemode = *mode; intret(m_classicsp); });


KEYWORD
    engine\command.cpp:359              KEYWORD(local, ID_LOCAL);

STRMAPCOMMAND
    engine\command.cpp:3383             STRMAPCOMMAND(strlower, cubelower);
    engine\command.cpp:3384             STRMAPCOMMAND(strupper, cubeupper);

TEXTCOMMAND
    engine\textedit.h:715               TEXTCOMMAND(textshow, "", (), // @DEBUG return the start of the buffer
    engine\textedit.h:725               TEXTCOMMAND(textprev, "", (), editors.insert(0, top); editors.pop();); // return to the previous editor
    engine\textedit.h:726               TEXTCOMMAND(textmode, "i", (int *m), // (1= keep while focused, 2= keep while used in gui, 3= keep forever (i.e. until mode changes)) topmost editor, return current setting if no args
    engine\textedit.h:730               TEXTCOMMAND(textsave, "s", (char *file),  // saves the topmost (filename is optional)
    engine\textedit.h:734               TEXTCOMMAND(textload, "s", (char *file), // loads into the topmost editor, returns filename if no args
    engine\textedit.h:742               TEXTCOMMAND(textinit, "sss", (char *name, char *file, char *initval), // loads into named editor if no file assigned and editor has been rendered
    engine\textedit.h:755               TEXTCOMMAND(textcopy, "", (), editor *b = useeditor(PASTEBUFFER, EDITORFOREVER, false); top->copyselectionto(b););
    engine\textedit.h:756               TEXTCOMMAND(textpaste, "", (), editor *b = useeditor(PASTEBUFFER, EDITORFOREVER, false); top->insertallfrom(b););
    engine\textedit.h:757               TEXTCOMMAND(textmark, "i", (int *m),  // (1=mark, 2=unmark), return current mark setting if no args
    engine\textedit.h:761               TEXTCOMMAND(textselectall, "", (), top->selectall(););
    engine\textedit.h:762               TEXTCOMMAND(textclear, "", (), top->clear(););
    engine\textedit.h:763               TEXTCOMMAND(textcurrentline, "",  (), result(top->currentline().text););
    engine\textedit.h:765               TEXTCOMMAND(textexec, "i", (int *selected), // execute script commands from the buffer (0=all, 1=selected region only)




###############################################################################################################################################################################################
###############################################################################################################################################################################################
###############################################################################################################################################################################################
###############################################################################################################################################################################################
###############################################################################################################################################################################################
###############################################################################################################################################################################################
###############################################################################################################################################################################################
###############################################################################################################################################################################################




FVAR
    engine\glare.cpp:50                 FVAR(glaremod, 0.5f, 0.75f, 1);
    engine\grass.cpp:10                 FVAR(grassmarginfade, 0, 0.5f, 1);
    engine\lightning.h:8                FVAR(lnjitterscale, 0, 0.5f, 10);
    engine\lightning.h:10               FVAR(lnscrollscale, 0, 0.125f, 10);
    engine\lightning.h:11               FVAR(lnblendpower, 0, 0.25f, 1000);
    engine\physics.cpp:1585             FVAR(straferoll, 0, 0.033f, 90);
    engine\physics.cpp:1586             FVAR(faderoll, 0, 0.95f, 1);
    engine\ragdoll.h:333                FVAR(ragdollrotfric, 0, 0.85f, 1);
    engine\ragdoll.h:334                FVAR(ragdollrotfricstop, 0, 0.1f, 1);
    engine\ragdoll.h:437                FVAR(ragdollbodyfric, 0, 0.95f, 1);
    engine\ragdoll.h:438                FVAR(ragdollbodyfricscale, 0, 2, 10);
    engine\ragdoll.h:439                FVAR(ragdollwaterfric, 0, 0.85f, 1);
    engine\ragdoll.h:440                FVAR(ragdollgroundfric, 0, 0.8f, 1);
    engine\ragdoll.h:441                FVAR(ragdollairfric, 0, 0.996f, 1);
    engine\ragdoll.h:442                FVAR(ragdollunstick, 0, 10, 1e3f);
    engine\ragdoll.h:506                FVAR(ragdolleyesmooth, 0, 0.5f, 1);
    engine\rendergl.cpp:742             FVAR(avatardepth, 0, 0.5f, 1);
    engine\rendergl.cpp:776             FVAR(thirdpersondistance, 0, 20, 50);
    engine\rendergl.cpp:777             FVAR(thirdpersonup, -25, 0, 25);
    engine\rendergl.cpp:778             FVAR(thirdpersonside, -25, 0, 25);
    engine\rendergl.cpp:890             FVAR(nearplane, 0.01f, 0.54f, 2.0f);
    engine\rendergl.cpp:928             FVAR(polygonoffsetfactor, -1e4f, -3.0f, 1e4f);
    engine\rendergl.cpp:929             FVAR(polygonoffsetunits, -1e4f, -3.0f, 1e4f);
    engine\rendergl.cpp:930             FVAR(depthoffset, -1e4f, 0.01f, 1e4f);
    fpsgame\render.cpp:364              FVAR(swaystep, 1, 35.0f, 100);
    fpsgame\render.cpp:365              FVAR(swayside, 0, 0.04f, 1);
    fpsgame\render.cpp:366              FVAR(swayup, -1, 0.05f, 1);


FVARFR
    engine\lightmap.cpp:101             FVARFR(sunlightscale, 0, 1, 16, setupsunlight());


FVARNP
    engine\rendergl.cpp:743             FVARNP(aspect, forceaspect, 0, 0, 1e3f);


FVARP
    engine\3dgui.cpp:1267               FVARP(guisens, 1e-3f, 1, 1e3f);
    engine\glare.cpp:51                 FVARP(glarescale, 0, 1, 8);
    engine\grass.cpp:6                  FVARP(grasstaper, 0, 0.2, 1);
    engine\grass.cpp:7                  FVARP(grassstep, 0.5, 3, 8);
    engine\movie.cpp:748                FVARP(movieminquality, 0, 0, 1);
    engine\octaedit.cpp:2766            FVARP(texguiscale, 0.1f, 1.5f, 10.0f);
    engine\rendergl.cpp:767             FVARP(zoomsens, 1e-3f, 1, 1000);
    engine\rendergl.cpp:768             FVARP(zoomaccel, 0, 0, 1000);
    engine\rendergl.cpp:770             FVARP(sensitivity, 1e-3f, 3, 1000);
    engine\rendergl.cpp:771             FVARP(sensitivityscale, 1e-3f, 1, 1000);
    engine\rendergl.cpp:773             FVARP(mouseaccel, 0, 0, 1000);
    engine\rendergl.cpp:1818            FVARP(motionblurscale, 0, 0.5f, 1);
    engine\rendergl.cpp:2175            FVARP(conscale, 1e-3f, 0.33f, 1e3f);
    fpsgame\client.cpp:8                FVARP(minimapalpha, 0, 1, 1);
    fpsgame\fps.cpp:945                 FVARP(gameclockscale, 1e-3f, 0.75f, 1e3f);
    fpsgame\fps.cpp:950                 FVARP(gameclockx, 0, 0.50f, 1);
    fpsgame\fps.cpp:951                 FVARP(gameclocky, 0, 0.03f, 1);
    fpsgame\fps.cpp:987                 FVARP(ammobarcountscale, 0.5, 1.5, 2);
    fpsgame\fps.cpp:988                 FVARP(ammobarx, 0, 0.025f, 1.0f);
    fpsgame\fps.cpp:989                 FVARP(ammobary, 0, 0.5f, 1.0f);
    fpsgame\fps.cpp:990                 FVARP(ammobarscale, 0.1f, 0.5f, 1.0f);
    fpsgame\render.cpp:269              FVARP(statusbarscale, 0, 1, 2);
    fpsgame\scoreboard.cpp:485          FVARP(hudscorescale, 1e-3f, 1.0f, 1e3f);
    fpsgame\scoreboard.cpp:487          FVARP(hudscorex, 0, 0.50f, 1);
    fpsgame\scoreboard.cpp:488          FVARP(hudscorey, 0, 0.03f, 1);
    fpsgame\weapon.cpp:426              FVARP(explodebright, 0, 1, 1);


FVARR
    engine\grass.cpp:64                 FVARR(grassanimscale, 0, 0.03f, 1);
    engine\grass.cpp:79                 FVARR(grassalpha, 0, 1, 1);
    engine\rendersky.cpp:57             FVARR(spinsky, -720, 0, 720);
    engine\rendersky.cpp:61             FVARR(cloudboxalpha, 0, 1, 1);
    engine\rendersky.cpp:62             FVARR(spinclouds, -720, 0, 720);
    engine\rendersky.cpp:64             FVARR(cloudclip, 0, 0.5f, 1);
    engine\rendersky.cpp:66             FVARR(cloudoffsetx, 0, 0, 1);
    engine\rendersky.cpp:67             FVARR(cloudoffsety, 0, 0, 1);
    engine\rendersky.cpp:68             FVARR(cloudscrollx, -16, 0, 16);
    engine\rendersky.cpp:69             FVARR(cloudscrolly, -16, 0, 16);
    engine\rendersky.cpp:70             FVARR(cloudscale, 0.001, 1, 64);
    engine\rendersky.cpp:71             FVARR(spincloudlayer, -720, 0, 720);
    engine\rendersky.cpp:73             FVARR(cloudheight, -1, 0.2f, 1);
    engine\rendersky.cpp:74             FVARR(cloudfade, 0, 0.2f, 1);
    engine\rendersky.cpp:75             FVARR(cloudalpha, 0, 1, 1);
    engine\rendersky.cpp:177            FVARR(fogdomeheight, -1, -0.5f, 1);
    engine\rendersky.cpp:178            FVARR(fogdomemin, 0, 0, 1);
    engine\rendersky.cpp:179            FVARR(fogdomemax, 0, 0, 1);
    engine\rendersky.cpp:181            FVARR(fogdomeclip, 0, 1, 1);
    engine\rendersky.cpp:406            FVARR(atmoplanetsize, 1e-3f, 1, 1e3f);
    engine\rendersky.cpp:407            FVARR(atmoheight, 1e-3f, 1, 1e3f);
    engine\rendersky.cpp:408            FVARR(atmobright, 0, 1, 16);
    engine\rendersky.cpp:415            FVARR(atmosunlightscale, 0, 1, 16);
    engine\rendersky.cpp:422            FVARR(atmosundisksize, 0, 12, 90);
    engine\rendersky.cpp:423            FVARR(atmosundiskcorona, 0, 0.4f, 1);
    engine\rendersky.cpp:424            FVARR(atmosundiskbright, 0, 1, 16);
    engine\rendersky.cpp:425            FVARR(atmohaze, 0, 0.1f, 16);
    engine\rendersky.cpp:426            FVARR(atmodensity, 0, 1, 16);
    engine\rendersky.cpp:427            FVARR(atmoozone, 0, 1, 16);
    engine\rendersky.cpp:428            FVARR(atmoalpha, 0, 1, 1);
    engine\renderva.cpp:1450            FVARR(causticcontrast, 0, 0.6f, 1);

HVAR
    engine\renderva.cpp:672             HVAR(blendbrushcolor, 0, 0x0000C0, 0xFFFFFF);


HVARFR
    engine\grass.cpp:74                 HVARFR(grasscolour, 0, 0xFFFFFF, 0xFFFFFF,
    engine\lightmap.cpp:82              HVARFR(ambient, 1, 0x191919, 0xFFFFFF,
    engine\lightmap.cpp:87              HVARFR(skylight, 0, 0, 0xFFFFFF,
    engine\lightmap.cpp:95              HVARFR(sunlight, 0, 0, 0xFFFFFF,
    engine\material.cpp:571             HVARFR(name##colour, 0, 0x2080C0, 0xFFFFFF, \
    engine\rendergl.cpp:1135            HVARFR(fogcolour, 0, 0x8099B3, 0xFFFFFF,
    engine\rendergl.cpp:1666            HVARFR(minimapcolour, 0, 0, 0xFFFFFF,
    engine\rendersky.cpp:183            HVARFR(fogdomecolour, 0, 0, 0xFFFFFF, { fogdomecolor = bvec((fogdomecolour>>16)&0xFF, (fogdomecolour>>8)&0xFF, fogdomecolour&0xFF); });
    engine\rendersky.cpp:410            HVARFR(atmosunlight, 0, 0, 0xFFFFFF,
    engine\rendersky.cpp:417            HVARFR(atmosundisk, 0, 0, 0xFFFFFF,
    engine\shadowmap.cpp:14             HVARFR(shadowmapambient, 0, 0, 0xFFFFFF,
    engine\water.cpp:270                HVARFR(name##colour, 0, 0x144650, 0xFFFFFF, \
    engine\water.cpp:277                HVARFR(name##fallcolour, 0, 0, 0xFFFFFF, \
    engine\water.cpp:296                HVARFR(name##colour, 0, 0xFF4000, 0xFFFFFF, \


HVARP
    engine\console.cpp:71               HVARP(confilter, 0, 0x7FFFFFF, 0x7FFFFFF);
    engine\console.cpp:72               HVARP(fullconfilter, 0, 0x7FFFFFF, 0x7FFFFFF);
    engine\console.cpp:73               HVARP(miniconfilter, 0, 0, 0x7FFFFFF);
    engine\renderva.cpp:617             HVARP(outlinecolour, 0, 0, 0xFFFFFF);
    fpsgame\fps.cpp:946                 HVARP(gameclockcolour, 0, 0xFFFFFF, 0xFFFFFF);
    fpsgame\fps.cpp:948                 HVARP(gameclocklowcolour, 0, 0xFFC040, 0xFFFFFF);
    fpsgame\scoreboard.cpp:489          HVARP(hudscoreplayercolour, 0, 0x60A0FF, 0xFFFFFF);
    fpsgame\scoreboard.cpp:490          HVARP(hudscoreenemycolour, 0, 0xFF4040, 0xFFFFFF);


HVARR
    engine\rendersky.cpp:56             HVARR(skyboxcolour, 0, 0xFFFFFF, 0xFFFFFF);
    engine\rendersky.cpp:60             HVARR(cloudboxcolour, 0, 0xFFFFFF, 0xFFFFFF);
    engine\rendersky.cpp:77             HVARR(cloudcolour, 0, 0xFFFFFF, 0xFFFFFF);


SVAR
    engine\master.cpp:233               SVAR(mastermotd, "");
    engine\server.cpp:580               SVAR(serverip, "");
    fpsgame\server.cpp:615              SVAR(serverdesc, "");
    fpsgame\server.cpp:616              SVAR(serverpass, "");
    fpsgame\server.cpp:617              SVAR(adminpass, "");
    fpsgame\server.cpp:626              SVAR(servermotd, "");
    fpsgame\server.cpp:1371             SVAR(serverauth, "");


SVARF
    engine\server.cpp:379               SVARF(mastername, server::defaultmaster(), disconnectmaster());
    engine\sound.cpp:165                SVARF(audiodriver, AUDIODRIVER, { shouldinitaudio = true; initwarning("sound configuration", INIT_RESET, CHANGE_SOUND); });


SVARFR
    engine\rendersky.cpp:55             SVARFR(skybox, "", { if(skybox[0]) loadsky(skybox, sky); });
    engine\rendersky.cpp:59             SVARFR(cloudbox, "", { if(cloudbox[0]) loadsky(cloudbox, clouds); });
    engine\rendersky.cpp:65             SVARFR(cloudlayer, "", { if(cloudlayer[0]) cloudoverlay = loadskyoverlay(cloudlayer); });


SVARP
    engine\client.cpp:73                SVARP(connectname, "");
    engine\texture.cpp:3572             SVARP(screenshotdir, "screenshot");
    fpsgame\render.cpp:403              SVARP(hudgunsdir, "");
    fpsgame\server.cpp:1188             SVARP(demodir, "demo");


SVARR
    engine\world.cpp:8                  SVARR(maptitle, "Untitled Map by Unknown");


VAR
    engine\blend.cpp:678                VAR(paintblendmapdelay, 1, 500, 3000);
    engine\blend.cpp:679                VAR(paintblendmapinterval, 1, 30, 3000);
    engine\blob.cpp:12                  VAR(dbgblob, 0, 0, 1);
    engine\command.cpp:261              VAR(dbgalias, 0, 4, 1000);
    engine\console.cpp:50               VAR(fullconsole, 0, 0, 1);
    engine\cubeloader.cpp:3             VAR(importcuberemip, 0, 1024, 2048);
    engine\decal.cpp:29                 VAR(dbgdec, 0, 0, 1);
    engine\depthfx.h:6                  VAR(depthfxmargin, 0, 16, 64);
    engine\depthfx.h:7                  VAR(depthfxbias, 0, 1, 64);
    engine\depthfx.h:17                 VAR(depthfxscissor, 0, 2, 2);
    engine\depthfx.h:18                 VAR(debugdepthfx, 0, 0, 1);
    engine\glare.cpp:25                 VAR(debugglare, 0, 0, 1);
    engine\grass.cpp:4                  VAR(dbggrass, 0, 0, 1);
    engine\lensflare.h:31               VAR(flarelights, 0, 0, 1);
    engine\lightmap.cpp:444             VAR(lightcompress, 0, 3, 6);
    engine\lightmap.cpp:707             VAR(edgetolerance, 1, 4, 64);
    engine\lightmap.cpp:708             VAR(adaptivesample, 0, 2, 2);
    engine\lightmap.cpp:2182            VAR(patchnormals, 0, 0, 1);
    engine\lightning.h:6                VAR(lnjittermillis, 0, 100, 1000);
    engine\lightning.h:7                VAR(lnjitterradius, 0, 4, 100);
    engine\lightning.h:9                VAR(lnscrollmillis, 1, 300, 5000);
    engine\main.cpp:91                  VAR(desktopw, 1, 0, 0);
    engine\main.cpp:92                  VAR(desktoph, 1, 0, 0);
    engine\main.cpp:322                 VAR(progressbackground, 0, 0, 1);
    engine\main.cpp:434                 VAR(textinputfilter, 0, 5, 1000);
    engine\main.cpp:470                 VAR(sdl_xgrab_bug, 0, 0, 1);
    engine\main.cpp:1171                VAR(numcpus, 1, 1, 16);
    engine\menus.cpp:13                 VAR(guitabnum, 1, 0, 0);
    engine\menus.cpp:763                VAR(mainmenu, 1, 1, 0);
    engine\movie.cpp:13                 VAR(dbgmovie, 0, 0, 1);
    engine\movie.cpp:744                VAR(movieaccelblit, 0, 0, 1);
    engine\movie.cpp:745                VAR(movieaccelyuv, 0, 1, 1);
    engine\octa.cpp:459                 VAR(mipvis, 0, 0, 1);
    engine\octa.cpp:1396                VAR(maxmerge, 0, 6, 12);
    engine\octa.cpp:1397                VAR(minface, 0, 4, 12);
    engine\octaedit.cpp:135             VAR(passthroughsel, 0, 0, 1);
    engine\octaedit.cpp:136             VAR(editing, 1, 0, 0);
    engine\octaedit.cpp:137             VAR(selectcorners, 0, 0, 1);
    engine\octaedit.cpp:352             VAR(gridlookup, 0, 0, 1);
    engine\octaedit.cpp:353             VAR(passthroughcube, 0, 1, 1);
    engine\octaedit.cpp:354             VAR(passthroughent, 0, 1, 1);
    engine\octaedit.cpp:1574            VAR(brushx, 0, MAXBRUSH2, MAXBRUSH);
    engine\octaedit.cpp:1575            VAR(brushy, 0, MAXBRUSH2, MAXBRUSH);
    engine\octaedit.cpp:1957            VAR(invalidcubeguard, 0, 1, 1);
    engine\octaedit.cpp:2047            VAR(selectionsurf, 0, 0, 1);
    engine\octaedit.cpp:2099            VAR(usevdelta, 1, 0, 0);
    engine\octaedit.cpp:2169            VAR(allfaces, 0, 0, 1);
    engine\octaedit.cpp:2773            VAR(texguinum, 1, -1, 0);
    engine\octarender.cpp:12            VAR(printvbo, 0, 0, 1);
    engine\physics.cpp:1587             VAR(floatspeed, 1, 100, 10000);
    engine\physics.cpp:1762             VAR(physinterp, 0, 1, 1);
    engine\pvs.cpp:276                  VAR(maxpvsblocker, 1, 512, 1<<16);
    engine\pvs.cpp:277                  VAR(pvsleafsize, 1, 64, 1024);
    engine\ragdoll.h:331                VAR(ragdolltimestepmin, 1, 5, 50);
    engine\ragdoll.h:332                VAR(ragdolltimestepmax, 1, 10, 50);
    engine\ragdoll.h:422                VAR(ragdollconstrain, 1, 5, 100);
    engine\ragdoll.h:443                VAR(ragdollexpireoffset, 0, 1500, 30000);
    engine\ragdoll.h:444                VAR(ragdollwaterexpireoffset, 0, 3000, 30000);
    engine\ragdoll.h:507                VAR(ragdolleyesmoothmillis, 1, 250, 10000);
    engine\rendergl.cpp:7               VAR(glversion, 1, 0, 0);
    engine\rendergl.cpp:8               VAR(glslversion, 1, 0, 0);
    engine\rendergl.cpp:9               VAR(glcompat, 1, 0, 0);
    engine\rendergl.cpp:174             VAR(ati_minmax_bug, 0, 0, 1);
    engine\rendergl.cpp:175             VAR(ati_cubemap_bug, 0, 0, 1);
    engine\rendergl.cpp:176             VAR(intel_vertexarray_bug, 0, 0, 1);
    engine\rendergl.cpp:177             VAR(intel_mapbufferrange_bug, 0, 0, 1);
    engine\rendergl.cpp:178             VAR(mesa_swap_bug, 0, 0, 1);
    engine\rendergl.cpp:179             VAR(minimizetcusage, 1, 0, 0);
    engine\rendergl.cpp:180             VAR(useubo, 1, 0, 0);
    engine\rendergl.cpp:181             VAR(usetexcompress, 1, 0, 0);
    engine\rendergl.cpp:182             VAR(rtscissor, 0, 1, 1);
    engine\rendergl.cpp:183             VAR(blurtile, 0, 1, 1);
    engine\rendergl.cpp:184             VAR(rtsharefb, 0, 1, 1);
    engine\rendergl.cpp:186             VAR(dbgexts, 0, 0, 1);
    engine\rendergl.cpp:619             VAR(wireframe, 0, 0, 1);
    engine\rendergl.cpp:740             VAR(avatarzoomfov, 10, 25, 60);
    engine\rendergl.cpp:741             VAR(avatarfov, 10, 65, 150);
    engine\rendergl.cpp:746             VAR(zoom, -1, 0, 1);
    engine\rendergl.cpp:775             VAR(thirdperson, 0, 0, 2);
    engine\rendergl.cpp:908             VAR(reflectclip, 0, 6, 64);
    engine\rendergl.cpp:909             VAR(reflectclipavatar, -64, 0, 64);
    engine\rendergl.cpp:1570            VAR(modelpreviewfov, 10, 20, 100);
    engine\rendergl.cpp:1571            VAR(modelpreviewpitch, -90, -15, 90);
    engine\rendergl.cpp:2075            VAR(hidestats, 0, 0, 1);
    engine\rendergl.cpp:2076            VAR(hidehud, 0, 0, 1);
    engine\rendergl.cpp:2172            VAR(showeditstats, 0, 0, 1);
    engine\rendergl.cpp:2173            VAR(statrate, 1, 200, 1000);
    engine\rendermodel.cpp:3            VAR(oqdynent, 0, 1, 1);
    engine\rendermodel.cpp:4            VAR(animationinterpolationtime, 0, 150, 1000);
    engine\rendermodel.cpp:487          VAR(showboundingbox, 0, 0, 2);
    engine\rendermodel.cpp:734          VAR(maxmodelradiusdistance, 10, 200, 1000);
    engine\rendermodel.cpp:1054         VAR(animoverride, -1, 0, NUMANIMS-1);
    engine\rendermodel.cpp:1055         VAR(testanims, 0, 0, 1);
    engine\rendermodel.cpp:1056         VAR(testpitch, -90, 0, 90);
    engine\renderparticles.cpp:23       VAR(cullparticles, 0, 1, 1);
    engine\renderparticles.cpp:24       VAR(replayparticles, 0, 1, 1);
    engine\renderparticles.cpp:26       VAR(dbgpcull, 0, 0, 1);
    engine\renderparticles.cpp:27       VAR(dbgpseed, 0, 0, 1);
    engine\rendersky.cpp:565            VAR(showsky, 0, 1, 1);
    engine\rendersky.cpp:566            VAR(clipsky, 0, 1, 1);
    engine\rendersky.cpp:600            VAR(clampsky, 0, 1, 1);
    engine\renderva.cpp:291             VAR(oqfrags, 0, 8, 64);
    engine\renderva.cpp:292             VAR(oqwait, 0, 1, 1);
    engine\renderva.cpp:459             VAR(oqmm, 0, 4, 8);
    engine\renderva.cpp:616             VAR(outline, 0, 0, 1);
    engine\renderva.cpp:618             VAR(dtoutline, 0, 1, 1);
    engine\renderva.cpp:672             HVAR(blendbrushcolor, 0, 0x0000C0, 0xFFFFFF);
    engine\renderva.cpp:831             VAR(oqdist, 0, 256, 1024);
    engine\renderva.cpp:832             VAR(zpass, 0, 1, 1);
    engine\renderva.cpp:833             VAR(envpass, 0, 1, 1);
    engine\renderva.cpp:1366            VAR(batchgeom, 0, 1, 1);
    engine\renderva.cpp:1516            VAR(oqgeom, 0, 1, 1);
    engine\server.cpp:579               VAR(serveruprate, 0, 0, INT_MAX);
    engine\shader.cpp:16                VAR(reservevpparams, 1, 16, 0);
    engine\shader.cpp:17                VAR(maxvsuniforms, 1, 0, 0);
    engine\shader.cpp:18                VAR(maxfsuniforms, 1, 0, 0);
    engine\shader.cpp:19                VAR(maxvaryings, 1, 0, 0);
    engine\shader.cpp:20                VAR(dbgshader, 0, 0, 2);
    engine\shader.cpp:158               VAR(dbgubo, 0, 0, 1);
    engine\shader.cpp:988               VAR(defershaders, 0, 1, 1);
    engine\shadowmap.cpp:9              VAR(shadowmapheight, 0, 32, 128);
    engine\shadowmap.cpp:27             VAR(shadowmapcasters, 1, 0, 0);
    engine\shadowmap.cpp:88             VAR(smdepthpeel, 0, 1, 1);
    engine\shadowmap.cpp:89             VAR(smoothshadowmappeel, 1, 0, 0);
    engine\shadowmap.cpp:322            VAR(debugsm, 0, 0, 1);
    engine\skelmodel.h:3                VAR(maxskelanimdata, 1, 192, 0);
    engine\skelmodel.h:4                VAR(testtags, 0, 0, 1);
    engine\sound.cpp:640                VAR(stereo, 0, 1, 1);
    engine\sound.cpp:718                VAR(dbgsound, 0, 0, 1);
    engine\texture.cpp:606              VAR(hwtexsize, 1, 0, 0);
    engine\texture.cpp:607              VAR(hwcubetexsize, 1, 0, 0);
    engine\texture.cpp:608              VAR(hwmaxaniso, 1, 0, 0);
    engine\texture.cpp:1379             VAR(usedds, 0, 1, 1);
    engine\texture.cpp:1380             VAR(dbgdds, 0, 0, 1);
    engine\texture.cpp:1381             VAR(scaledds, 0, 2, 4);
    engine\texture.cpp:2702             VAR(aaenvmap, 0, 2, 4);
    engine\water.cpp:329                VAR(oqwater, 0, 2, 2);
    engine\water.cpp:824                VAR(maskreflect, 0, 2, 16);
    engine\water.cpp:865                VAR(reflectscissor, 0, 1, 1);
    engine\water.cpp:866                VAR(reflectvfc, 0, 1, 1);
    engine\world.cpp:10                 VAR(octaentsize, 0, 64, 1024);
    engine\world.cpp:11                 VAR(entselradius, 0, 2, 10);
    engine\world.cpp:343                VAR(attachradius, 1, 100, 1000);
    engine\world.cpp:507                VAR(entselsnap, 0, 0, 1);
    engine\world.cpp:508                VAR(entmovingshadow, 0, 1, 1);
    engine\world.cpp:547                VAR(showentradius, 0, 1, 1);
    engine\world.cpp:774                VAR(entitysurf, 0, 0, 1);
    engine\world.cpp:823                VAR(entautoviewdist, 0, 25, 100);
    engine\world.cpp:861                VAR(entdrop, 0, 2, 3);
    engine\worldio.cpp:739              VAR(dbgvars, 0, 0, 1);
    fpsgame\ai.cpp:13                   VAR(aidebug, 0, 0, 6);
    fpsgame\ai.cpp:14                   VAR(aiforcegun, -1, -1, NUMGUNS-1);
    fpsgame\ai.cpp:1363                 VAR(showwaypoints, 0, 0, 1);
    fpsgame\ai.cpp:1364                 VAR(showwaypointsradius, 0, 200, 10000);
    fpsgame\aiman.h:6                   VAR(serverbotbalance, 0, 1, 1);
    fpsgame\ctf.h:7                     VAR(ctftkpenalty, 0, 1, 1);
    fpsgame\entities.cpp:509            VAR(triggerstate, -1, 0, 1);
    fpsgame\extinfo.h:32                VAR(extinfoip, 0, 0, 1);
    fpsgame\monster.cpp:33              VAR(skill, 1, 3, 10);
    fpsgame\monster.cpp:34              VAR(killsendsp, 0, 1, 1);
    fpsgame\render.cpp:127              VAR(testquad, 0, 0, 1);
    fpsgame\render.cpp:128              VAR(testarmour, 0, 0, 1);
    fpsgame\render.cpp:129              VAR(testteam, 0, 0, 3);
    fpsgame\render.cpp:225              VAR(dbgspawns, 0, 0, 1);
    fpsgame\render.cpp:362              VAR(testhudgun, 0, 0, 1);
    fpsgame\server.cpp:18               VAR(regenbluearmour, 0, 1, 1);
    fpsgame\server.cpp:454              VAR(lockmaprotation, 0, 0, 2);
    fpsgame\server.cpp:607              VAR(maxdemos, 0, 5, 25);
    fpsgame\server.cpp:608              VAR(maxdemosize, 0, 16, 31);
    fpsgame\server.cpp:609              VAR(restrictdemos, 0, 1, 1);
    fpsgame\server.cpp:612              VAR(restrictpausegame, 0, 1, 1);
    fpsgame\server.cpp:613              VAR(restrictgamespeed, 0, 1, 1);
    fpsgame\server.cpp:956              VAR(persistteams, 0, 0, 1);
    fpsgame\server.cpp:2202             VAR(overtime, 0, 0, 1);
    fpsgame\server.cpp:2555             VAR(modifiedmapspectator, 0, 1, 2);
    shared\stream.cpp:756               VAR(dbggz, 0, 0, 1);
    shared\zip.cpp:113                  VAR(dbgzip, 0, 0, 1);


VARF
    engine\blend.cpp:357                VARF(blendpaintmode, 0, 0, 5,
    engine\client.cpp:22                VARF(rate, 0, 0, 1024, setrate(rate));
    engine\client.cpp:26                VARF(throttle_interval, 0, 5, 30, throttle());
    engine\client.cpp:27                VARF(throttle_accel,    0, 2, 32, throttle());
    engine\client.cpp:28                VARF(throttle_decel,    0, 2, 32, throttle());
    engine\lightmap.cpp:1039            VARF(lightcachesize, 4, 6, 12, clearlightcache());
    engine\lightmap.cpp:2262            VARF(fullbright, 0, 0, 1, if(lightmaptexs.length()) { initlights(); lightents(); });
    engine\lightmap.cpp:2263            VARF(fullbrightlevel, 0, 128, 255, setfullbrightlevel(fullbrightlevel));
    engine\lightmap.cpp:2446            VARF(roundlightmaptex, 0, 4, 16, { cleanuplightmaps(); initlights(); allchanged(); });
    engine\lightmap.cpp:2447            VARF(batchlightmaps, 0, 4, 256, { cleanuplightmaps(); initlights(); allchanged(); });
    engine\main.cpp:103                 VARF(scr_w, SCR_MINW, -1, SCR_MAXW, initwarning("screen resolution"));
    engine\main.cpp:104                 VARF(scr_h, SCR_MINH, -1, SCR_MAXH, initwarning("screen resolution"));
    engine\main.cpp:105                 VARF(depthbits, 0, 0, 32, initwarning("depth-buffer precision"));
    engine\main.cpp:106                 VARF(fsaa, -1, -1, 16, initwarning("anti-aliasing"));
    engine\main.cpp:548                 VARF(fullscreen, 0, 0, 1, setfullscreen(fullscreen!=0));
    engine\main.cpp:550                 VARF(fullscreen, 0, 1, 1, setfullscreen(fullscreen!=0));
    engine\main.cpp:559                 VARF(fullscreendesktop, 0, 0, 1, if(fullscreen) resetfullscreen());
    engine\material.cpp:311             VARF(optmats, 0, 1, 1, allchanged());
    engine\octaedit.cpp:108             VARF(dragging, 0, 0, 1,
    engine\octaedit.cpp:127             VARF(gridpower, 0, 3, 12,
    engine\octaedit.cpp:138             VARF(hmapedit, 0, 0, 1, horient = sel.orient);
    engine\octaedit.cpp:355             VARF(passthrough, 0, 0, 1, { passthroughsel = passthrough; entcancel(); });
    engine\octarender.cpp:1592          VARF(vafacemax, 64, 384, 256*256, allchanged());
    engine\octarender.cpp:1593          VARF(vafacemin, 0, 96, 256*256, allchanged());
    engine\octarender.cpp:1594          VARF(vacubesize, 32, 128, 0x1000, allchanged());
    engine\physics.cpp:592              VARF(dynentsize, 4, 7, 12, cleardynentcache());
    engine\pvs.cpp:985                  VARF(lockpvs, 0, 0, 1, lockpvs_(lockpvs!=0));
    engine\server.cpp:166               VARF(maxclients, 0, DEFAULTCLIENTS, MAXCLIENTS, { if(!maxclients) maxclients = DEFAULTCLIENTS; });
    engine\server.cpp:167               VARF(maxdupclients, 0, 0, MAXCLIENTS, { if(serverhost) serverhost->duplicatePeers = maxdupclients ? maxdupclients : MAXCLIENTS; });
    engine\server.cpp:379               SVARF(mastername, server::defaultmaster(), disconnectmaster());
    engine\server.cpp:380               VARF(masterport, 1, server::masterport(), 0xFFFF, disconnectmaster());
    engine\server.cpp:581               VARF(serverport, 0, server::serverport(), 0xFFFF-1, { if(!serverport) serverport = server::serverport(); });
    engine\sound.cpp:165                SVARF(audiodriver, AUDIODRIVER, { shouldinitaudio = true; initwarning("sound configuration", INIT_RESET, CHANGE_SOUND); });
    engine\sound.cpp:166                VARF(usesound, 0, 1, 1, { shouldinitaudio = true; initwarning("sound configuration", INIT_RESET, CHANGE_SOUND); });
    engine\sound.cpp:167                VARF(soundchans, 1, 32, 128, initwarning("sound configuration", INIT_RESET, CHANGE_SOUND));
    engine\sound.cpp:168                VARF(soundfreq, 0, MIX_DEFAULT_FREQUENCY, 48000, initwarning("sound configuration", INIT_RESET, CHANGE_SOUND));
    engine\sound.cpp:169                VARF(soundbufferlen, 128, 1024, 4096, initwarning("sound configuration", INIT_RESET, CHANGE_SOUND));
    engine\world.cpp:275                VARF(entediting, 0, 0, 1, { if(!entediting) { entcancel(); efocus = enthover = -1; } });
    fpsgame\server.cpp:610              VARF(autorecorddemo, 0, 0, 1, demonextmatch = autorecorddemo!=0);
    fpsgame\server.cpp:618              VARF(publicserver, 0, 0, 2, {
    fpsgame\waypoint.cpp:509            VARF(dropwaypoints, 0, 0, 1, { player1->lastnode = -1; });


VARFN
    engine\octarender.cpp:13            VARFN(vbosize, maxvbosize, 0, 1<<14, 1<<16, allchanged());
    fpsgame\scoreboard.cpp:475          VARFN(scoreboard, showscoreboard, 0, 0, 1, scoreboard.show(showscoreboard!=0));


VARFNP
    engine\main.cpp:599                 VARFNP(gamma, reqgamma, 30, 100, 300,


VARFP
    engine\animmodel.h:1                VARFP(envmapmodels, 0, 1, 1, preloadmodelshaders(true));
    engine\animmodel.h:2                VARFP(bumpmodels, 0, 1, 1, preloadmodelshaders(true));
    engine\blob.cpp:6                   VARFP(blobintensity, 0, 60, 100, resetblobs());
    engine\blob.cpp:7                   VARFP(blobheight, 1, 32, 128, resetblobs());
    engine\blob.cpp:8                   VARFP(blobfadelow, 1, 8, 32, resetblobs());
    engine\blob.cpp:9                   VARFP(blobfadehigh, 1, 8, 32, resetblobs());
    engine\blob.cpp:10                  VARFP(blobmargin, 0, 1, 16, resetblobs());
    engine\blob.cpp:689                 VARFP(blobstattris, 128, 4096, 16384, initblobs(BLOB_STATIC));
    engine\blob.cpp:690                 VARFP(blobdyntris, 128, 4096, 16384, initblobs(BLOB_DYNAMIC));
    engine\console.cpp:15               VARFP(maxcon, 10, 200, MAXCONLINES, { while(conlines.length() > maxcon) delete[] conlines.pop().line; });
    engine\decal.cpp:27                 VARFP(maxdecaltris, 1, 1024, 16384, initdecals());
    engine\depthfx.h:10                 VARFP(fpdepthfx, 0, 0, 1, cleanupdepthfx());
    engine\depthfx.h:12                 VARFP(depthfxsize, 6, 7, 12, cleanupdepthfx());
    engine\glare.cpp:19                 VARFP(glaresize, 6, 8, 10, cleanupglare());
    engine\main.cpp:627                 VARFP(vsync, 0, 0, 1, restorevsync());
    engine\main.cpp:628                 VARFP(vsynctear, 0, 0, 1, { if(vsync) restorevsync(); });
    engine\main.cpp:1160                VARFP(clockerror, 990000, 1000000, 1010000, clockreset());
    engine\main.cpp:1161                VARFP(clockfix, 0, 0, 1, clockreset());
    engine\material.cpp:611             VARFP(waterfallenv, 0, 1, 1, preloadwatershaders());
    engine\octarender.cpp:547           VARFP(filltjoints, 0, 1, 1, allchanged());
    engine\rendergl.cpp:1671            VARFP(minimapsize, 7, 8, 10, { if(minimaptex) drawminimap(); });
    engine\rendergl.cpp:1816            VARFP(motionblur, 0, 0, 1, { if(!motionblur) cleanupmotionblur(); });
    engine\rendergl.cpp:2036            VARFP(damagescreen, 0, 1, 1, { if(!damagescreen) damageblendmillis = 0; });
    engine\renderparticles.cpp:961      VARFP(maxparticles, 10, 4000, 40000, initparticles());
    engine\renderparticles.cpp:962      VARFP(fewparticles, 10, 100, 40000, initparticles());
    engine\renderva.cpp:1451            VARFP(caustics, 0, 1, 1, loadcaustics());
    engine\shader.cpp:1046              VARFP(shaderdetail, 0, MAXSHADERDETAIL, MAXSHADERDETAIL, fixshaderdetail());
    engine\shadowmap.cpp:7              VARFP(shadowmapsize, 7, 9, 11, cleanshadowmap());
    engine\shadowmap.cpp:11             VARFP(fpshadowmap, 0, 0, 1, cleanshadowmap());
    engine\shadowmap.cpp:12             VARFP(shadowmapprecision, 0, 0, 1, cleanshadowmap());
    engine\sound.cpp:124                VARFP(soundvol, 0, 255, 255,
    engine\sound.cpp:130                VARFP(musicvol, 0, 128, 255, setmusicvol(soundvol ? musicvol : 0));
    engine\sound.cpp:419                VARFP(fixwav, 0, 1, 1, initwarning("sound configuration", INIT_LOAD, CHANGE_SOUND));
    engine\sound.cpp:923                VARFP(mumble, 0, 1, 1, { if(mumble) initmumble(); else closemumble(); });
    engine\sound.cpp:925                VARFP(mumble, 0, 0, 1, { if(mumble) initmumble(); else closemumble(); });
    engine\texture.cpp:609              VARFP(maxtexsize, 0, 0, 1<<12, initwarning("texture quality", INIT_LOAD));
    engine\texture.cpp:610              VARFP(reducefilter, 0, 1, 1, initwarning("texture quality", INIT_LOAD));
    engine\texture.cpp:611              VARFP(texreduce, 0, 0, 12, initwarning("texture quality", INIT_LOAD));
    engine\texture.cpp:612              VARFP(texcompress, 0, 1<<10, 1<<12, initwarning("texture quality", INIT_LOAD));
    engine\texture.cpp:613              VARFP(texcompressquality, -1, -1, 1, setuptexcompress());
    engine\texture.cpp:614              VARFP(trilinear, 0, 1, 1, initwarning("texture filtering", INIT_LOAD));
    engine\texture.cpp:615              VARFP(bilinear, 0, 1, 1, initwarning("texture filtering", INIT_LOAD));
    engine\texture.cpp:616              VARFP(aniso, 0, 0, 16, initwarning("texture filtering", INIT_LOAD));
    engine\texture.cpp:699              VARFP(usenp2, 0, 0, 1, initwarning("texture quality", INIT_LOAD));
    engine\texture.cpp:739              VARFP(gpumipmap, 0, 0, 1, cleanupmipmaps());
    engine\texture.cpp:2537             VARFP(envmapsize, 4, 7, 10, setupmaterials());
    engine\water.cpp:3                  VARFP(waterreflect, 0, 1, 1, { cleanreflections(); preloadwatershaders(); });
    engine\water.cpp:4                  VARFP(waterrefract, 0, 1, 1, { cleanreflections(); preloadwatershaders(); });
    engine\water.cpp:5                  VARFP(waterenvmap, 0, 1, 1, { cleanreflections(); preloadwatershaders(); });
    engine\water.cpp:6                  VARFP(waterfallrefract, 0, 0, 1, { cleanreflections(); preloadwatershaders(); });
    engine\water.cpp:219                VARFP(vertwater, 0, 1, 1, allchanged());
    engine\water.cpp:330                VARFP(waterfade, 0, 1, 1, { cleanreflections(); preloadwatershaders(); });
    engine\water.cpp:566                VARFP(reflectsize, 6, 8, 11, cleanreflections());
    fpsgame\fps.cpp:225                 VARFP(slowmosp, 0, 0, 1, { if(m_sp && !slowmosp) server::forcegamespeed(100); });
    fpsgame\render.cpp:14               VARFP(playermodel, 0, 0, 4, changedplayermodel());


VARFR
    engine\lightmap.cpp:104             VARFR(sunlightyaw, 0, 0, 360, setsunlightdir());
    engine\lightmap.cpp:105             VARFR(sunlightpitch, -90, 90, 90, setsunlightdir());
    engine\rendersky.cpp:405            VARFR(atmo, 0, 0, 1, preloadatmoshaders());
    engine\shadowmap.cpp:36             VARFR(shadowmapangle, 0, 0, 360, setshadowdir(shadowmapangle));


VARN
    engine\command.cpp:18               VARN(numargs, _numargs, MAXARGS, 0, 0);
    engine\lightmap.cpp:227             VARN(lmshadows, lmshadows_, 0, 2, 2);
    engine\lightmap.cpp:228             VARN(lmaa, lmaa_, 0, 3, 3);
    engine\lightmap.cpp:229             VARN(lerptjoints, lerptjoints_, 0, 1, 1);
    engine\main.cpp:462                 VARN(relativemouse, userelativemouse, 1, 1, 0);
    engine\pvs.cpp:987                  VARN(pvs, usepvs, 0, 1, 1);
    engine\pvs.cpp:988                  VARN(waterpvs, usewaterpvs, 0, 1, 1);
    engine\renderparticles.cpp:25       VARN(seedparticles, seedmillis, 0, 3000, 10000);
    engine\renderparticles.cpp:989      VARN(debugparticles, dbgparts, 0, 0, 1);
    engine\server.cpp:358               VARN(updatemaster, allowupdatemaster, 0, 1, 1);
    fpsgame\aiman.h:5                   VARN(serverbotlimit, botlimit, 0, 8, MAXBOTS);


VARNP
    engine\3dgui.cpp:1278               VARNP(guifollow, useguifollow, 0, 1, 1);
    engine\3dgui.cpp:1279               VARNP(gui2d, usegui2d, 0, 1, 1);
    engine\blob.cpp:5                   VARNP(blobs, showblobs, 0, 1, 1);
    engine\decal.cpp:608                VARNP(decals, showdecals, 0, 1, 1);
    engine\main.cpp:464                 VARNP(relativemouse, userelativemouse, 0, 1, 1);
    engine\rendergl.cpp:1969            VARNP(damagecompass, usedamagecompass, 0, 1, 1);


VARNR
    engine\rendersky.cpp:772            VARNR(skytexture, useskytexture, 0, 1, 1);
    engine\world.cpp:6                  VARNR(mapscale, worldscale, 1, 0, 0);
    engine\world.cpp:7                  VARNR(mapsize, worldsize, 1, 0, 0);


VARP
    engine\3dgui.cpp:32                 VARP(guiautotab, 6, 16, 40);
    engine\3dgui.cpp:33                 VARP(guiclicktab, 0, 0, 1);
    engine\3dgui.cpp:34                 VARP(guifadein, 0, 1, 1);
    engine\3dgui.cpp:35                 VARP(guipreviewtime, 0, 15, 1000);
    engine\3dgui.cpp:1163               VARP(guipushdist, 1, 4, 64);
    engine\animmodel.h:3                VARP(fullbrightmodels, 0, 0, 200);
    engine\client.cpp:74                VARP(connectport, 0, 0, 0xFFFF);
    engine\console.cpp:19               VARP(contags, 0, 3, 3);
    engine\console.cpp:65               VARP(consize, 0, 5, 100);
    engine\console.cpp:66               VARP(miniconsize, 0, 5, 100);
    engine\console.cpp:67               VARP(miniconwidth, 0, 40, 100);
    engine\console.cpp:68               VARP(confade, 0, 30, 60);
    engine\console.cpp:69               VARP(miniconfade, 0, 30, 60);
    engine\console.cpp:70               VARP(fullconsize, 0, 75, 100);
    engine\console.cpp:344              VARP(maxhistory, 0, 1000, 10000);
    engine\decal.cpp:28                 VARP(decalfade, 1000, 10000, 60000);
    engine\decal.cpp:634                VARP(maxdecaldistance, 1, 512, 10000);
    engine\depthfx.h:2                  VARP(depthfxfpscale, 1, 1<<12, 1<<16);
    engine\depthfx.h:3                  VARP(depthfxscale, 1, 1<<6, 1<<8);
    engine\depthfx.h:4                  VARP(depthfxblend, 1, 16, 64);
    engine\depthfx.h:5                  VARP(depthfxpartblend, 1, 8, 64);
    engine\depthfx.h:11                 VARP(depthfxemuprecision, 0, 1, 1);
    engine\depthfx.h:13                 VARP(depthfx, 0, 1, 1);
    engine\depthfx.h:14                 VARP(depthfxparts, 0, 1, 1);
    engine\depthfx.h:15                 VARP(blurdepthfx, 0, 1, 7);
    engine\depthfx.h:16                 VARP(blurdepthfxsigma, 1, 50, 200);
    engine\dynlight.cpp:3               VARP(maxdynlights, 0, min(3, MAXDYNLIGHTS), MAXDYNLIGHTS);
    engine\dynlight.cpp:4               VARP(dynlightdist, 0, 1024, 10000);
    engine\glare.cpp:20                 VARP(glare, 0, 0, 1);
    engine\glare.cpp:21                 VARP(blurglare, 0, 4, 7);
    engine\glare.cpp:22                 VARP(blurglareaspect, 0, 1, 1);
    engine\glare.cpp:23                 VARP(blurglaresigma, 1, 50, 200);
    engine\grass.cpp:3                  VARP(grass, 0, 0, 1);
    engine\grass.cpp:5                  VARP(grassdist, 0, 256, 10000);
    engine\grass.cpp:8                  VARP(grassheight, 1, 4, 64);
    engine\grass.cpp:9                  VARP(grassmargin, 0, 8, 32);
    engine\lensflare.h:32               VARP(flarecutoff, 0, 1000, 10000);
    engine\lensflare.h:33               VARP(flaresize, 20, 100, 500);
    engine\lightmap.cpp:2059            VARP(lightthreads, 0, 0, 16);
    engine\main.cpp:1040                VARP(menufps, 0, 60, 1000);
    engine\main.cpp:1041                VARP(maxfps, 0, 200, 1000);
    engine\material.cpp:464             VARP(showmat, 0, 1, 1);
    engine\material.cpp:585             VARP(glassenv, 0, 1, 1);
    engine\menus.cpp:117                VARP(menudistance,  16, 40,  256);
    engine\menus.cpp:118                VARP(menuautoclose, 32, 120, 4096);
    engine\menus.cpp:722                VARP(applydialog, 0, 1, 1);
    engine\movie.cpp:746                VARP(movieaccel, 0, 1, 1);
    engine\movie.cpp:747                VARP(moviesync, 0, 0, 1);
    engine\movie.cpp:1144               VARP(moview, 0, 320, 10000);
    engine\movie.cpp:1145               VARP(movieh, 0, 240, 10000);
    engine\movie.cpp:1146               VARP(moviefps, 1, 24, 1000);
    engine\movie.cpp:1147               VARP(moviesound, 0, 1, 1);
    engine\octaedit.cpp:187             VARP(editinview, 0, 1, 1);
    engine\octaedit.cpp:738             VARP(undomegs, 0, 8, 100);
    engine\octaedit.cpp:787             VARP(nompedit, 0, 1, 1);
    engine\octaedit.cpp:2764            VARP(texguiwidth, 1, 15, 1000);
    engine\octaedit.cpp:2765            VARP(texguiheight, 1, 8, 1000);
    engine\octaedit.cpp:2767            VARP(texguitime, 0, 15, 1000);
    engine\octaedit.cpp:2768            VARP(texguiname, 0, 1, 1);
    engine\octaedit.cpp:2772            VARP(texgui2d, 0, 1, 1);
    engine\physics.cpp:1584             VARP(maxroll, 0, 0, 20);
    engine\pvs.cpp:835                  VARP(pvsthreads, 0, 0, 16);
    engine\rendergl.cpp:173             VARP(ati_skybox_bug, 0, 0, 1);
    engine\rendergl.cpp:736             VARP(zoominvel, 0, 250, 5000);
    engine\rendergl.cpp:737             VARP(zoomoutvel, 0, 100, 5000);
    engine\rendergl.cpp:738             VARP(zoomfov, 10, 35, 60);
    engine\rendergl.cpp:739             VARP(fov, 10, 100, 150);
    engine\rendergl.cpp:769             VARP(zoomautosens, 0, 1, 1);
    engine\rendergl.cpp:772             VARP(invmouse, 0, 0, 1);
    engine\rendergl.cpp:1333            VARP(skyboxglare, 0, 1, 1);
    engine\rendergl.cpp:1364            VARP(reflectmms, 0, 1, 1);
    engine\rendergl.cpp:1817            VARP(motionblurmillis, 1, 5, 1000);
    engine\rendergl.cpp:1970            VARP(damagecompassfade, 1, 1000, 10000);
    engine\rendergl.cpp:1971            VARP(damagecompasssize, 1, 30, 100);
    engine\rendergl.cpp:1972            VARP(damagecompassalpha, 1, 25, 100);
    engine\rendergl.cpp:1973            VARP(damagecompassmin, 1, 25, 1000);
    engine\rendergl.cpp:1974            VARP(damagecompassmax, 1, 200, 1000);
    engine\rendergl.cpp:2037            VARP(damagescreenfactor, 1, 7, 100);
    engine\rendergl.cpp:2038            VARP(damagescreenalpha, 1, 45, 100);
    engine\rendergl.cpp:2039            VARP(damagescreenfade, 0, 125, 1000);
    engine\rendergl.cpp:2040            VARP(damagescreenmin, 1, 10, 1000);
    engine\rendergl.cpp:2041            VARP(damagescreenmax, 1, 100, 1000);
    engine\rendergl.cpp:2078            VARP(crosshairsize, 0, 15, 50);
    engine\rendergl.cpp:2079            VARP(cursorsize, 0, 30, 50);
    engine\rendergl.cpp:2080            VARP(crosshairfx, 0, 1, 1);
    engine\rendergl.cpp:2081            VARP(crosshaircolors, 0, 1, 1);
    engine\rendergl.cpp:2164            VARP(wallclock, 0, 0, 1);
    engine\rendergl.cpp:2165            VARP(wallclock24, 0, 0, 1);
    engine\rendergl.cpp:2166            VARP(wallclocksecs, 0, 0, 1);
    engine\rendergl.cpp:2170            VARP(showfps, 0, 1, 1);
    engine\rendergl.cpp:2171            VARP(showfpsrange, 0, 0, 1);
    engine\renderparticles.cpp:8        VARP(particlesize, 20, 100, 500);
    engine\renderparticles.cpp:12       VARP(emitmillis, 1, 17, 1000);
    engine\renderparticles.cpp:22       VARP(showparticles, 0, 1, 1);
    engine\renderparticles.cpp:256      VARP(outlinemeters, 0, 0, 1);
    engine\renderparticles.cpp:987      VARP(particleglare, 0, 2, 100);
    engine\renderparticles.cpp:1098     VARP(maxparticledistance, 256, 1024, 4096);
    engine\renderparticles.cpp:1145     VARP(maxtrail, 1, 500, 10000);
    engine\renderparticles.cpp:1163     VARP(particletext, 0, 1, 1);
    engine\renderparticles.cpp:1164     VARP(maxparticletextdistance, 0, 128, 10000);
    engine\rendersky.cpp:564            VARP(sparklyfix, 0, 0, 1);
    engine\serverbrowser.cpp:401        VARP(searchlan, 0, 0, 1);
    engine\serverbrowser.cpp:402        VARP(servpingrate, 1000, 5000, 60000);
    engine\serverbrowser.cpp:403        VARP(servpingdecay, 1000, 15000, 60000);
    engine\serverbrowser.cpp:404        VARP(maxservpings, 0, 10, 1000);
    engine\serverbrowser.cpp:541        VARP(autosortservers, 0, 1, 1);
    engine\serverbrowser.cpp:542        VARP(autoupdateservers, 0, 1, 1);
    engine\shadowmap.cpp:4              VARP(shadowmap, 0, 0, 1);
    engine\shadowmap.cpp:8              VARP(shadowmapradius, 64, 96, 256);
    engine\shadowmap.cpp:10             VARP(shadowmapdist, 128, 256, 512);
    engine\shadowmap.cpp:19             VARP(shadowmapintensity, 0, 40, 100);
    engine\shadowmap.cpp:21             VARP(blurshadowmap, 0, 1, 3);
    engine\shadowmap.cpp:22             VARP(blursmsigma, 1, 100, 200);
    engine\shadowmap.cpp:86             VARP(shadowmapbias, 0, 5, 1024);
    engine\shadowmap.cpp:87             VARP(shadowmappeelbias, 0, 20, 1024);
    engine\skelmodel.h:1                VARP(gpuskel, 0, 1, 1);
    engine\sound.cpp:695                VARP(minimizedsounds, 0, 0, 1);
    engine\sound.cpp:716                VARP(maxsoundsatonce, 0, 7, 100);
    engine\texture.cpp:2032             VARP(autocompactvslots, 0, 256, 0x10000);
    engine\texture.cpp:3321             VARP(compresspng, 0, 9, 9);
    engine\texture.cpp:3433             VARP(compresstga, 0, 1, 1);
    engine\texture.cpp:3515             VARP(screenshotquality, 0, 97, 100);
    engine\texture.cpp:3516             VARP(screenshotformat, 0, IMG_PNG, NUMIMG-1);
    engine\water.cpp:9                  VARP(watersubdiv, 0, 2, 3);
    engine\water.cpp:10                 VARP(waterlod, 0, 1, 3);
    engine\water.cpp:266                VARP(reflectdist, 0, 2000, 10000);
    engine\water.cpp:817                VARP(maxreflect, 1, 2, 8);
    engine\world.cpp:923                VARP(entcamdir, 0, 1, 1);
    engine\worldio.cpp:175              VARP(savebak, 0, 2, 2);
    fpsgame\capture.h:7                 VARP(capturetether, 0, 1, 1);
    fpsgame\capture.h:8                 VARP(autorepammo, 0, 1, 1);
    fpsgame\capture.h:9                 VARP(basenumbers, 0, 0, 1);
    fpsgame\client.cpp:5                VARP(minradarscale, 0, 384, 10000);
    fpsgame\client.cpp:6                VARP(maxradarscale, 1, 1024, 10000);
    fpsgame\client.cpp:7                VARP(radarteammates, 0, 1, 1);
    fpsgame\client.cpp:126              VARP(deadpush, 1, 2, 20);
    fpsgame\client.cpp:196              VARP(autoauth, 0, 1, 1);
    fpsgame\client.cpp:350              VARP(playersearch, 0, 3, 10);
    fpsgame\client.cpp:939              VARP(teamcolorchat, 0, 1, 1);
    fpsgame\fps.cpp:169                 VARP(smoothmove, 0, 75, 100);
    fpsgame\fps.cpp:170                 VARP(smoothdist, 0, 32, 64);
    fpsgame\fps.cpp:343                 VARP(spawnwait, 0, 0, 1000);
    fpsgame\fps.cpp:371                 VARP(attackspawn, 0, 1, 1);
    fpsgame\fps.cpp:379                 VARP(jumpspawn, 0, 1, 1);
    fpsgame\fps.cpp:394                 VARP(hitsound, 0, 0, 1);
    fpsgame\fps.cpp:425                 VARP(deathscore, 0, 1, 1);
    fpsgame\fps.cpp:455                 VARP(teamcolorfrags, 0, 1, 1);
    fpsgame\fps.cpp:600                 VARP(showmodeinfo, 0, 1, 1);
    fpsgame\fps.cpp:760                 VARP(teamcolortext, 0, 1, 1);
    fpsgame\fps.cpp:781                 VARP(teamsounds, 0, 1, 1);
    fpsgame\fps.cpp:858                 VARP(ammohud, 0, 1, 1);
    fpsgame\fps.cpp:901                 VARP(healthcolors, 0, 1, 1);
    fpsgame\fps.cpp:944                 VARP(gameclock, 0, 0, 1);
    fpsgame\fps.cpp:947                 VARP(gameclockalpha, 0, 255, 255);
    fpsgame\fps.cpp:949                 VARP(gameclockalign, -1, 0, 1);
    fpsgame\fps.cpp:980                 VARP(ammobar, 0, 0, 1);
    fpsgame\fps.cpp:981                 VARP(ammobaralign, -1, 0, 1);
    fpsgame\fps.cpp:982                 VARP(ammobarhorizontal, 0, 0, 1);
    fpsgame\fps.cpp:983                 VARP(ammobarflip, 0, 0, 1);
    fpsgame\fps.cpp:984                 VARP(ammobarhideempty, 0, 1, 1);
    fpsgame\fps.cpp:985                 VARP(ammobarsep, 0, 20, 500);
    fpsgame\fps.cpp:986                 VARP(ammobarcountsep, 0, 20, 500);
    fpsgame\fps.cpp:1103                VARP(teamcrosshair, 0, 1, 1);
    fpsgame\fps.cpp:1104                VARP(hitcrosshair, 0, 425, 1000);
    fpsgame\render.cpp:11               VARP(ragdoll, 0, 1, 1);
    fpsgame\render.cpp:12               VARP(ragdollmillis, 0, 10000, 300000);
    fpsgame\render.cpp:13               VARP(ragdollfade, 0, 1000, 300000);
    fpsgame\render.cpp:15               VARP(forceplayermodels, 0, 0, 1);
    fpsgame\render.cpp:16               VARP(hidedead, 0, 0, 2);
    fpsgame\render.cpp:192              VARP(teamskins, 0, 0, 1);
    fpsgame\render.cpp:228              VARP(statusicons, 0, 1, 1);
    fpsgame\render.cpp:268              VARP(statusbars, 0, 1, 2);
    fpsgame\render.cpp:358              VARP(hudgun, 0, 1, 1);
    fpsgame\render.cpp:359              VARP(hudgunsway, 0, 1, 1);
    fpsgame\render.cpp:360              VARP(teamhudguns, 0, 1, 1);
    fpsgame\render.cpp:361              VARP(chainsawhudgun, 0, 1, 1);
    fpsgame\scoreboard.cpp:6            VARP(scoreboard2d, 0, 1, 1);
    fpsgame\scoreboard.cpp:7            VARP(showservinfo, 0, 1, 1);
    fpsgame\scoreboard.cpp:8            VARP(showclientnum, 0, 0, 1);
    fpsgame\scoreboard.cpp:9            VARP(showpj, 0, 0, 1);
    fpsgame\scoreboard.cpp:10           VARP(showping, 0, 1, 2);
    fpsgame\scoreboard.cpp:11           VARP(showspectators, 0, 1, 1);
    fpsgame\scoreboard.cpp:12           VARP(showspectatorping, 0, 0, 1);
    fpsgame\scoreboard.cpp:13           VARP(highlightscore, 0, 1, 1);
    fpsgame\scoreboard.cpp:14           VARP(showconnecting, 0, 0, 1);
    fpsgame\scoreboard.cpp:15           VARP(hidefrags, 0, 1, 1);
    fpsgame\scoreboard.cpp:16           VARP(showdeaths, 0, 0, 1);
    fpsgame\scoreboard.cpp:17           VARP(tiesort, 0, 0, 2);
    fpsgame\scoreboard.cpp:484          VARP(hudscore, 0, 0, 1);
    fpsgame\scoreboard.cpp:486          VARP(hudscorealign, -1, 0, 1);
    fpsgame\scoreboard.cpp:491          VARP(hudscorealpha, 0, 255, 255);
    fpsgame\scoreboard.cpp:492          VARP(hudscoresep, 0, 200, 1000);
    fpsgame\weapon.cpp:17               VARP(maxdebris, 10, 25, 1000);
    fpsgame\weapon.cpp:18               VARP(maxbarreldebris, 5, 10, 1000);
    fpsgame\weapon.cpp:322              VARP(blood, 0, 1, 1);
    fpsgame\weapon.cpp:589              VARP(muzzleflash, 0, 1, 1);
    fpsgame\weapon.cpp:590              VARP(muzzlelight, 0, 1, 1);


VARR
    engine\grass.cpp:63                 VARR(grassanimmillis, 0, 3000, 60000);
    engine\grass.cpp:72                 VARR(grassscale, 1, 2, 64);
    engine\lightmap.cpp:77              VARR(lightprecision, 1, 32, 1024);
    engine\lightmap.cpp:78              VARR(lighterror, 1, 8, 16);
    engine\lightmap.cpp:79              VARR(bumperror, 1, 3, 16);
    engine\lightmap.cpp:80              VARR(lightlod, 0, 0, 10);
    engine\lightmap.cpp:128             VARR(skytexturelight, 0, 1, 1);
    engine\lightmap.cpp:674             VARR(blurlms, 0, 0, 2);
    engine\lightmap.cpp:675             VARR(blurskylight, 0, 0, 2);
    engine\normal.cpp:41                VARR(lerpangle, 0, 44, 180);
    engine\normal.cpp:144               VARR(lerpsubdiv, 0, 2, 4);
    engine\normal.cpp:145               VARR(lerpsubdivsize, 4, 4, 128);
    engine\rendergl.cpp:1133            VARR(fog, 16, 4000, 1000024);
    engine\rendergl.cpp:1365            VARR(refractsky, 0, 0, 1);
    engine\rendergl.cpp:1664            VARR(minimapheight, 0, 0, 2<<16);
    engine\rendergl.cpp:1670            VARR(minimapclip, 0, 0, 1);
    engine\rendersky.cpp:58             VARR(yawsky, 0, 0, 360);
    engine\rendersky.cpp:63             VARR(yawclouds, 0, 0, 360);
    engine\rendersky.cpp:72             VARR(yawcloudlayer, 0, 0, 360);
    engine\rendersky.cpp:76             VARR(cloudsubdiv, 4, 16, 64);
    engine\rendersky.cpp:180            VARR(fogdomecap, 0, 1, 1);
    engine\rendersky.cpp:184            VARR(fogdomeclouds, 0, 1, 1);
    engine\renderva.cpp:1448            VARR(causticscale, 0, 50, 10000);
    engine\renderva.cpp:1449            VARR(causticmillis, 0, 75, 1000);
    engine\texture.cpp:2671             VARR(envmapradius, 0, 128, 10000);
    engine\texture.cpp:2672             VARR(envmapbb, 0, 0, 1);
    engine\water.cpp:275                VARR(name##fog, 0, 150, 10000); \
    engine\water.cpp:276                VARR(name##spec, 0, 150, 1000); \
    engine\water.cpp:301                VARR(name##fog, 0, 50, 10000);
    engine\water.cpp:939                VARR(refractclear, 0, 0, 1);
    engine\world.cpp:5                  VARR(mapversion, 1, MAPVERSION, 0);


GLASSVARS
    engine\material.cpp:577             GLASSVARS(glass)
    engine\material.cpp:578             GLASSVARS(glass2)
    engine\material.cpp:579             GLASSVARS(glass3)
    engine\material.cpp:580             GLASSVARS(glass4)


LAVAVARS
    engine\water.cpp:303                LAVAVARS(lava)
    engine\water.cpp:304                LAVAVARS(lava2)
    engine\water.cpp:305                LAVAVARS(lava3)
    engine\water.cpp:306                LAVAVARS(lava4)


WATERVARS
    engine\water.cpp:282                WATERVARS(water)
    engine\water.cpp:283                WATERVARS(water2)
    engine\water.cpp:284                WATERVARS(water3)
    engine\water.cpp:285                WATERVARS(water4)


GETMATIDXVAR
    engine\material.cpp:582             GETMATIDXVAR(glass, colour, int)
    engine\material.cpp:583             GETMATIDXVAR(glass, color, const bvec &)
    engine\water.cpp:287                GETMATIDXVAR(water, colour, int)
    engine\water.cpp:288                GETMATIDXVAR(water, color, const bvec &)
    engine\water.cpp:289                GETMATIDXVAR(water, fallcolour, int)
    engine\water.cpp:290                GETMATIDXVAR(water, fallcolor, const bvec &)
    engine\water.cpp:291                GETMATIDXVAR(water, fog, int)
    engine\water.cpp:292                GETMATIDXVAR(water, spec, int)
    engine\water.cpp:308                GETMATIDXVAR(lava, colour, int)
    engine\water.cpp:309                GETMATIDXVAR(lava, color, const bvec &)
    engine\water.cpp:310                GETMATIDXVAR(lava, fog, int)

